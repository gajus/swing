{"version":3,"sources":["webpack:///swing.js","webpack:///webpack/bootstrap 9fbc3cd814b673326d05","webpack:///C:/bbm/src/swing-fork/src/index.js","webpack:///C:/bbm/src/swing-fork/src/stack.js","webpack:///../~/sister/src/sister.js","webpack:///../~/rebound/rebound.js","webpack:///../~/webpack/~/node-libs-browser/~/process/browser.js","webpack:///../~/webpack/~/node-libs-browser/~/timers-browserify/main.js","webpack:///C:/bbm/src/swing-fork/src/card.js","webpack:///../~/hammerjs/hammer.js","webpack:///../~/vendor-prefix/index.js","webpack:///C:/bbm/src/swing-fork/src/util.js","webpack:///../~/lodash/array/remove.js","webpack:///../~/lodash/internal/baseCallback.js","webpack:///../~/lodash/internal/baseMatches.js","webpack:///../~/lodash/internal/baseIsMatch.js","webpack:///../~/lodash/internal/baseIsEqual.js","webpack:///../~/lodash/internal/baseIsEqualDeep.js","webpack:///../~/lodash/internal/equalArrays.js","webpack:///../~/lodash/internal/arraySome.js","webpack:///../~/lodash/internal/equalByTag.js","webpack:///../~/lodash/internal/equalObjects.js","webpack:///../~/lodash/object/keys.js","webpack:///../~/lodash/internal/getNative.js","webpack:///../~/lodash/lang/isNative.js","webpack:///../~/lodash/lang/isFunction.js","webpack:///../~/lodash/lang/isObject.js","webpack:///../~/lodash/internal/isObjectLike.js","webpack:///../~/lodash/internal/isArrayLike.js","webpack:///../~/lodash/internal/getLength.js","webpack:///../~/lodash/internal/baseProperty.js","webpack:///../~/lodash/internal/isLength.js","webpack:///../~/lodash/internal/shimKeys.js","webpack:///../~/lodash/lang/isArguments.js","webpack:///../~/lodash/lang/isArray.js","webpack:///../~/lodash/internal/isIndex.js","webpack:///../~/lodash/object/keysIn.js","webpack:///../~/lodash/lang/isTypedArray.js","webpack:///../~/lodash/internal/toObject.js","webpack:///../~/lodash/internal/getMatchData.js","webpack:///../~/lodash/internal/isStrictComparable.js","webpack:///../~/lodash/object/pairs.js","webpack:///../~/lodash/internal/baseMatchesProperty.js","webpack:///../~/lodash/internal/baseGet.js","webpack:///../~/lodash/internal/baseSlice.js","webpack:///../~/lodash/internal/isKey.js","webpack:///../~/lodash/array/last.js","webpack:///../~/lodash/internal/toPath.js","webpack:///../~/lodash/internal/baseToString.js","webpack:///../~/lodash/internal/bindCallback.js","webpack:///../~/lodash/utility/identity.js","webpack:///../~/lodash/utility/property.js","webpack:///../~/lodash/internal/basePropertyDeep.js","webpack:///../~/lodash/internal/basePullAt.js","webpack:///../~/lodash/object/assign.js","webpack:///../~/lodash/internal/assignWith.js","webpack:///../~/lodash/internal/baseAssign.js","webpack:///../~/lodash/internal/baseCopy.js","webpack:///../~/lodash/internal/createAssigner.js","webpack:///../~/lodash/internal/isIterateeCall.js","webpack:///../~/lodash/function/restParam.js","webpack:///../~/lodash/number/random.js","webpack:///../~/lodash/internal/baseRandom.js","webpack:///../~/lodash/collection/find.js","webpack:///../~/lodash/internal/baseEach.js","webpack:///../~/lodash/internal/baseForOwn.js","webpack:///../~/lodash/internal/baseFor.js","webpack:///../~/lodash/internal/createBaseFor.js","webpack:///../~/lodash/internal/createBaseEach.js","webpack:///../~/lodash/internal/createFind.js","webpack:///../~/lodash/internal/baseFind.js","webpack:///../~/lodash/internal/baseFindIndex.js","webpack:///../~/lodash/collection/where.js","webpack:///../~/lodash/collection/filter.js","webpack:///../~/lodash/internal/arrayFilter.js","webpack:///../~/lodash/internal/baseFilter.js","webpack:///../~/raf/index.js","webpack:///../~/raf/~/performance-now/lib/performance-now.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_stack","_stack2","_card","_card2","gajus","Swing","Stack","Card","this","_sister","_sister2","_rebound","_rebound2","_util","_util2","undefined","config","construct","eventEmitter","index","springSystem","stack","SpringSystem","getConfig","getSpringSystem","on","eventName","listener","createCard","element","card","events","forEach","data","trigger","push","getCard","find","destroyCard","removedCards","remove","length","Sister","sister","name","handler","unshift","off","indexOf","splice","i","listeners","process","setImmediate","removeFirst","array","item","idx","rebound","util","concat","Array","prototype","slice","bind","func","context","args","arguments","apply","extend","target","source","key","hasOwnProperty","looper","_springRegistry","_activeSprings","_idleSpringIndices","AnimationLooper","_isIdle","_lastTimeMillis","setLooper","createSpring","tension","friction","springConfig","SpringConfig","DEFAULT_ORIGAMI_SPRING_CONFIG","fromOrigamiTensionAndFriction","createSpringWithConfig","createSpringWithBouncinessAndSpeed","bounciness","speed","fromBouncinessAndSpeed","spring","Spring","registerSpring","setSpringConfig","getIsIdle","getSpringById","getAllSprings","vals","getId","deregisterSpring","advance","time","deltaTime","pop","len","systemShouldAdvance","loop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","run","activateSpring","springId","addListener","removeListener","removeAllListeners","_id","_ID","_springSystem","_currentState","PhysicsState","_previousState","_tempState","MAX_DELTA_TIME_SEC","SOLVER_TIMESTEP_SEC","_springConfig","_overshootClampingEnabled","_startValue","_endValue","_wasAtRest","_restSpeedThreshold","_displacementFromRestThreshold","_timeAccumulator","destroy","frames","getSpringConfig","setCurrentValue","currentValue","skipSetAtRest","position","setAtRest","notifyPositionUpdated","getStartValue","getCurrentValue","getCurrentDisplacementDistance","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","isAtRest","onChange","onSpringEndStateChange","getEndValue","setVelocity","velocity","getVelocity","setRestSpeedThreshold","restSpeedThreshold","getRestSpeedThreshold","setRestDisplacementThreshold","displacementFromRestThreshold","getRestDisplacementThreshold","setOvershootClampingEnabled","enabled","isOvershootClampingEnabled","isOvershooting","start","end","realDeltaTime","adjustedDeltaTime","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","dVelocity","dAcceleration","dxdt","dvdt","tempPosition","tempVelocity","_interpolate","notifyActivate","notifyAtRest","onSpringActivate","onSpringUpdate","onSpringAtRest","wasAtRest","alpha","getListeners","newListener","listenerToRemove","currentValueIsApproximately","_this","_run","Date","now","onFrame","SimulationLooper","timestep","running","SteppingSimulationLooper","step","OrigamiValueConverter","tensionFromOrigamiValue","oValue","origamiValueFromTension","frictionFromOrigamiValue","origamiFromFriction","BouncyConversion","b","normalize","projectNormal","s","bouncyTension","bouncyFriction","quadraticOutInterpolation","b3Nobounce","startValue","n","linearInterpolation","t","b3Friction1","x","pow","b3Friction2","b3Friction3","bouncyConversion","coastingConfigWithOrigamiFriction","colorCache","hexToRGB","color","replace","parts","match","ret","r","parseInt","g","rgbToHex","toString","MathUtil","mapValueInRange","fromLow","fromHigh","toLow","toHigh","fromRangeSize","toRangeSize","valueScale","interpolateColor","val","startColor","endColor","asRGB","floor","degreesToRadians","deg","PI","radiansToDegrees","rad","_onFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","oRequestAnimationFrame","callback","setTimeout","title","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","clearTimeout","Item","fun","noop","nextTick","browser","env","argv","version","versions","once","emit","binding","Error","cwd","chdir","dir","umask","clearImmediate","Timeout","clearFn","_clearFn","Function","immediateIds","nextImmediateId","setInterval","clearInterval","close","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","fn","_hammerjs","_hammerjs2","_vendorPrefix","_vendorPrefix2","_utilJs","_utilJs2","_raf","_raf2","targetElement","currentX","currentY","doMove","isDraging","lastThrow","lastTranslate","lastX","lastY","mc","_onSpringUpdate","springThrowIn","springThrowOut","throwOutDistance","throwWhere","makeConfig","y","minThrowOutDistance","maxThrowOutDistance","Manager","recognizers","Pan","threshold","appendToParent","animation","e","deltaX","deltaY","isThrowOut","throwOutConfidence","throwOut","throwIn","fromX","fromY","direction","rotation","maxRotation","transform","throwDirection","DIRECTION_LEFT","DIRECTION_RIGHT","where","THROW_IN","THROW_OUT","defaultConfig","assign","style","parentNode","siblings","targetIndex","elementChildren","removeChild","appendChild","offset","min","offsetWidth","max","random","horizontalOffset","verticalOffset","__WEBPACK_AMD_DEFINE_RESULT__","document","exportName","setTimeoutContext","bindFn","invokeArrayArg","arg","isArray","each","iterator","deprecate","method","message","deprecationMessage","log","console","warn","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","splitStr","type","addEventListener","removeEventListeners","removeEventListener","hasParent","node","parent","inStr","str","trim","split","inArray","src","findByKey","toArray","uniqueArray","sort","results","values","a","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","self","options","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","overallVelocity","overallVelocityX","overallVelocityY","scale","getScale","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocityX","velocityY","last","lastInterval","COMPUTE_INTERVAL","v","clientX","round","clientY","DIRECTION_NONE","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","sqrt","atan2","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","allow","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","TouchAction","set","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","get","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","preset","handlers","touchAction","toggleCssProps","add","recognizeWith","requireFailure","cssProps","triggerDomEvent","event","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","createElement","TypeError","output","nextKey","dest","merge","keys","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM",2,3,4,5,"MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","compute","update","getTouchAction","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","Tap","Swipe","Pinch","Rotate","Press","freeGlobal","memo","capitalizedKey","prefixes","capitalize","charAt","dashedPrefix","prefixedKey","upper","hasPrefix","dash","_lodashArrayRemove","_lodashArrayRemove2","_lodashObjectAssign","_lodashObjectAssign2","_lodashNumberRandom","_lodashNumberRandom2","_lodashCollectionFind","_lodashCollectionFind2","_lodashCollectionWhere","_lodashCollectionWhere2","childNodes","nodeType","isTouchDevice","msMaxTouchPoints","predicate","thisArg","result","indexes","baseCallback","basePullAt","argCount","bindCallback","identity","baseMatches","baseMatchesProperty","matchData","getMatchData","object","toObject","baseIsMatch","customizer","noCustomizer","objValue","srcValue","baseIsEqual","other","isLoose","stackA","stackB","isObject","isObjectLike","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objToString","argsTag","objectTag","isTypedArray","objIsObj","othIsObj","isSameTag","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","objectProto","arrLength","othLength","arrValue","othValue","arraySome","tag","boolTag","dateTag","errorTag","numberTag","regexpTag","stringTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getNative","isArrayLike","shimKeys","nativeKeys","Ctor","isNative","isFunction","reIsNative","fnToString","reIsHostCtor","RegExp","funcTag","isLength","getLength","baseProperty","MAX_SAFE_INTEGER","keysIn","propsLength","allowIndexes","isArguments","isIndex","propertyIsEnumerable","nativeIsArray","reIsUint","isProto","skipIndexes","typedArrayTags","mapTag","setTag","weakMapTag","arrayBufferTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","pairs","isStrictComparable","path","isArr","isCommon","isKey","pathKey","toPath","baseGet","baseSlice","reIsPlainProp","reIsDeepProp","baseToString","rePropName","number","quote","string","reEscapeChar","collection","accumulator","basePropertyDeep","previous","arrayProto","assignWith","baseAssign","createAssigner","baseCopy","assigner","restParam","sources","guard","isIterateeCall","FUNC_ERROR_TEXT","nativeMax","rest","otherArgs","floating","noMin","noMax","rand","nativeRandom","nativeMin","parseFloat","baseRandom","nativeFloor","baseEach","createFind","baseForOwn","createBaseEach","iteratee","baseFor","createBaseFor","fromRight","keysFunc","iterable","eachFunc","baseFindIndex","baseFind","retKey","arrayFilter","baseFilter","resIndex","vendors","suffix","raf","caf","frameDuration","_now","next","cp","cancelled","handle","cancel","getNanoSeconds","hrtime","loadTime","performance","hr","getTime"],"mappings":"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","file":"swing.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _stack = __webpack_require__(1);\n\t\n\tvar _stack2 = _interopRequireDefault(_stack);\n\t\n\tvar _card = __webpack_require__(6);\n\t\n\tvar _card2 = _interopRequireDefault(_card);\n\t\n\tglobal.gajus = global.gajus || {};\n\t\n\tglobal.gajus.Swing = {\n\t    Stack: _stack2['default'],\n\t    Card: _card2['default']\n\t};\n\t\n\texports.Stack = _stack2['default'];\n\texports.Card = _card2['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _sister = __webpack_require__(2);\n\t\n\tvar _sister2 = _interopRequireDefault(_sister);\n\t\n\tvar _rebound = __webpack_require__(3);\n\t\n\tvar _rebound2 = _interopRequireDefault(_rebound);\n\t\n\tvar _card = __webpack_require__(6);\n\t\n\tvar _card2 = _interopRequireDefault(_card);\n\t\n\tvar _util = __webpack_require__(9);\n\t\n\tvar _util2 = _interopRequireDefault(_util);\n\t\n\tvar Stack = undefined;\n\t\n\t/**\r\n\t * @param {Object} config Stack configuration.\r\n\t * @return {Object} An instance of Stack object.\r\n\t */\n\tStack = function (config) {\n\t    var construct = undefined,\n\t        eventEmitter = undefined,\n\t        index = undefined,\n\t        springSystem = undefined,\n\t        stack = undefined;\n\t\n\t    construct = function () {\n\t        stack = {};\n\t        springSystem = new _rebound2['default'].SpringSystem();\n\t        eventEmitter = (0, _sister2['default'])();\n\t        index = [];\n\t    };\n\t\n\t    construct();\n\t\n\t    /**\r\n\t     * Get the configuration object.\r\n\t     *\r\n\t     * @return {Object}\r\n\t     */\n\t    stack.getConfig = function () {\n\t        return config;\n\t    };\n\t\n\t    /**\r\n\t     * Get a singleton instance of the SpringSystem physics engine.\r\n\t     *\r\n\t     * @return {Sister}\r\n\t     */\n\t    stack.getSpringSystem = function () {\n\t        return springSystem;\n\t    };\n\t\n\t    /**\r\n\t     * Proxy to the instance of the event emitter.\r\n\t     *\r\n\t     * @param {String} eventName\r\n\t     * @param {String} listener\r\n\t     * @return {undefined}\r\n\t     */\n\t    stack.on = function (eventName, listener) {\n\t        eventEmitter.on(eventName, listener);\n\t    };\n\t\n\t    /**\r\n\t     * Creates an instance of Card and associates it with an element.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @return {Card}\r\n\t     */\n\t    stack.createCard = function (element) {\n\t        var card = undefined,\n\t            events = undefined;\n\t\n\t        card = (0, _card2['default'])(stack, element);\n\t\n\t        events = ['throwout', 'throwoutend', 'throwoutleft', 'throwoutright', 'throwin', 'throwinend', 'dragstart', 'dragmove', 'dragend'];\n\t\n\t        // Proxy Card events to the Stack.\n\t        events.forEach(function (eventName) {\n\t            card.on(eventName, function (data) {\n\t                eventEmitter.trigger(eventName, data);\n\t            });\n\t        });\n\t\n\t        index.push({\n\t            element: element,\n\t            card: card\n\t        });\n\t\n\t        return card;\n\t    };\n\t\n\t    /**\r\n\t     * Returns an instance of Card associated with an element.\r\n\t     *\r\n\t     * @param {HTMLElement} element\r\n\t     * @return {Card|null}\r\n\t     */\n\t    stack.getCard = function (element) {\n\t        var card = undefined;\n\t\n\t        card = _util2['default'].find(index, {\n\t            element: element\n\t        });\n\t\n\t        if (card) {\n\t            return card.card;\n\t        }\n\t\n\t        return null;\n\t    };\n\t\n\t    /**\r\n\t     * Remove an instance of Card from the stack index.\r\n\t     *\r\n\t     * @param {Card} card\r\n\t     * @return {Card}\r\n\t     */\n\t    stack.destroyCard = function (card) {\n\t        var removedCards = undefined;\n\t\n\t        removedCards = _util2['default'].remove(index, {\n\t            card: card\n\t        });\n\t\n\t        if (removedCards && removedCards.length) {\n\t            return removedCards[0].card;\n\t        }\n\t\n\t        return null;\n\t    };\n\t\n\t    return stack;\n\t};\n\t\n\texports['default'] = Stack;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/**\n\t* @link https://github.com/gajus/sister for the canonical source repository\n\t* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause\n\t*/\n\tfunction Sister () {\n\t    var sister = {},\n\t        events = {};\n\t\n\t    /**\n\t     * @name handler\n\t     * @function\n\t     * @param {Object} data Event data.\n\t     */\n\t\n\t    /**\n\t     * @param {String} name Event name.\n\t     * @param {handler} handler\n\t     * @return {listener}\n\t     */\n\t    sister.on = function (name, handler) {\n\t        var listener = {name: name, handler: handler};\n\t        events[name] = events[name] || [];\n\t        events[name].unshift(listener);\n\t        return listener;\n\t    };\n\t\n\t    /**\n\t     * @param {listener}\n\t     */\n\t    sister.off = function (listener) {\n\t        var index = events[listener.name].indexOf(listener);\n\t\n\t        if (index != -1) {\n\t            events[listener.name].splice(index, 1);\n\t        }\n\t    };\n\t\n\t    /**\n\t     * @param {String} name Event name.\n\t     * @param {Object} data Event data.\n\t     */\n\t    sister.trigger = function (name, data) {\n\t        var listeners = events[name],\n\t            i;\n\t\n\t        if (listeners) {\n\t            i = listeners.length;\n\t            while (i--) {\n\t                listeners[i].handler(data);\n\t            }\n\t        }\n\t    };\n\t\n\t    return sister;\n\t}\n\t\n\tglobal.gajus = global.gajus || {};\n\tglobal.gajus.Sister = Sister;\n\t\n\tmodule.exports = Sister;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, setImmediate) {// Rebound\n\t// =======\n\t// **Rebound** is a simple library that models Spring dynamics for the\n\t// purpose of driving physical animations.\n\t//\n\t// Origin\n\t// ------\n\t// [Rebound](http://facebook.github.io/rebound) was originally written\n\t// in Java to provide a lightweight physics system for\n\t// [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and\n\t// [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\n\t// on Android. It's now been adopted by several other Android\n\t// applications. This JavaScript port was written to provide a quick\n\t// way to demonstrate Rebound animations on the web for a\n\t// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then\n\t// the JavaScript version has been used to build some really nice interfaces.\n\t// Check out [brandonwalkin.com](http://brandonwalkin.com) for an\n\t// example.\n\t//\n\t// Overview\n\t// --------\n\t// The Library provides a SpringSystem for maintaining a set of Spring\n\t// objects and iterating those Springs through a physics solver loop\n\t// until equilibrium is achieved. The Spring class is the basic\n\t// animation driver provided by Rebound. By attaching a listener to\n\t// a Spring, you can observe its motion. The observer function is\n\t// notified of position changes on the spring as it solves for\n\t// equilibrium. These position updates can be mapped to an animation\n\t// range to drive animated property updates on your user interface\n\t// elements (translation, rotation, scale, etc).\n\t//\n\t// Example\n\t// -------\n\t// Here's a simple example. Pressing and releasing on the logo below\n\t// will cause it to scale up and down with a springy animation.\n\t//\n\t// <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\n\t//   <img\n\t//     src=\"http://facebook.github.io/rebound/images/rebound.png\"\n\t//     id=\"logo\"\n\t//   />\n\t// </div>\n\t// <script src=\"../rebound.min.js\"></script>\n\t// <script>\n\t//\n\t// function scale(el, val) {\n\t//   el.style.mozTransform =\n\t//   el.style.msTransform =\n\t//   el.style.webkitTransform =\n\t//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\n\t// }\n\t// var el = document.getElementById('logo');\n\t//\n\t// var springSystem = new rebound.SpringSystem();\n\t// var spring = springSystem.createSpring(50, 3);\n\t// spring.addListener({\n\t//   onSpringUpdate: function(spring) {\n\t//     var val = spring.getCurrentValue();\n\t//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\n\t//     scale(el, val);\n\t//   }\n\t// });\n\t//\n\t// el.addEventListener('mousedown', function() {\n\t//   spring.setEndValue(1);\n\t// });\n\t//\n\t// el.addEventListener('mouseout', function() {\n\t//   spring.setEndValue(0);\n\t// });\n\t//\n\t// el.addEventListener('mouseup', function() {\n\t//   spring.setEndValue(0);\n\t// });\n\t//\n\t// </script>\n\t//\n\t// Here's how it works.\n\t//\n\t// ```\n\t// // Get a reference to the logo element.\n\t// var el = document.getElementById('logo');\n\t//\n\t// // create a SpringSystem and a Spring with a bouncy config.\n\t// var springSystem = new rebound.SpringSystem();\n\t// var spring = springSystem.createSpring(50, 3);\n\t//\n\t// // Add a listener to the spring. Every time the physics\n\t// // solver updates the Spring's value onSpringUpdate will\n\t// // be called.\n\t// spring.addListener({\n\t//   onSpringUpdate: function(spring) {\n\t//     var val = spring.getCurrentValue();\n\t//     val = rebound.MathUtil\n\t//                  .mapValueInRange(val, 0, 1, 1, 0.5);\n\t//     scale(el, val);\n\t//   }\n\t// });\n\t//\n\t// // Listen for mouse down/up/out and toggle the\n\t// //springs endValue from 0 to 1.\n\t// el.addEventListener('mousedown', function() {\n\t//   spring.setEndValue(1);\n\t// });\n\t//\n\t// el.addEventListener('mouseout', function() {\n\t//   spring.setEndValue(0);\n\t// });\n\t//\n\t// el.addEventListener('mouseup', function() {\n\t//   spring.setEndValue(0);\n\t// });\n\t//\n\t// // Helper for scaling an element with css transforms.\n\t// function scale(el, val) {\n\t//   el.style.mozTransform =\n\t//   el.style.msTransform =\n\t//   el.style.webkitTransform =\n\t//   el.style.transform = 'scale3d(' +\n\t//     val + ', ' + val + ', 1)';\n\t// }\n\t// ```\n\t\n\t(function() {\n\t  var rebound = {};\n\t  var util = rebound.util = {};\n\t  var concat = Array.prototype.concat;\n\t  var slice = Array.prototype.slice;\n\t\n\t  // Bind a function to a context object.\n\t  util.bind = function bind(func, context) {\n\t    var args = slice.call(arguments, 2);\n\t    return function() {\n\t      func.apply(context, concat.call(args, slice.call(arguments)));\n\t    };\n\t  };\n\t\n\t  // Add all the properties in the source to the target.\n\t  util.extend = function extend(target, source) {\n\t    for (var key in source) {\n\t      if (source.hasOwnProperty(key)) {\n\t        target[key] = source[key];\n\t      }\n\t    }\n\t  };\n\t\n\t  // SpringSystem\n\t  // ------------\n\t  // **SpringSystem** is a set of Springs that all run on the same physics\n\t  // timing loop. To get started with a Rebound animation you first\n\t  // create a new SpringSystem and then add springs to it.\n\t  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\n\t    this._springRegistry = {};\n\t    this._activeSprings = [];\n\t    this.listeners = [];\n\t    this._idleSpringIndices = [];\n\t    this.looper = looper || new AnimationLooper();\n\t    this.looper.springSystem = this;\n\t  };\n\t\n\t  util.extend(SpringSystem.prototype, {\n\t\n\t    _springRegistry: null,\n\t\n\t    _isIdle: true,\n\t\n\t    _lastTimeMillis: -1,\n\t\n\t    _activeSprings: null,\n\t\n\t    listeners: null,\n\t\n\t    _idleSpringIndices: null,\n\t\n\t    // A SpringSystem is iterated by a looper. The looper is responsible\n\t    // for executing each frame as the SpringSystem is resolved to idle.\n\t    // There are three types of Loopers described below AnimationLooper,\n\t    // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n\t    // the default as it is the most useful for common UI animations.\n\t    setLooper: function(looper) {\n\t      this.looper = looper;\n\t      looper.springSystem = this;\n\t    },\n\t\n\t    // Add a new spring to this SpringSystem. This Spring will now be solved for\n\t    // during the physics iteration loop. By default the spring will use the\n\t    // default Origami spring config with 40 tension and 7 friction, but you can\n\t    // also provide your own values here.\n\t    createSpring: function(tension, friction) {\n\t      var springConfig;\n\t      if (tension === undefined || friction === undefined) {\n\t        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n\t      } else {\n\t        springConfig =\n\t          SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n\t      }\n\t      return this.createSpringWithConfig(springConfig);\n\t    },\n\t\n\t    // Add a spring with a specified bounciness and speed. To replicate Origami\n\t    // compositions based on PopAnimation patches, use this factory method to\n\t    // create matching springs.\n\t    createSpringWithBouncinessAndSpeed: function(bounciness, speed) {\n\t      var springConfig;\n\t      if (bounciness === undefined || speed === undefined) {\n\t        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n\t      } else {\n\t        springConfig =\n\t          SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n\t      }\n\t      return this.createSpringWithConfig(springConfig);\n\t    },\n\t\n\t    // Add a spring with the provided SpringConfig.\n\t    createSpringWithConfig: function(springConfig) {\n\t      var spring = new Spring(this);\n\t      this.registerSpring(spring);\n\t      spring.setSpringConfig(springConfig);\n\t      return spring;\n\t    },\n\t\n\t    // You can check if a SpringSystem is idle or active by calling\n\t    // getIsIdle. If all of the Springs in the SpringSystem are at rest,\n\t    // i.e. the physics forces have reached equilibrium, then this\n\t    // method will return true.\n\t    getIsIdle: function() {\n\t      return this._isIdle;\n\t    },\n\t\n\t    // Retrieve a specific Spring from the SpringSystem by id. This\n\t    // can be useful for inspecting the state of a spring before\n\t    // or after an integration loop in the SpringSystem executes.\n\t    getSpringById: function (id) {\n\t      return this._springRegistry[id];\n\t    },\n\t\n\t    // Get a listing of all the springs registered with this\n\t    // SpringSystem.\n\t    getAllSprings: function() {\n\t      var vals = [];\n\t      for (var id in this._springRegistry) {\n\t        if (this._springRegistry.hasOwnProperty(id)) {\n\t          vals.push(this._springRegistry[id]);\n\t        }\n\t      }\n\t      return vals;\n\t    },\n\t\n\t    // registerSpring is called automatically as soon as you create\n\t    // a Spring with SpringSystem#createSpring. This method sets the\n\t    // spring up in the registry so that it can be solved in the\n\t    // solver loop.\n\t    registerSpring: function(spring) {\n\t      this._springRegistry[spring.getId()] = spring;\n\t    },\n\t\n\t    // Deregister a spring with this SpringSystem. The SpringSystem will\n\t    // no longer consider this Spring during its integration loop once\n\t    // this is called. This is normally done automatically for you when\n\t    // you call Spring#destroy.\n\t    deregisterSpring: function(spring) {\n\t      removeFirst(this._activeSprings, spring);\n\t      delete this._springRegistry[spring.getId()];\n\t    },\n\t\n\t    advance: function(time, deltaTime) {\n\t      while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();\n\t      for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n\t        var spring = this._activeSprings[i];\n\t        if (spring.systemShouldAdvance()) {\n\t          spring.advance(time / 1000.0, deltaTime / 1000.0);\n\t        } else {\n\t          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n\t        }\n\t      }\n\t      while(this._idleSpringIndices.length > 0) {\n\t        var idx = this._idleSpringIndices.pop();\n\t        idx >= 0 && this._activeSprings.splice(idx, 1);\n\t      }\n\t    },\n\t\n\t    // This is our main solver loop called to move the simulation\n\t    // forward through time. Before each pass in the solver loop\n\t    // onBeforeIntegrate is called on an any listeners that have\n\t    // registered themeselves with the SpringSystem. This gives you\n\t    // an opportunity to apply any constraints or adjustments to\n\t    // the springs that should be enforced before each iteration\n\t    // loop. Next the advance method is called to move each Spring in\n\t    // the systemShouldAdvance forward to the current time. After the\n\t    // integration step runs in advance, onAfterIntegrate is called\n\t    // on any listeners that have registered themselves with the\n\t    // SpringSystem. This gives you an opportunity to run any post\n\t    // integration constraints or adjustments on the Springs in the\n\t    // SpringSystem.\n\t    loop: function(currentTimeMillis) {\n\t      var listener;\n\t      if (this._lastTimeMillis === -1) {\n\t        this._lastTimeMillis = currentTimeMillis -1;\n\t      }\n\t      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n\t      this._lastTimeMillis = currentTimeMillis;\n\t\n\t      var i = 0, len = this.listeners.length;\n\t      for (i = 0; i < len; i++) {\n\t        listener = this.listeners[i];\n\t        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n\t      }\n\t\n\t      this.advance(currentTimeMillis, ellapsedMillis);\n\t      if (this._activeSprings.length === 0) {\n\t        this._isIdle = true;\n\t        this._lastTimeMillis = -1;\n\t      }\n\t\n\t      for (i = 0; i < len; i++) {\n\t        listener = this.listeners[i];\n\t        listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n\t      }\n\t\n\t      if (!this._isIdle) {\n\t        this.looper.run();\n\t      }\n\t    },\n\t\n\t    // activateSpring is used to notify the SpringSystem that a Spring\n\t    // has become displaced. The system responds by starting its solver\n\t    // loop up if it is currently idle.\n\t    activateSpring: function(springId) {\n\t      var spring = this._springRegistry[springId];\n\t      if (this._activeSprings.indexOf(spring) == -1) {\n\t        this._activeSprings.push(spring);\n\t      }\n\t      if (this.getIsIdle()) {\n\t        this._isIdle = false;\n\t        this.looper.run();\n\t      }\n\t    },\n\t\n\t    // Add a listener to the SpringSystem so that you can receive\n\t    // before/after integration notifications allowing Springs to be\n\t    // constrained or adjusted.\n\t    addListener: function(listener) {\n\t      this.listeners.push(listener);\n\t    },\n\t\n\t    // Remove a previously added listener on the SpringSystem.\n\t    removeListener: function(listener) {\n\t      removeFirst(this.listeners, listener);\n\t    },\n\t\n\t    // Remove all previously added listeners on the SpringSystem.\n\t    removeAllListeners: function() {\n\t      this.listeners = [];\n\t    }\n\t\n\t  });\n\t\n\t  // Spring\n\t  // ------\n\t  // **Spring** provides a model of a classical spring acting to\n\t  // resolve a body to equilibrium. Springs have configurable\n\t  // tension which is a force multipler on the displacement of the\n\t  // spring from its rest point or `endValue` as defined by [Hooke's\n\t  // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n\t  // configurable friction, which ensures that they do not oscillate\n\t  // infinitely. When a Spring is displaced by updating it's resting\n\t  // or `currentValue`, the SpringSystems that contain that Spring\n\t  // will automatically start looping to solve for equilibrium. As each\n\t  // timestep passes, `SpringListener` objects attached to the Spring\n\t  // will be notified of the updates providing a way to drive an\n\t  // animation off of the spring's resolution curve.\n\t  var Spring = rebound.Spring = function Spring(springSystem) {\n\t    this._id = 's' + Spring._ID++;\n\t    this._springSystem = springSystem;\n\t    this.listeners = [];\n\t    this._currentState = new PhysicsState();\n\t    this._previousState = new PhysicsState();\n\t    this._tempState = new PhysicsState();\n\t  };\n\t\n\t  util.extend(Spring, {\n\t    _ID: 0,\n\t\n\t    MAX_DELTA_TIME_SEC: 0.064,\n\t\n\t    SOLVER_TIMESTEP_SEC: 0.001\n\t\n\t  });\n\t\n\t  util.extend(Spring.prototype, {\n\t\n\t    _id: 0,\n\t\n\t    _springConfig: null,\n\t\n\t    _overshootClampingEnabled: false,\n\t\n\t    _currentState: null,\n\t\n\t    _previousState: null,\n\t\n\t    _tempState: null,\n\t\n\t    _startValue: 0,\n\t\n\t    _endValue: 0,\n\t\n\t    _wasAtRest: true,\n\t\n\t    _restSpeedThreshold: 0.001,\n\t\n\t    _displacementFromRestThreshold: 0.001,\n\t\n\t    listeners: null,\n\t\n\t    _timeAccumulator: 0,\n\t\n\t    _springSystem: null,\n\t\n\t    // Remove a Spring from simulation and clear its listeners.\n\t    destroy: function() {\n\t      this.listeners = [];\n\t      this.frames = [];\n\t      this._springSystem.deregisterSpring(this);\n\t    },\n\t\n\t    // Get the id of the spring, which can be used to retrieve it from\n\t    // the SpringSystems it participates in later.\n\t    getId: function() {\n\t      return this._id;\n\t    },\n\t\n\t    // Set the configuration values for this Spring. A SpringConfig\n\t    // contains the tension and friction values used to solve for the\n\t    // equilibrium of the Spring in the physics loop.\n\t    setSpringConfig: function(springConfig) {\n\t      this._springConfig = springConfig;\n\t      return this;\n\t    },\n\t\n\t    // Retrieve the SpringConfig used by this Spring.\n\t    getSpringConfig: function() {\n\t      return this._springConfig;\n\t    },\n\t\n\t    // Set the current position of this Spring. Listeners will be updated\n\t    // with this value immediately. If the rest or `endValue` is not\n\t    // updated to match this value, then the spring will be dispalced and\n\t    // the SpringSystem will start to loop to restore the spring to the\n\t    // `endValue`.\n\t    //\n\t    // A common pattern is to move a Spring around without animation by\n\t    // calling.\n\t    //\n\t    // ```\n\t    // spring.setCurrentValue(n).setAtRest();\n\t    // ```\n\t    //\n\t    // This moves the Spring to a new position `n`, sets the endValue\n\t    // to `n`, and removes any velocity from the `Spring`. By doing\n\t    // this you can allow the `SpringListener` to manage the position\n\t    // of UI elements attached to the spring even when moving without\n\t    // animation. For example, when dragging an element you can\n\t    // update the position of an attached view through a spring\n\t    // by calling `spring.setCurrentValue(x)`. When\n\t    // the gesture ends you can update the Springs\n\t    // velocity and endValue\n\t    // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n\t    // to cause it to naturally animate the UI element to the resting\n\t    // position taking into account existing velocity. The codepaths for\n\t    // synchronous movement and spring driven animation can\n\t    // be unified using this technique.\n\t    setCurrentValue: function(currentValue, skipSetAtRest) {\n\t      this._startValue = currentValue;\n\t      this._currentState.position = currentValue;\n\t      if (!skipSetAtRest) {\n\t        this.setAtRest();\n\t      }\n\t      this.notifyPositionUpdated(false, false);\n\t      return this;\n\t    },\n\t\n\t    // Get the position that the most recent animation started at. This\n\t    // can be useful for determining the number off oscillations that\n\t    // have occurred.\n\t    getStartValue: function() {\n\t      return this._startValue;\n\t    },\n\t\n\t    // Retrieve the current value of the Spring.\n\t    getCurrentValue: function() {\n\t      return this._currentState.position;\n\t    },\n\t\n\t    // Get the absolute distance of the Spring from it's resting endValue\n\t    // position.\n\t    getCurrentDisplacementDistance: function() {\n\t      return this.getDisplacementDistanceForState(this._currentState);\n\t    },\n\t\n\t    getDisplacementDistanceForState: function(state) {\n\t      return Math.abs(this._endValue - state.position);\n\t    },\n\t\n\t    // Set the endValue or resting position of the spring. If this\n\t    // value is different than the current value, the SpringSystem will\n\t    // be notified and will begin running its solver loop to resolve\n\t    // the Spring to equilibrium. Any listeners that are registered\n\t    // for onSpringEndStateChange will also be notified of this update\n\t    // immediately.\n\t    setEndValue: function(endValue) {\n\t      if (this._endValue == endValue && this.isAtRest())  {\n\t        return this;\n\t      }\n\t      this._startValue = this.getCurrentValue();\n\t      this._endValue = endValue;\n\t      this._springSystem.activateSpring(this.getId());\n\t      for (var i = 0, len = this.listeners.length; i < len; i++) {\n\t        var listener = this.listeners[i];\n\t        var onChange = listener.onSpringEndStateChange;\n\t        onChange && onChange(this);\n\t      }\n\t      return this;\n\t    },\n\t\n\t    // Retrieve the endValue or resting position of this spring.\n\t    getEndValue: function() {\n\t      return this._endValue;\n\t    },\n\t\n\t    // Set the current velocity of the Spring. As previously mentioned,\n\t    // this can be useful when you are performing a direct manipulation\n\t    // gesture. When a UI element is released you may call setVelocity\n\t    // on its animation Spring so that the Spring continues with the\n\t    // same velocity as the gesture ended with. The friction, tension,\n\t    // and displacement of the Spring will then govern its motion to\n\t    // return to rest on a natural feeling curve.\n\t    setVelocity: function(velocity) {\n\t      if (velocity === this._currentState.velocity) {\n\t        return this;\n\t      }\n\t      this._currentState.velocity = velocity;\n\t      this._springSystem.activateSpring(this.getId());\n\t      return this;\n\t    },\n\t\n\t    // Get the current velocity of the Spring.\n\t    getVelocity: function() {\n\t      return this._currentState.velocity;\n\t    },\n\t\n\t    // Set a threshold value for the movement speed of the Spring below\n\t    // which it will be considered to be not moving or resting.\n\t    setRestSpeedThreshold: function(restSpeedThreshold) {\n\t      this._restSpeedThreshold = restSpeedThreshold;\n\t      return this;\n\t    },\n\t\n\t    // Retrieve the rest speed threshold for this Spring.\n\t    getRestSpeedThreshold: function() {\n\t      return this._restSpeedThreshold;\n\t    },\n\t\n\t    // Set a threshold value for displacement below which the Spring\n\t    // will be considered to be not displaced i.e. at its resting\n\t    // `endValue`.\n\t    setRestDisplacementThreshold: function(displacementFromRestThreshold) {\n\t      this._displacementFromRestThreshold = displacementFromRestThreshold;\n\t    },\n\t\n\t    // Retrieve the rest displacement threshold for this spring.\n\t    getRestDisplacementThreshold: function() {\n\t      return this._displacementFromRestThreshold;\n\t    },\n\t\n\t    // Enable overshoot clamping. This means that the Spring will stop\n\t    // immediately when it reaches its resting position regardless of\n\t    // any existing momentum it may have. This can be useful for certain\n\t    // types of animations that should not oscillate such as a scale\n\t    // down to 0 or alpha fade.\n\t    setOvershootClampingEnabled: function(enabled) {\n\t      this._overshootClampingEnabled = enabled;\n\t      return this;\n\t    },\n\t\n\t    // Check if overshoot clamping is enabled for this spring.\n\t    isOvershootClampingEnabled: function() {\n\t      return this._overshootClampingEnabled;\n\t    },\n\t\n\t    // Check if the Spring has gone past its end point by comparing\n\t    // the direction it was moving in when it started to the current\n\t    // position and end value.\n\t    isOvershooting: function() {\n\t      var start = this._startValue;\n\t      var end = this._endValue;\n\t      return this._springConfig.tension > 0 &&\n\t       ((start < end && this.getCurrentValue() > end) ||\n\t       (start > end && this.getCurrentValue() < end));\n\t    },\n\t\n\t    // Spring.advance is the main solver method for the Spring. It takes\n\t    // the current time and delta since the last time step and performs\n\t    // an RK4 integration to get the new position and velocity state\n\t    // for the Spring based on the tension, friction, velocity, and\n\t    // displacement of the Spring.\n\t    advance: function(time, realDeltaTime) {\n\t      var isAtRest = this.isAtRest();\n\t\n\t      if (isAtRest && this._wasAtRest) {\n\t        return;\n\t      }\n\t\n\t      var adjustedDeltaTime = realDeltaTime;\n\t      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n\t        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n\t      }\n\t\n\t      this._timeAccumulator += adjustedDeltaTime;\n\t\n\t      var tension = this._springConfig.tension,\n\t          friction = this._springConfig.friction,\n\t\n\t          position = this._currentState.position,\n\t          velocity = this._currentState.velocity,\n\t          tempPosition = this._tempState.position,\n\t          tempVelocity = this._tempState.velocity,\n\t\n\t          aVelocity, aAcceleration,\n\t          bVelocity, bAcceleration,\n\t          cVelocity, cAcceleration,\n\t          dVelocity, dAcceleration,\n\t\n\t          dxdt, dvdt;\n\t\n\t      while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n\t\n\t        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\t\n\t        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n\t          this._previousState.position = position;\n\t          this._previousState.velocity = velocity;\n\t        }\n\t\n\t        aVelocity = velocity;\n\t        aAcceleration =\n\t          (tension * (this._endValue - tempPosition)) - friction * velocity;\n\t\n\t        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        tempVelocity =\n\t          velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        bVelocity = tempVelocity;\n\t        bAcceleration =\n\t          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\t\n\t        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        tempVelocity =\n\t          velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        cVelocity = tempVelocity;\n\t        cAcceleration =\n\t          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\t\n\t        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        tempVelocity =\n\t          velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n\t        dVelocity = tempVelocity;\n\t        dAcceleration =\n\t          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\t\n\t        dxdt =\n\t          1.0/6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n\t        dvdt = 1.0/6.0 * (\n\t          aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration\n\t        );\n\t\n\t        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n\t        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n\t      }\n\t\n\t      this._tempState.position = tempPosition;\n\t      this._tempState.velocity = tempVelocity;\n\t\n\t      this._currentState.position = position;\n\t      this._currentState.velocity = velocity;\n\t\n\t      if (this._timeAccumulator > 0) {\n\t        this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n\t      }\n\t\n\t      if (this.isAtRest() ||\n\t          this._overshootClampingEnabled && this.isOvershooting()) {\n\t\n\t        if (this._springConfig.tension > 0) {\n\t          this._startValue = this._endValue;\n\t          this._currentState.position = this._endValue;\n\t        } else {\n\t          this._endValue = this._currentState.position;\n\t          this._startValue = this._endValue;\n\t        }\n\t        this.setVelocity(0);\n\t        isAtRest = true;\n\t      }\n\t\n\t      var notifyActivate = false;\n\t      if (this._wasAtRest) {\n\t        this._wasAtRest = false;\n\t        notifyActivate = true;\n\t      }\n\t\n\t      var notifyAtRest = false;\n\t      if (isAtRest) {\n\t        this._wasAtRest = true;\n\t        notifyAtRest = true;\n\t      }\n\t\n\t      this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n\t    },\n\t\n\t    notifyPositionUpdated: function(notifyActivate, notifyAtRest) {\n\t      for (var i = 0, len = this.listeners.length; i < len; i++) {\n\t        var listener = this.listeners[i];\n\t        if (notifyActivate && listener.onSpringActivate) {\n\t          listener.onSpringActivate(this);\n\t        }\n\t\n\t        if (listener.onSpringUpdate) {\n\t          listener.onSpringUpdate(this);\n\t        }\n\t\n\t        if (notifyAtRest && listener.onSpringAtRest) {\n\t          listener.onSpringAtRest(this);\n\t        }\n\t      }\n\t    },\n\t\n\t\n\t    // Check if the SpringSystem should advance. Springs are advanced\n\t    // a final frame after they reach equilibrium to ensure that the\n\t    // currentValue is exactly the requested endValue regardless of the\n\t    // displacement threshold.\n\t    systemShouldAdvance: function() {\n\t      return !this.isAtRest() || !this.wasAtRest();\n\t    },\n\t\n\t    wasAtRest: function() {\n\t      return this._wasAtRest;\n\t    },\n\t\n\t    // Check if the Spring is atRest meaning that it's currentValue and\n\t    // endValue are the same and that it has no velocity. The previously\n\t    // described thresholds for speed and displacement define the bounds\n\t    // of this equivalence check. If the Spring has 0 tension, then it will\n\t    // be considered at rest whenever its absolute velocity drops below the\n\t    // restSpeedThreshold.\n\t    isAtRest: function() {\n\t      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n\t        (this.getDisplacementDistanceForState(this._currentState) <=\n\t          this._displacementFromRestThreshold ||\n\t        this._springConfig.tension === 0);\n\t    },\n\t\n\t    // Force the spring to be at rest at its current position. As\n\t    // described in the documentation for setCurrentValue, this method\n\t    // makes it easy to do synchronous non-animated updates to ui\n\t    // elements that are attached to springs via SpringListeners.\n\t    setAtRest: function() {\n\t      this._endValue = this._currentState.position;\n\t      this._tempState.position = this._currentState.position;\n\t      this._currentState.velocity = 0;\n\t      return this;\n\t    },\n\t\n\t    _interpolate: function(alpha) {\n\t      this._currentState.position = this._currentState.position *\n\t        alpha + this._previousState.position * (1 - alpha);\n\t      this._currentState.velocity = this._currentState.velocity *\n\t        alpha + this._previousState.velocity * (1 - alpha);\n\t    },\n\t\n\t    getListeners: function() {\n\t      return this.listeners;\n\t    },\n\t\n\t    addListener: function(newListener) {\n\t      this.listeners.push(newListener);\n\t      return this;\n\t    },\n\t\n\t    removeListener: function(listenerToRemove) {\n\t      removeFirst(this.listeners, listenerToRemove);\n\t      return this;\n\t    },\n\t\n\t    removeAllListeners: function() {\n\t      this.listeners = [];\n\t      return this;\n\t    },\n\t\n\t    currentValueIsApproximately: function(value) {\n\t      return Math.abs(this.getCurrentValue() - value) <=\n\t        this.getRestDisplacementThreshold();\n\t    }\n\t\n\t  });\n\t\n\t  // PhysicsState\n\t  // ------------\n\t  // **PhysicsState** consists of a position and velocity. A Spring uses\n\t  // this internally to keep track of its current and prior position and\n\t  // velocity values.\n\t  var PhysicsState = function PhysicsState() {};\n\t\n\t  util.extend(PhysicsState.prototype, {\n\t    position: 0,\n\t    velocity: 0\n\t  });\n\t\n\t  // SpringConfig\n\t  // ------------\n\t  // **SpringConfig** maintains a set of tension and friction constants\n\t  // for a Spring. You can use fromOrigamiTensionAndFriction to convert\n\t  // values from the [Origami](http://facebook.github.io/origami/)\n\t  // design tool directly to Rebound spring constants.\n\t  var SpringConfig = rebound.SpringConfig =\n\t    function SpringConfig(tension, friction) {\n\t      this.tension = tension;\n\t      this.friction = friction;\n\t    };\n\t\n\t  // Loopers\n\t  // -------\n\t  // **AnimationLooper** plays each frame of the SpringSystem on animation\n\t  // timing loop. This is the default type of looper for a new spring system\n\t  // as it is the most common when developing UI.\n\t  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\n\t    this.springSystem = null;\n\t    var _this = this;\n\t    var _run = function() {\n\t      _this.springSystem.loop(Date.now());\n\t    };\n\t\n\t    this.run = function() {\n\t      util.onFrame(_run);\n\t    };\n\t  };\n\t\n\t  // **SimulationLooper** resolves the SpringSystem to a resting state in a\n\t  // tight and blocking loop. This is useful for synchronously generating\n\t  // pre-recorded animations that can then be played on a timing loop later.\n\t  // Sometimes this lead to better performance to pre-record a single spring\n\t  // curve and use it to drive many animations; however, it can make dynamic\n\t  // response to user input a bit trickier to implement.\n\t  rebound.SimulationLooper = function SimulationLooper(timestep) {\n\t    this.springSystem = null;\n\t    var time = 0;\n\t    var running = false;\n\t    timestep=timestep || 16.667;\n\t\n\t    this.run = function() {\n\t      if (running) {\n\t        return;\n\t      }\n\t      running = true;\n\t      while(!this.springSystem.getIsIdle()) {\n\t        this.springSystem.loop(time+=timestep);\n\t      }\n\t      running = false;\n\t    };\n\t  };\n\t\n\t  // **SteppingSimulationLooper** resolves the SpringSystem one step at a\n\t  // time controlled by an outside loop. This is useful for testing and\n\t  // verifying the behavior of a SpringSystem or if you want to control your own\n\t  // timing loop for some reason e.g. slowing down or speeding up the\n\t  // simulation.\n\t  rebound.SteppingSimulationLooper = function(timestep) {\n\t    this.springSystem = null;\n\t    var time = 0;\n\t\n\t    // this.run is NOOP'd here to allow control from the outside using\n\t    // this.step.\n\t    this.run = function(){};\n\t\n\t    // Perform one step toward resolving the SpringSystem.\n\t    this.step = function(timestep) {\n\t      this.springSystem.loop(time+=timestep);\n\t    };\n\t  };\n\t\n\t  // Math for converting from\n\t  // [Origami](http://facebook.github.io/origami/) to\n\t  // [Rebound](http://facebook.github.io/rebound).\n\t  // You mostly don't need to worry about this, just use\n\t  // SpringConfig.fromOrigamiTensionAndFriction(v, v);\n\t  var OrigamiValueConverter = rebound.OrigamiValueConverter = {\n\t    tensionFromOrigamiValue: function(oValue) {\n\t      return (oValue - 30.0) * 3.62 + 194.0;\n\t    },\n\t\n\t    origamiValueFromTension: function(tension) {\n\t      return (tension - 194.0) / 3.62 + 30.0;\n\t    },\n\t\n\t    frictionFromOrigamiValue: function(oValue) {\n\t      return (oValue - 8.0) * 3.0 + 25.0;\n\t    },\n\t\n\t    origamiFromFriction: function(friction) {\n\t      return (friction - 25.0) / 3.0 + 8.0;\n\t    }\n\t  };\n\t\n\t  // BouncyConversion provides math for converting from Origami PopAnimation\n\t  // config values to regular Origami tension and friction values. If you are\n\t  // trying to replicate prototypes made with PopAnimation patches in Origami,\n\t  // then you should create your springs with\n\t  // SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n\t  // internally to create a spring to match the provided PopAnimation\n\t  // configuration from Origami.\n\t  var BouncyConversion = rebound.BouncyConversion = function(bounciness, speed){\n\t    this.bounciness = bounciness;\n\t    this.speed = speed;\n\t    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n\t    b = this.projectNormal(b, 0.0, 0.8);\n\t    var s = this.normalize(speed / 1.7, 0, 20.0);\n\t    this.bouncyTension = this.projectNormal(s, 0.5, 200)\n\t    this.bouncyFriction = this.quadraticOutInterpolation(\n\t      b,\n\t      this.b3Nobounce(this.bouncyTension),\n\t      0.01);\n\t  }\n\t\n\t  util.extend(BouncyConversion.prototype, {\n\t\n\t    normalize: function(value, startValue, endValue) {\n\t      return (value - startValue) / (endValue - startValue);\n\t    },\n\t\n\t    projectNormal: function(n, start, end) {\n\t      return start + (n * (end - start));\n\t    },\n\t\n\t    linearInterpolation: function(t, start, end) {\n\t      return t * end + (1.0 - t) * start;\n\t    },\n\t\n\t    quadraticOutInterpolation: function(t, start, end) {\n\t      return this.linearInterpolation(2*t - t*t, start, end);\n\t    },\n\t\n\t    b3Friction1: function(x) {\n\t      return (0.0007 * Math.pow(x, 3)) -\n\t        (0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;\n\t    },\n\t\n\t    b3Friction2: function(x) {\n\t      return (0.000044 * Math.pow(x, 3)) -\n\t        (0.006 * Math.pow(x, 2)) + 0.36 * x + 2.;\n\t    },\n\t\n\t    b3Friction3: function(x) {\n\t      return (0.00000045 * Math.pow(x, 3)) -\n\t        (0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;\n\t    },\n\t\n\t    b3Nobounce: function(tension) {\n\t      var friction = 0;\n\t      if (tension <= 18) {\n\t        friction = this.b3Friction1(tension);\n\t      } else if (tension > 18 && tension <= 44) {\n\t        friction = this.b3Friction2(tension);\n\t      } else {\n\t        friction = this.b3Friction3(tension);\n\t      }\n\t      return friction;\n\t    }\n\t  });\n\t\n\t  util.extend(SpringConfig, {\n\t    // Convert an origami Spring tension and friction to Rebound spring\n\t    // constants. If you are prototyping a design with Origami, this\n\t    // makes it easy to make your springs behave exactly the same in\n\t    // Rebound.\n\t    fromOrigamiTensionAndFriction: function(tension, friction) {\n\t      return new SpringConfig(\n\t        OrigamiValueConverter.tensionFromOrigamiValue(tension),\n\t        OrigamiValueConverter.frictionFromOrigamiValue(friction));\n\t    },\n\t\n\t    // Convert an origami PopAnimation Spring bounciness and speed to Rebound\n\t    // spring constants. If you are using PopAnimation patches in Origami, this\n\t    // utility will provide springs that match your prototype.\n\t    fromBouncinessAndSpeed: function(bounciness, speed) {\n\t      var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);\n\t      return this.fromOrigamiTensionAndFriction(\n\t        bouncyConversion.bouncyTension,\n\t        bouncyConversion.bouncyFriction);\n\t    },\n\t\n\t    // Create a SpringConfig with no tension or a coasting spring with some\n\t    // amount of Friction so that it does not coast infininitely.\n\t    coastingConfigWithOrigamiFriction: function(friction) {\n\t      return new SpringConfig(\n\t        0,\n\t        OrigamiValueConverter.frictionFromOrigamiValue(friction)\n\t      );\n\t    }\n\t  });\n\t\n\t  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG =\n\t    SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\t\n\t  util.extend(SpringConfig.prototype, {friction: 0, tension: 0});\n\t\n\t  // Here are a couple of function to convert colors between hex codes and RGB\n\t  // component values. These are handy when performing color\n\t  // tweening animations.\n\t  var colorCache = {};\n\t  util.hexToRGB = function(color) {\n\t    if (colorCache[color]) {\n\t      return colorCache[color];\n\t    }\n\t    color = color.replace('#', '');\n\t    if (color.length === 3) {\n\t      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n\t    }\n\t    var parts = color.match(/.{2}/g);\n\t\n\t    var ret = {\n\t      r: parseInt(parts[0], 16),\n\t      g: parseInt(parts[1], 16),\n\t      b: parseInt(parts[2], 16)\n\t    };\n\t\n\t    colorCache[color] = ret;\n\t    return ret;\n\t  };\n\t\n\t  util.rgbToHex = function(r, g, b) {\n\t    r = r.toString(16);\n\t    g = g.toString(16);\n\t    b = b.toString(16);\n\t    r = r.length < 2 ? '0' + r : r;\n\t    g = g.length < 2 ? '0' + g : g;\n\t    b = b.length < 2 ? '0' + b : b;\n\t    return '#' + r + g + b;\n\t  };\n\t\n\t  var MathUtil = rebound.MathUtil = {\n\t    // This helper function does a linear interpolation of a value from\n\t    // one range to another. This can be very useful for converting the\n\t    // motion of a Spring to a range of UI property values. For example a\n\t    // spring moving from position 0 to 1 could be interpolated to move a\n\t    // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n\t    // position of the `Spring` just needs to be run through this method\n\t    // taking its input range in the _from_ parameters with the property\n\t    // animation range in the _to_ parameters.\n\t    mapValueInRange: function(value, fromLow, fromHigh, toLow, toHigh) {\n\t      var fromRangeSize = fromHigh - fromLow;\n\t      var toRangeSize = toHigh - toLow;\n\t      var valueScale = (value - fromLow) / fromRangeSize;\n\t      return toLow + (valueScale * toRangeSize);\n\t    },\n\t\n\t    // Interpolate two hex colors in a 0 - 1 range or optionally provide a\n\t    // custom range with fromLow,fromHight. The output will be in hex by default\n\t    // unless asRGB is true in which case it will be returned as an rgb string.\n\t    interpolateColor:\n\t      function(val, startColor, endColor, fromLow, fromHigh, asRGB) {\n\t      fromLow = fromLow === undefined ? 0 : fromLow;\n\t      fromHigh = fromHigh === undefined ? 1 : fromHigh;\n\t      startColor = util.hexToRGB(startColor);\n\t      endColor = util.hexToRGB(endColor);\n\t      var r = Math.floor(\n\t        util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r)\n\t      );\n\t      var g = Math.floor(\n\t        util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g)\n\t      );\n\t      var b = Math.floor(\n\t        util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b)\n\t      );\n\t      if (asRGB) {\n\t        return 'rgb(' + r + ',' + g + ',' + b + ')';\n\t      } else {\n\t        return util.rgbToHex(r, g, b);\n\t      }\n\t    },\n\t\n\t    degreesToRadians: function(deg) {\n\t      return (deg * Math.PI) / 180;\n\t    },\n\t\n\t    radiansToDegrees: function(rad) {\n\t      return (rad * 180) / Math.PI;\n\t    }\n\t\n\t  }\n\t\n\t  util.extend(util, MathUtil);\n\t\n\t\n\t  // Utilities\n\t  // ---------\n\t  // Here are a few useful JavaScript utilities.\n\t\n\t  // Lop off the first occurence of the reference in the Array.\n\t  function removeFirst(array, item) {\n\t    var idx = array.indexOf(item);\n\t    idx != -1 && array.splice(idx, 1);\n\t  }\n\t\n\t  var _onFrame;\n\t  if (typeof window !== 'undefined') {\n\t    _onFrame = window.requestAnimationFrame ||\n\t      window.webkitRequestAnimationFrame ||\n\t      window.mozRequestAnimationFrame ||\n\t      window.msRequestAnimationFrame ||\n\t      window.oRequestAnimationFrame ||\n\t      function(callback) {\n\t        window.setTimeout(callback, 1000 / 60);\n\t      };\n\t  }\n\t  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n\t    _onFrame = setImmediate;\n\t  }\n\t\n\t  // Cross browser/node timer functions.\n\t  util.onFrame = function onFrame(func) {\n\t    return _onFrame(func);\n\t  };\n\t\n\t  // Export the public api using exports for common js or the window for\n\t  // normal browser inclusion.\n\t  if (true) {\n\t    util.extend(exports, rebound);\n\t  } else if (typeof window != 'undefined') {\n\t    window.rebound = rebound;\n\t  }\n\t})();\n\t\n\t\n\t// Legal Stuff\n\t// -----------\n\t/**\n\t *  Copyright (c) 2013, Facebook, Inc.\n\t *  All rights reserved.\n\t *\n\t *  This source code is licensed under the BSD-style license found in the\n\t *  LICENSE file in the root directory of this source tree. An additional grant\n\t *  of patent rights can be found in the PATENTS file in the same directory.\n\t */\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4), __webpack_require__(5).setImmediate))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate, clearImmediate) {var nextTick = __webpack_require__(4).nextTick;\n\tvar apply = Function.prototype.apply;\n\tvar slice = Array.prototype.slice;\n\tvar immediateIds = {};\n\tvar nextImmediateId = 0;\n\t\n\t// DOM APIs, for completeness\n\t\n\texports.setTimeout = function() {\n\t  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n\t};\n\texports.setInterval = function() {\n\t  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n\t};\n\texports.clearTimeout =\n\texports.clearInterval = function(timeout) { timeout.close(); };\n\t\n\tfunction Timeout(id, clearFn) {\n\t  this._id = id;\n\t  this._clearFn = clearFn;\n\t}\n\tTimeout.prototype.unref = Timeout.prototype.ref = function() {};\n\tTimeout.prototype.close = function() {\n\t  this._clearFn.call(window, this._id);\n\t};\n\t\n\t// Does not start the time, just sets up the members needed.\n\texports.enroll = function(item, msecs) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = msecs;\n\t};\n\t\n\texports.unenroll = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t  item._idleTimeout = -1;\n\t};\n\t\n\texports._unrefActive = exports.active = function(item) {\n\t  clearTimeout(item._idleTimeoutId);\n\t\n\t  var msecs = item._idleTimeout;\n\t  if (msecs >= 0) {\n\t    item._idleTimeoutId = setTimeout(function onTimeout() {\n\t      if (item._onTimeout)\n\t        item._onTimeout();\n\t    }, msecs);\n\t  }\n\t};\n\t\n\t// That's not how node.js implements it but the exposed api is the same.\n\texports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n\t  var id = nextImmediateId++;\n\t  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\t\n\t  immediateIds[id] = true;\n\t\n\t  nextTick(function onNextTick() {\n\t    if (immediateIds[id]) {\n\t      // fn.call() is faster so we optimize for the common use-case\n\t      // @see http://jsperf.com/call-apply-segu\n\t      if (args) {\n\t        fn.apply(null, args);\n\t      } else {\n\t        fn.call(null);\n\t      }\n\t      // Prevent ids from leaking\n\t      exports.clearImmediate(id);\n\t    }\n\t  });\n\t\n\t  return id;\n\t};\n\t\n\texports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n\t  delete immediateIds[id];\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate, __webpack_require__(5).clearImmediate))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _sister = __webpack_require__(2);\n\t\n\tvar _sister2 = _interopRequireDefault(_sister);\n\t\n\tvar _hammerjs = __webpack_require__(7);\n\t\n\tvar _hammerjs2 = _interopRequireDefault(_hammerjs);\n\t\n\tvar _rebound = __webpack_require__(3);\n\t\n\tvar _rebound2 = _interopRequireDefault(_rebound);\n\t\n\tvar _vendorPrefix = __webpack_require__(8);\n\t\n\tvar _vendorPrefix2 = _interopRequireDefault(_vendorPrefix);\n\t\n\tvar _utilJs = __webpack_require__(9);\n\t\n\tvar _utilJs2 = _interopRequireDefault(_utilJs);\n\t\n\tvar _raf = __webpack_require__(74);\n\t\n\tvar _raf2 = _interopRequireDefault(_raf);\n\t\n\tvar Card = undefined;\n\t\n\t/**\r\n\t * @param {Stack} stack\r\n\t * @param {HTMLElement} targetElement\r\n\t * @return {Object} An instance of Card.\r\n\t */\n\tCard = function (stack, targetElement) {\n\t    var card = undefined,\n\t        config = undefined,\n\t        construct = undefined,\n\t        currentX = undefined,\n\t        currentY = undefined,\n\t        doMove = undefined,\n\t        eventEmitter = undefined,\n\t        isDraging = undefined,\n\t        lastThrow = undefined,\n\t        lastTranslate = undefined,\n\t        lastX = undefined,\n\t        lastY = undefined,\n\t        mc = undefined,\n\t        _onSpringUpdate = undefined,\n\t        springSystem = undefined,\n\t        springThrowIn = undefined,\n\t        springThrowOut = undefined,\n\t        throwOutDistance = undefined,\n\t        throwWhere = undefined;\n\t\n\t    construct = function () {\n\t        card = {};\n\t        config = Card.makeConfig(stack.getConfig());\n\t        eventEmitter = (0, _sister2['default'])();\n\t        springSystem = stack.getSpringSystem();\n\t        springThrowIn = springSystem.createSpring(250, 10);\n\t        springThrowOut = springSystem.createSpring(500, 20);\n\t        lastThrow = {};\n\t        lastTranslate = {\n\t            x: 0,\n\t            y: 0\n\t        };\n\t\n\t        springThrowIn.setRestSpeedThreshold(0.05);\n\t        springThrowIn.setRestDisplacementThreshold(0.05);\n\t\n\t        springThrowOut.setRestSpeedThreshold(0.05);\n\t        springThrowOut.setRestDisplacementThreshold(0.05);\n\t\n\t        throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);\n\t\n\t        mc = new _hammerjs2['default'].Manager(targetElement, {\n\t            recognizers: [[_hammerjs2['default'].Pan, {\n\t                threshold: 2\n\t            }]]\n\t        });\n\t\n\t        Card.appendToParent(targetElement);\n\t\n\t        eventEmitter.on('panstart', function () {\n\t            Card.appendToParent(targetElement);\n\t\n\t            eventEmitter.trigger('dragstart', {\n\t                target: targetElement\n\t            });\n\t\n\t            currentX = 0;\n\t            currentY = 0;\n\t\n\t            isDraging = true;\n\t\n\t            (function animation() {\n\t                if (isDraging) {\n\t                    doMove();\n\t\n\t                    (0, _raf2['default'])(animation);\n\t                }\n\t            })();\n\t        });\n\t\n\t        eventEmitter.on('panmove', function (e) {\n\t            currentX = e.deltaX;\n\t            currentY = e.deltaY;\n\t        });\n\t\n\t        eventEmitter.on('panend', function (e) {\n\t            var x = undefined,\n\t                y = undefined;\n\t\n\t            isDraging = false;\n\t\n\t            x = lastTranslate.x + e.deltaX;\n\t            y = lastTranslate.y + e.deltaY;\n\t\n\t            if (config.isThrowOut(x, targetElement, config.throwOutConfidence(x, targetElement))) {\n\t                card.throwOut(x, y);\n\t            } else {\n\t                card.throwIn(x, y);\n\t            }\n\t\n\t            eventEmitter.trigger('dragend', {\n\t                target: targetElement\n\t            });\n\t        });\n\t\n\t        mc.on('panstart', function (e) {\n\t            eventEmitter.trigger('panstart', e);\n\t        });\n\t\n\t        mc.on('panmove', function (e) {\n\t            eventEmitter.trigger('panmove', e);\n\t        });\n\t\n\t        mc.on('panend', function (e) {\n\t            eventEmitter.trigger('panend', e);\n\t        });\n\t\n\t        springThrowIn.addListener({\n\t            onSpringUpdate: function onSpringUpdate(spring) {\n\t                var value = undefined,\n\t                    x = undefined,\n\t                    y = undefined;\n\t\n\t                value = spring.getCurrentValue();\n\t                x = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0);\n\t                y = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);\n\t\n\t                _onSpringUpdate(x, y);\n\t            },\n\t            onSpringAtRest: function onSpringAtRest() {\n\t                eventEmitter.trigger('throwinend', {\n\t                    target: targetElement\n\t                });\n\t            }\n\t        });\n\t\n\t        springThrowOut.addListener({\n\t            onSpringUpdate: function onSpringUpdate(spring) {\n\t                var value = undefined,\n\t                    x = undefined,\n\t                    y = undefined;\n\t\n\t                value = spring.getCurrentValue();\n\t                x = _rebound2['default'].MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * lastThrow.direction);\n\t                y = lastThrow.fromY;\n\t\n\t                _onSpringUpdate(x, y);\n\t            },\n\t            onSpringAtRest: function onSpringAtRest() {\n\t                eventEmitter.trigger('throwoutend', {\n\t                    target: targetElement\n\t                });\n\t            }\n\t        });\n\t\n\t        /**\r\n\t         * Transforms card position based on the current environment variables.\r\n\t         *\r\n\t         * @return {undefined}\r\n\t         */\n\t        doMove = function () {\n\t            var r = undefined,\n\t                x = undefined,\n\t                y = undefined;\n\t\n\t            if (currentX === lastX && currentY === lastY) {\n\t                return;\n\t            }\n\t\n\t            lastX = currentX;\n\t            lastY = currentY;\n\t\n\t            x = lastTranslate.x + currentX;\n\t            y = lastTranslate.y + currentY;\n\t            r = config.rotation(x, y, targetElement, config.maxRotation);\n\t\n\t            config.transform(targetElement, x, y, r);\n\t\n\t            eventEmitter.trigger('dragmove', {\n\t                target: targetElement,\n\t                throwOutConfidence: config.throwOutConfidence(x, targetElement),\n\t                throwDirection: x < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT\n\t            });\n\t        };\n\t\n\t        /**\r\n\t         * Invoked every time the physics solver updates the Spring's value.\r\n\t         *\r\n\t         * @param {Number} x\r\n\t         * @param {Number} y\r\n\t         * @return {undefined}\r\n\t         */\n\t        _onSpringUpdate = function (x, y) {\n\t            var r = undefined;\n\t\n\t            r = config.rotation(x, y, targetElement, config.maxRotation);\n\t\n\t            lastTranslate.x = x || 0;\n\t            lastTranslate.y = y || 0;\n\t\n\t            Card.transform(targetElement, x, y, r);\n\t        };\n\t\n\t        /**\r\n\t         * @param {Card.THROW_IN|Card.THROW_OUT} where\r\n\t         * @param {Number} fromX\r\n\t         * @param {Number} fromY\r\n\t         * @return {undefined}\r\n\t         */\n\t        throwWhere = function (where, fromX, fromY) {\n\t            lastThrow.fromX = fromX;\n\t            lastThrow.fromY = fromY;\n\t            lastThrow.direction = lastThrow.fromX < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT;\n\t\n\t            if (where === Card.THROW_IN) {\n\t                springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);\n\t\n\t                eventEmitter.trigger('throwin', {\n\t                    target: targetElement,\n\t                    throwDirection: lastThrow.direction\n\t                });\n\t            } else if (where === Card.THROW_OUT) {\n\t                springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);\n\t\n\t                eventEmitter.trigger('throwout', {\n\t                    target: targetElement,\n\t                    throwDirection: lastThrow.direction\n\t                });\n\t\n\t                if (lastThrow.direction === Card.DIRECTION_LEFT) {\n\t                    eventEmitter.trigger('throwoutleft', {\n\t                        target: targetElement,\n\t                        throwDirection: lastThrow.direction\n\t                    });\n\t                } else {\n\t                    eventEmitter.trigger('throwoutright', {\n\t                        target: targetElement,\n\t                        throwDirection: lastThrow.direction\n\t                    });\n\t                }\n\t            } else {\n\t                throw new Error('Invalid throw event.');\n\t            }\n\t        };\n\t    };\n\t\n\t    construct();\n\t\n\t    /**\r\n\t     * Alias\r\n\t     */\n\t    card.on = eventEmitter.on;\n\t    card.trigger = eventEmitter.trigger;\n\t\n\t    /**\r\n\t     * Throws a card into the stack from an arbitrary position.\r\n\t     *\r\n\t     * @param {Number} fromX\r\n\t     * @param {Number} fromY\r\n\t     * @return {undefined}\r\n\t     */\n\t    card.throwIn = function (fromX, fromY) {\n\t        throwWhere(Card.THROW_IN, fromX, fromY);\n\t    };\n\t\n\t    /**\r\n\t     * Throws a card out of the stack in the direction away from the original offset.\r\n\t     *\r\n\t     * @param {Number} fromX\r\n\t     * @param {Number} fromY\r\n\t     * @return {undefined}\r\n\t     */\n\t    card.throwOut = function (fromX, fromY) {\n\t        throwWhere(Card.THROW_OUT, fromX, fromY);\n\t    };\n\t\n\t    /**\r\n\t     * Unbinds all Hammer.Manager events.\r\n\t     * Removes the listeners from the physics simulation.\r\n\t     *\r\n\t     * @return {undefined}\r\n\t     */\n\t    card.destroy = function () {\n\t        mc.destroy();\n\t        springThrowIn.destroy();\n\t        springThrowOut.destroy();\n\t\n\t        stack.destroyCard(card);\n\t    };\n\t\n\t    return card;\n\t};\n\t\n\t/**\r\n\t * Creates a configuration object.\r\n\t *\r\n\t * @param {Object} config\r\n\t * @return {Object}\r\n\t */\n\tCard.makeConfig = function () {\n\t    var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var defaultConfig = undefined;\n\t\n\t    defaultConfig = {\n\t        isThrowOut: Card.isThrowOut,\n\t        throwOutConfidence: Card.throwOutConfidence,\n\t        throwOutDistance: Card.throwOutDistance,\n\t        minThrowOutDistance: 400,\n\t        maxThrowOutDistance: 500,\n\t        rotation: Card.rotation,\n\t        maxRotation: 20,\n\t        transform: Card.transform\n\t    };\n\t\n\t    return _utilJs2['default'].assign({}, defaultConfig, config);\n\t};\n\t\n\t/**\r\n\t * Uses CSS transform to translate element position and rotation.\r\n\t *\r\n\t * Invoked in the event of `dragmove` and every time the physics solver is triggered.\r\n\t *\r\n\t * @param {HTMLElement} element\r\n\t * @param {Number} x Horizontal offset from the startDrag.\r\n\t * @param {Number} y Vertical offset from the startDrag.\r\n\t * @param {Number} r\r\n\t * @return {undefined}\r\n\t */\n\tCard.transform = function (element, x, y, r) {\n\t    element.style[(0, _vendorPrefix2['default'])('transform')] = 'translate3d(0, 0, 0) translate(' + x + 'px, ' + y + 'px) rotate(' + r + 'deg)';\n\t};\n\t\n\t/**\r\n\t * Append element to the parentNode.\r\n\t *\r\n\t * This makes the element first among the siblings. The reason for using\r\n\t * this as opposed to zIndex is to allow CSS selector :nth-child.\r\n\t *\r\n\t * Invoked in the event of mousedown.\r\n\t * Invoked when card is added to the stack.\r\n\t *\r\n\t * @param {HTMLElement} element The target element.\r\n\t * @return {undefined}\r\n\t */\n\tCard.appendToParent = function (element) {\n\t    var parentNode = undefined,\n\t        siblings = undefined,\n\t        targetIndex = undefined;\n\t\n\t    parentNode = element.parentNode;\n\t    siblings = _utilJs2['default'].elementChildren(parentNode);\n\t    targetIndex = siblings.indexOf(element);\n\t\n\t    if (targetIndex + 1 !== siblings.length) {\n\t        parentNode.removeChild(element);\n\t        parentNode.appendChild(element);\n\t    }\n\t};\n\t\n\t/**\r\n\t * Returns a value between 0 and 1 indicating the completeness of the throw out condition.\r\n\t *\r\n\t * Ration of the absolute distance from the original card position and element width.\r\n\t *\r\n\t * @param {Number} offset Distance from the dragStart.\r\n\t * @param {HTMLElement} element Element.\r\n\t * @return {Number}\r\n\t */\n\tCard.throwOutConfidence = function (offset, element) {\n\t    return Math.min(Math.abs(offset) / element.offsetWidth, 1);\n\t};\n\t\n\t/**\r\n\t * Determines if element is being thrown out of the stack.\r\n\t *\r\n\t * Element is considered to be thrown out when throwOutConfidence is equal to 1.\r\n\t *\r\n\t * @param {Number} offset Distance from the dragStart.\r\n\t * @param {HTMLElement} element Element.\r\n\t * @param {Number} throwOutConfidence config.throwOutConfidence\r\n\t * @return {Boolean}\r\n\t */\n\tCard.isThrowOut = function (offset, element, throwOutConfidence) {\n\t    return throwOutConfidence === 1;\n\t};\n\t\n\t/**\r\n\t * Calculates a distances at which the card is thrown out of the stack.\r\n\t *\r\n\t * @param {Number} min\r\n\t * @param {Number} max\r\n\t * @return {Number}\r\n\t */\n\tCard.throwOutDistance = function (min, max) {\n\t    return _utilJs2['default'].random(min, max);\n\t};\n\t\n\t/**\r\n\t * Calculates rotation based on the element x and y offset, element width and maxRotation variables.\r\n\t *\r\n\t * @param {Number} x Horizontal offset from the startDrag.\r\n\t * @param {Number} y Vertical offset from the startDrag.\r\n\t * @param {HTMLElement} element Element.\r\n\t * @param {Number} maxRotation\r\n\t * @return {Number} Rotation angle expressed in degrees.\r\n\t */\n\tCard.rotation = function (x, y, element, maxRotation) {\n\t    var horizontalOffset = undefined,\n\t        rotation = undefined,\n\t        verticalOffset = undefined;\n\t\n\t    horizontalOffset = Math.min(Math.max(x / element.offsetWidth, -1), 1);\n\t    verticalOffset = (y > 0 ? 1 : -1) * Math.min(Math.abs(y) / 100, 1);\n\t    rotation = horizontalOffset * verticalOffset * maxRotation;\n\t\n\t    return rotation;\n\t};\n\t\n\tCard.DIRECTION_LEFT = -1;\n\tCard.DIRECTION_RIGHT = 1;\n\t\n\tCard.THROW_IN = 'in';\n\tCard.THROW_OUT = 'out';\n\t\n\texports['default'] = Card;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.6 - 2015-12-23\n\t * http://hammerjs.github.io/\n\t *\n\t * Copyright (c) 2015 Jorik Tangelder;\n\t * Licensed under the  license */\n\t(function(window, document, exportName, undefined) {\n\t  'use strict';\n\t\n\tvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\tvar TEST_ELEMENT = document.createElement('div');\n\t\n\tvar TYPE_FUNCTION = 'function';\n\t\n\tvar round = Math.round;\n\tvar abs = Math.abs;\n\tvar now = Date.now;\n\t\n\t/**\n\t * set a timeout with a given scope\n\t * @param {Function} fn\n\t * @param {Number} timeout\n\t * @param {Object} context\n\t * @returns {number}\n\t */\n\tfunction setTimeoutContext(fn, timeout, context) {\n\t    return setTimeout(bindFn(fn, context), timeout);\n\t}\n\t\n\t/**\n\t * if the argument is an array, we want to execute the fn on each entry\n\t * if it aint an array we don't want to do a thing.\n\t * this is used by all the methods that accept a single and array argument.\n\t * @param {*|Array} arg\n\t * @param {String} fn\n\t * @param {Object} [context]\n\t * @returns {Boolean}\n\t */\n\tfunction invokeArrayArg(arg, fn, context) {\n\t    if (Array.isArray(arg)) {\n\t        each(arg, context[fn], context);\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * walk objects and arrays\n\t * @param {Object} obj\n\t * @param {Function} iterator\n\t * @param {Object} context\n\t */\n\tfunction each(obj, iterator, context) {\n\t    var i;\n\t\n\t    if (!obj) {\n\t        return;\n\t    }\n\t\n\t    if (obj.forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else if (obj.length !== undefined) {\n\t        i = 0;\n\t        while (i < obj.length) {\n\t            iterator.call(context, obj[i], i, obj);\n\t            i++;\n\t        }\n\t    } else {\n\t        for (i in obj) {\n\t            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * wrap a method with a deprecation warning and stack trace\n\t * @param {Function} method\n\t * @param {String} name\n\t * @param {String} message\n\t * @returns {Function} A new function wrapping the supplied method.\n\t */\n\tfunction deprecate(method, name, message) {\n\t    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n\t    return function() {\n\t        var e = new Error('get-stack-trace');\n\t        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n\t            .replace(/^\\s+at\\s+/gm, '')\n\t            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\t\n\t        var log = window.console && (window.console.warn || window.console.log);\n\t        if (log) {\n\t            log.call(window.console, deprecationMessage, stack);\n\t        }\n\t        return method.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} target\n\t * @param {...Object} objects_to_assign\n\t * @returns {Object} target\n\t */\n\tvar assign;\n\tif (typeof Object.assign !== 'function') {\n\t    assign = function assign(target) {\n\t        if (target === undefined || target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== undefined && source !== null) {\n\t                for (var nextKey in source) {\n\t                    if (source.hasOwnProperty(nextKey)) {\n\t                        output[nextKey] = source[nextKey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return output;\n\t    };\n\t} else {\n\t    assign = Object.assign;\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @param {Boolean=false} [merge]\n\t * @returns {Object} dest\n\t */\n\tvar extend = deprecate(function extend(dest, src, merge) {\n\t    var keys = Object.keys(src);\n\t    var i = 0;\n\t    while (i < keys.length) {\n\t        if (!merge || (merge && dest[keys[i]] === undefined)) {\n\t            dest[keys[i]] = src[keys[i]];\n\t        }\n\t        i++;\n\t    }\n\t    return dest;\n\t}, 'extend', 'Use `assign`.');\n\t\n\t/**\n\t * merge the values from src in the dest.\n\t * means that properties that exist in dest will not be overwritten by src\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @returns {Object} dest\n\t */\n\tvar merge = deprecate(function merge(dest, src) {\n\t    return extend(dest, src, true);\n\t}, 'merge', 'Use `assign`.');\n\t\n\t/**\n\t * simple class inheritance\n\t * @param {Function} child\n\t * @param {Function} base\n\t * @param {Object} [properties]\n\t */\n\tfunction inherit(child, base, properties) {\n\t    var baseP = base.prototype,\n\t        childP;\n\t\n\t    childP = child.prototype = Object.create(baseP);\n\t    childP.constructor = child;\n\t    childP._super = baseP;\n\t\n\t    if (properties) {\n\t        assign(childP, properties);\n\t    }\n\t}\n\t\n\t/**\n\t * simple function bind\n\t * @param {Function} fn\n\t * @param {Object} context\n\t * @returns {Function}\n\t */\n\tfunction bindFn(fn, context) {\n\t    return function boundFn() {\n\t        return fn.apply(context, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * let a boolean value also be a function that must return a boolean\n\t * this first item in args will be used as the context\n\t * @param {Boolean|Function} val\n\t * @param {Array} [args]\n\t * @returns {Boolean}\n\t */\n\tfunction boolOrFn(val, args) {\n\t    if (typeof val == TYPE_FUNCTION) {\n\t        return val.apply(args ? args[0] || undefined : undefined, args);\n\t    }\n\t    return val;\n\t}\n\t\n\t/**\n\t * use the val2 when val1 is undefined\n\t * @param {*} val1\n\t * @param {*} val2\n\t * @returns {*}\n\t */\n\tfunction ifUndefined(val1, val2) {\n\t    return (val1 === undefined) ? val2 : val1;\n\t}\n\t\n\t/**\n\t * addEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction addEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.addEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * removeEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction removeEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.removeEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * find if a node is in the given parent\n\t * @method hasParent\n\t * @param {HTMLElement} node\n\t * @param {HTMLElement} parent\n\t * @return {Boolean} found\n\t */\n\tfunction hasParent(node, parent) {\n\t    while (node) {\n\t        if (node == parent) {\n\t            return true;\n\t        }\n\t        node = node.parentNode;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * small indexOf wrapper\n\t * @param {String} str\n\t * @param {String} find\n\t * @returns {Boolean} found\n\t */\n\tfunction inStr(str, find) {\n\t    return str.indexOf(find) > -1;\n\t}\n\t\n\t/**\n\t * split string on whitespace\n\t * @param {String} str\n\t * @returns {Array} words\n\t */\n\tfunction splitStr(str) {\n\t    return str.trim().split(/\\s+/g);\n\t}\n\t\n\t/**\n\t * find if a array contains the object using indexOf or a simple polyFill\n\t * @param {Array} src\n\t * @param {String} find\n\t * @param {String} [findByKey]\n\t * @return {Boolean|Number} false when not found, or the index\n\t */\n\tfunction inArray(src, find, findByKey) {\n\t    if (src.indexOf && !findByKey) {\n\t        return src.indexOf(find);\n\t    } else {\n\t        var i = 0;\n\t        while (i < src.length) {\n\t            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n\t                return i;\n\t            }\n\t            i++;\n\t        }\n\t        return -1;\n\t    }\n\t}\n\t\n\t/**\n\t * convert array-like objects to real arrays\n\t * @param {Object} obj\n\t * @returns {Array}\n\t */\n\tfunction toArray(obj) {\n\t    return Array.prototype.slice.call(obj, 0);\n\t}\n\t\n\t/**\n\t * unique array with objects based on a key (like 'id') or just by the array's value\n\t * @param {Array} src [{id:1},{id:2},{id:1}]\n\t * @param {String} [key]\n\t * @param {Boolean} [sort=False]\n\t * @returns {Array} [{id:1},{id:2}]\n\t */\n\tfunction uniqueArray(src, key, sort) {\n\t    var results = [];\n\t    var values = [];\n\t    var i = 0;\n\t\n\t    while (i < src.length) {\n\t        var val = key ? src[i][key] : src[i];\n\t        if (inArray(values, val) < 0) {\n\t            results.push(src[i]);\n\t        }\n\t        values[i] = val;\n\t        i++;\n\t    }\n\t\n\t    if (sort) {\n\t        if (!key) {\n\t            results = results.sort();\n\t        } else {\n\t            results = results.sort(function sortUniqueArray(a, b) {\n\t                return a[key] > b[key];\n\t            });\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t/**\n\t * get the prefixed property\n\t * @param {Object} obj\n\t * @param {String} property\n\t * @returns {String|Undefined} prefixed\n\t */\n\tfunction prefixed(obj, property) {\n\t    var prefix, prop;\n\t    var camelProp = property[0].toUpperCase() + property.slice(1);\n\t\n\t    var i = 0;\n\t    while (i < VENDOR_PREFIXES.length) {\n\t        prefix = VENDOR_PREFIXES[i];\n\t        prop = (prefix) ? prefix + camelProp : property;\n\t\n\t        if (prop in obj) {\n\t            return prop;\n\t        }\n\t        i++;\n\t    }\n\t    return undefined;\n\t}\n\t\n\t/**\n\t * get a unique id\n\t * @returns {number} uniqueId\n\t */\n\tvar _uniqueId = 1;\n\tfunction uniqueId() {\n\t    return _uniqueId++;\n\t}\n\t\n\t/**\n\t * get the window object of an element\n\t * @param {HTMLElement} element\n\t * @returns {DocumentView|Window}\n\t */\n\tfunction getWindowForElement(element) {\n\t    var doc = element.ownerDocument || element;\n\t    return (doc.defaultView || doc.parentWindow || window);\n\t}\n\t\n\tvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\t\n\tvar SUPPORT_TOUCH = ('ontouchstart' in window);\n\tvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n\tvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\t\n\tvar INPUT_TYPE_TOUCH = 'touch';\n\tvar INPUT_TYPE_PEN = 'pen';\n\tvar INPUT_TYPE_MOUSE = 'mouse';\n\tvar INPUT_TYPE_KINECT = 'kinect';\n\t\n\tvar COMPUTE_INTERVAL = 25;\n\t\n\tvar INPUT_START = 1;\n\tvar INPUT_MOVE = 2;\n\tvar INPUT_END = 4;\n\tvar INPUT_CANCEL = 8;\n\t\n\tvar DIRECTION_NONE = 1;\n\tvar DIRECTION_LEFT = 2;\n\tvar DIRECTION_RIGHT = 4;\n\tvar DIRECTION_UP = 8;\n\tvar DIRECTION_DOWN = 16;\n\t\n\tvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n\tvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n\tvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\t\n\tvar PROPS_XY = ['x', 'y'];\n\tvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\t\n\t/**\n\t * create new input type manager\n\t * @param {Manager} manager\n\t * @param {Function} callback\n\t * @returns {Input}\n\t * @constructor\n\t */\n\tfunction Input(manager, callback) {\n\t    var self = this;\n\t    this.manager = manager;\n\t    this.callback = callback;\n\t    this.element = manager.element;\n\t    this.target = manager.options.inputTarget;\n\t\n\t    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n\t    // so when disabled the input events are completely bypassed.\n\t    this.domHandler = function(ev) {\n\t        if (boolOrFn(manager.options.enable, [manager])) {\n\t            self.handler(ev);\n\t        }\n\t    };\n\t\n\t    this.init();\n\t\n\t}\n\t\n\tInput.prototype = {\n\t    /**\n\t     * should handle the inputEvent data and trigger the callback\n\t     * @virtual\n\t     */\n\t    handler: function() { },\n\t\n\t    /**\n\t     * bind the events\n\t     */\n\t    init: function() {\n\t        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    },\n\t\n\t    /**\n\t     * unbind the events\n\t     */\n\t    destroy: function() {\n\t        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * create new input type manager\n\t * called by the Manager constructor\n\t * @param {Hammer} manager\n\t * @returns {Input}\n\t */\n\tfunction createInputInstance(manager) {\n\t    var Type;\n\t    var inputClass = manager.options.inputClass;\n\t\n\t    if (inputClass) {\n\t        Type = inputClass;\n\t    } else if (SUPPORT_POINTER_EVENTS) {\n\t        Type = PointerEventInput;\n\t    } else if (SUPPORT_ONLY_TOUCH) {\n\t        Type = TouchInput;\n\t    } else if (!SUPPORT_TOUCH) {\n\t        Type = MouseInput;\n\t    } else {\n\t        Type = TouchMouseInput;\n\t    }\n\t    return new (Type)(manager, inputHandler);\n\t}\n\t\n\t/**\n\t * handle input events\n\t * @param {Manager} manager\n\t * @param {String} eventType\n\t * @param {Object} input\n\t */\n\tfunction inputHandler(manager, eventType, input) {\n\t    var pointersLen = input.pointers.length;\n\t    var changedPointersLen = input.changedPointers.length;\n\t    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n\t    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\t\n\t    input.isFirst = !!isFirst;\n\t    input.isFinal = !!isFinal;\n\t\n\t    if (isFirst) {\n\t        manager.session = {};\n\t    }\n\t\n\t    // source event is the normalized value of the domEvents\n\t    // like 'touchstart, mouseup, pointerdown'\n\t    input.eventType = eventType;\n\t\n\t    // compute scale, rotation etc\n\t    computeInputData(manager, input);\n\t\n\t    // emit secret event\n\t    manager.emit('hammer.input', input);\n\t\n\t    manager.recognize(input);\n\t    manager.session.prevInput = input;\n\t}\n\t\n\t/**\n\t * extend the data with some usable properties like scale, rotate, velocity etc\n\t * @param {Object} manager\n\t * @param {Object} input\n\t */\n\tfunction computeInputData(manager, input) {\n\t    var session = manager.session;\n\t    var pointers = input.pointers;\n\t    var pointersLength = pointers.length;\n\t\n\t    // store the first input to calculate the distance and direction\n\t    if (!session.firstInput) {\n\t        session.firstInput = simpleCloneInputData(input);\n\t    }\n\t\n\t    // to compute scale and rotation we need to store the multiple touches\n\t    if (pointersLength > 1 && !session.firstMultiple) {\n\t        session.firstMultiple = simpleCloneInputData(input);\n\t    } else if (pointersLength === 1) {\n\t        session.firstMultiple = false;\n\t    }\n\t\n\t    var firstInput = session.firstInput;\n\t    var firstMultiple = session.firstMultiple;\n\t    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\t\n\t    var center = input.center = getCenter(pointers);\n\t    input.timeStamp = now();\n\t    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\t\n\t    input.angle = getAngle(offsetCenter, center);\n\t    input.distance = getDistance(offsetCenter, center);\n\t\n\t    computeDeltaXY(session, input);\n\t    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\t\n\t    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n\t    input.overallVelocityX = overallVelocity.x;\n\t    input.overallVelocityY = overallVelocity.y;\n\t    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\t\n\t    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n\t    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\t\n\t    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n\t        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\t\n\t    computeIntervalInputData(session, input);\n\t\n\t    // find the correct target\n\t    var target = manager.element;\n\t    if (hasParent(input.srcEvent.target, target)) {\n\t        target = input.srcEvent.target;\n\t    }\n\t    input.target = target;\n\t}\n\t\n\tfunction computeDeltaXY(session, input) {\n\t    var center = input.center;\n\t    var offset = session.offsetDelta || {};\n\t    var prevDelta = session.prevDelta || {};\n\t    var prevInput = session.prevInput || {};\n\t\n\t    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n\t        prevDelta = session.prevDelta = {\n\t            x: prevInput.deltaX || 0,\n\t            y: prevInput.deltaY || 0\n\t        };\n\t\n\t        offset = session.offsetDelta = {\n\t            x: center.x,\n\t            y: center.y\n\t        };\n\t    }\n\t\n\t    input.deltaX = prevDelta.x + (center.x - offset.x);\n\t    input.deltaY = prevDelta.y + (center.y - offset.y);\n\t}\n\t\n\t/**\n\t * velocity is calculated every x ms\n\t * @param {Object} session\n\t * @param {Object} input\n\t */\n\tfunction computeIntervalInputData(session, input) {\n\t    var last = session.lastInterval || input,\n\t        deltaTime = input.timeStamp - last.timeStamp,\n\t        velocity, velocityX, velocityY, direction;\n\t\n\t    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n\t        var deltaX = input.deltaX - last.deltaX;\n\t        var deltaY = input.deltaY - last.deltaY;\n\t\n\t        var v = getVelocity(deltaTime, deltaX, deltaY);\n\t        velocityX = v.x;\n\t        velocityY = v.y;\n\t        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n\t        direction = getDirection(deltaX, deltaY);\n\t\n\t        session.lastInterval = input;\n\t    } else {\n\t        // use latest velocity info if it doesn't overtake a minimum period\n\t        velocity = last.velocity;\n\t        velocityX = last.velocityX;\n\t        velocityY = last.velocityY;\n\t        direction = last.direction;\n\t    }\n\t\n\t    input.velocity = velocity;\n\t    input.velocityX = velocityX;\n\t    input.velocityY = velocityY;\n\t    input.direction = direction;\n\t}\n\t\n\t/**\n\t * create a simple clone from the input used for storage of firstInput and firstMultiple\n\t * @param {Object} input\n\t * @returns {Object} clonedInputData\n\t */\n\tfunction simpleCloneInputData(input) {\n\t    // make a simple copy of the pointers because we will get a reference if we don't\n\t    // we only need clientXY for the calculations\n\t    var pointers = [];\n\t    var i = 0;\n\t    while (i < input.pointers.length) {\n\t        pointers[i] = {\n\t            clientX: round(input.pointers[i].clientX),\n\t            clientY: round(input.pointers[i].clientY)\n\t        };\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        timeStamp: now(),\n\t        pointers: pointers,\n\t        center: getCenter(pointers),\n\t        deltaX: input.deltaX,\n\t        deltaY: input.deltaY\n\t    };\n\t}\n\t\n\t/**\n\t * get the center of all the pointers\n\t * @param {Array} pointers\n\t * @return {Object} center contains `x` and `y` properties\n\t */\n\tfunction getCenter(pointers) {\n\t    var pointersLength = pointers.length;\n\t\n\t    // no need to loop when only one touch\n\t    if (pointersLength === 1) {\n\t        return {\n\t            x: round(pointers[0].clientX),\n\t            y: round(pointers[0].clientY)\n\t        };\n\t    }\n\t\n\t    var x = 0, y = 0, i = 0;\n\t    while (i < pointersLength) {\n\t        x += pointers[i].clientX;\n\t        y += pointers[i].clientY;\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        x: round(x / pointersLength),\n\t        y: round(y / pointersLength)\n\t    };\n\t}\n\t\n\t/**\n\t * calculate the velocity between two points. unit is in px per ms.\n\t * @param {Number} deltaTime\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Object} velocity `x` and `y`\n\t */\n\tfunction getVelocity(deltaTime, x, y) {\n\t    return {\n\t        x: x / deltaTime || 0,\n\t        y: y / deltaTime || 0\n\t    };\n\t}\n\t\n\t/**\n\t * get the direction between two points\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Number} direction\n\t */\n\tfunction getDirection(x, y) {\n\t    if (x === y) {\n\t        return DIRECTION_NONE;\n\t    }\n\t\n\t    if (abs(x) >= abs(y)) {\n\t        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t    }\n\t    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n\t}\n\t\n\t/**\n\t * calculate the absolute distance between two points\n\t * @param {Object} p1 {x, y}\n\t * @param {Object} p2 {x, y}\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} distance\n\t */\n\tfunction getDistance(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t\n\t    return Math.sqrt((x * x) + (y * y));\n\t}\n\t\n\t/**\n\t * calculate the angle between two coordinates\n\t * @param {Object} p1\n\t * @param {Object} p2\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} angle\n\t */\n\tfunction getAngle(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t    return Math.atan2(y, x) * 180 / Math.PI;\n\t}\n\t\n\t/**\n\t * calculate the rotation degrees between two pointersets\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} rotation\n\t */\n\tfunction getRotation(start, end) {\n\t    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\t}\n\t\n\t/**\n\t * calculate the scale factor between two pointersets\n\t * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} scale\n\t */\n\tfunction getScale(start, end) {\n\t    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\t}\n\t\n\tvar MOUSE_INPUT_MAP = {\n\t    mousedown: INPUT_START,\n\t    mousemove: INPUT_MOVE,\n\t    mouseup: INPUT_END\n\t};\n\t\n\tvar MOUSE_ELEMENT_EVENTS = 'mousedown';\n\tvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\t\n\t/**\n\t * Mouse events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction MouseInput() {\n\t    this.evEl = MOUSE_ELEMENT_EVENTS;\n\t    this.evWin = MOUSE_WINDOW_EVENTS;\n\t\n\t    this.allow = true; // used by Input.TouchMouse to disable mouse events\n\t    this.pressed = false; // mousedown state\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(MouseInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function MEhandler(ev) {\n\t        var eventType = MOUSE_INPUT_MAP[ev.type];\n\t\n\t        // on start we want to have the left mouse button down\n\t        if (eventType & INPUT_START && ev.button === 0) {\n\t            this.pressed = true;\n\t        }\n\t\n\t        if (eventType & INPUT_MOVE && ev.which !== 1) {\n\t            eventType = INPUT_END;\n\t        }\n\t\n\t        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n\t        if (!this.pressed || !this.allow) {\n\t            return;\n\t        }\n\t\n\t        if (eventType & INPUT_END) {\n\t            this.pressed = false;\n\t        }\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: [ev],\n\t            changedPointers: [ev],\n\t            pointerType: INPUT_TYPE_MOUSE,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\tvar POINTER_INPUT_MAP = {\n\t    pointerdown: INPUT_START,\n\t    pointermove: INPUT_MOVE,\n\t    pointerup: INPUT_END,\n\t    pointercancel: INPUT_CANCEL,\n\t    pointerout: INPUT_CANCEL\n\t};\n\t\n\t// in IE10 the pointer types is defined as an enum\n\tvar IE10_POINTER_TYPE_ENUM = {\n\t    2: INPUT_TYPE_TOUCH,\n\t    3: INPUT_TYPE_PEN,\n\t    4: INPUT_TYPE_MOUSE,\n\t    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\t};\n\t\n\tvar POINTER_ELEMENT_EVENTS = 'pointerdown';\n\tvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\t\n\t// IE10 has prefixed support, and case-sensitive\n\tif (window.MSPointerEvent && !window.PointerEvent) {\n\t    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n\t    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n\t}\n\t\n\t/**\n\t * Pointer events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction PointerEventInput() {\n\t    this.evEl = POINTER_ELEMENT_EVENTS;\n\t    this.evWin = POINTER_WINDOW_EVENTS;\n\t\n\t    Input.apply(this, arguments);\n\t\n\t    this.store = (this.manager.session.pointerEvents = []);\n\t}\n\t\n\tinherit(PointerEventInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function PEhandler(ev) {\n\t        var store = this.store;\n\t        var removePointer = false;\n\t\n\t        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n\t        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n\t        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\t\n\t        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\t\n\t        // get index of the event in the store\n\t        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\t\n\t        // start and mouse must be down\n\t        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n\t            if (storeIndex < 0) {\n\t                store.push(ev);\n\t                storeIndex = store.length - 1;\n\t            }\n\t        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t            removePointer = true;\n\t        }\n\t\n\t        // it not found, so the pointer hasn't been down (so it's probably a hover)\n\t        if (storeIndex < 0) {\n\t            return;\n\t        }\n\t\n\t        // update the event in the store\n\t        store[storeIndex] = ev;\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: store,\n\t            changedPointers: [ev],\n\t            pointerType: pointerType,\n\t            srcEvent: ev\n\t        });\n\t\n\t        if (removePointer) {\n\t            // remove from the store\n\t            store.splice(storeIndex, 1);\n\t        }\n\t    }\n\t});\n\t\n\tvar SINGLE_TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n\tvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction SingleTouchInput() {\n\t    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n\t    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n\t    this.started = false;\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(SingleTouchInput, Input, {\n\t    handler: function TEhandler(ev) {\n\t        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\t\n\t        // should we handle the touch events?\n\t        if (type === INPUT_START) {\n\t            this.started = true;\n\t        }\n\t\n\t        if (!this.started) {\n\t            return;\n\t        }\n\t\n\t        var touches = normalizeSingleTouches.call(this, ev, type);\n\t\n\t        // when done, reset the started state\n\t        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n\t            this.started = false;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction normalizeSingleTouches(ev, type) {\n\t    var all = toArray(ev.touches);\n\t    var changed = toArray(ev.changedTouches);\n\t\n\t    if (type & (INPUT_END | INPUT_CANCEL)) {\n\t        all = uniqueArray(all.concat(changed), 'identifier', true);\n\t    }\n\t\n\t    return [all, changed];\n\t}\n\t\n\tvar TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Multi-user touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchInput() {\n\t    this.evTarget = TOUCH_TARGET_EVENTS;\n\t    this.targetIds = {};\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(TouchInput, Input, {\n\t    handler: function MTEhandler(ev) {\n\t        var type = TOUCH_INPUT_MAP[ev.type];\n\t        var touches = getTouches.call(this, ev, type);\n\t        if (!touches) {\n\t            return;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction getTouches(ev, type) {\n\t    var allTouches = toArray(ev.touches);\n\t    var targetIds = this.targetIds;\n\t\n\t    // when there is only one touch, the process can be simplified\n\t    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n\t        targetIds[allTouches[0].identifier] = true;\n\t        return [allTouches, allTouches];\n\t    }\n\t\n\t    var i,\n\t        targetTouches,\n\t        changedTouches = toArray(ev.changedTouches),\n\t        changedTargetTouches = [],\n\t        target = this.target;\n\t\n\t    // get target touches from touches\n\t    targetTouches = allTouches.filter(function(touch) {\n\t        return hasParent(touch.target, target);\n\t    });\n\t\n\t    // collect touches\n\t    if (type === INPUT_START) {\n\t        i = 0;\n\t        while (i < targetTouches.length) {\n\t            targetIds[targetTouches[i].identifier] = true;\n\t            i++;\n\t        }\n\t    }\n\t\n\t    // filter changed touches to only contain touches that exist in the collected target ids\n\t    i = 0;\n\t    while (i < changedTouches.length) {\n\t        if (targetIds[changedTouches[i].identifier]) {\n\t            changedTargetTouches.push(changedTouches[i]);\n\t        }\n\t\n\t        // cleanup removed touches\n\t        if (type & (INPUT_END | INPUT_CANCEL)) {\n\t            delete targetIds[changedTouches[i].identifier];\n\t        }\n\t        i++;\n\t    }\n\t\n\t    if (!changedTargetTouches.length) {\n\t        return;\n\t    }\n\t\n\t    return [\n\t        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n\t        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n\t        changedTargetTouches\n\t    ];\n\t}\n\t\n\t/**\n\t * Combined touch and mouse input\n\t *\n\t * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n\t * This because touch devices also emit mouse events while doing a touch.\n\t *\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchMouseInput() {\n\t    Input.apply(this, arguments);\n\t\n\t    var handler = bindFn(this.handler, this);\n\t    this.touch = new TouchInput(this.manager, handler);\n\t    this.mouse = new MouseInput(this.manager, handler);\n\t}\n\t\n\tinherit(TouchMouseInput, Input, {\n\t    /**\n\t     * handle mouse and touch events\n\t     * @param {Hammer} manager\n\t     * @param {String} inputEvent\n\t     * @param {Object} inputData\n\t     */\n\t    handler: function TMEhandler(manager, inputEvent, inputData) {\n\t        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n\t            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\t\n\t        // when we're in a touch event, so  block all upcoming mouse events\n\t        // most mobile browser also emit mouseevents, right after touchstart\n\t        if (isTouch) {\n\t            this.mouse.allow = false;\n\t        } else if (isMouse && !this.mouse.allow) {\n\t            return;\n\t        }\n\t\n\t        // reset the allowMouse when we're done\n\t        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n\t            this.mouse.allow = true;\n\t        }\n\t\n\t        this.callback(manager, inputEvent, inputData);\n\t    },\n\t\n\t    /**\n\t     * remove the event listeners\n\t     */\n\t    destroy: function destroy() {\n\t        this.touch.destroy();\n\t        this.mouse.destroy();\n\t    }\n\t});\n\t\n\tvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n\tvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\t\n\t// magical touchAction value\n\tvar TOUCH_ACTION_COMPUTE = 'compute';\n\tvar TOUCH_ACTION_AUTO = 'auto';\n\tvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\tvar TOUCH_ACTION_NONE = 'none';\n\tvar TOUCH_ACTION_PAN_X = 'pan-x';\n\tvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\t\n\t/**\n\t * Touch Action\n\t * sets the touchAction property or uses the js alternative\n\t * @param {Manager} manager\n\t * @param {String} value\n\t * @constructor\n\t */\n\tfunction TouchAction(manager, value) {\n\t    this.manager = manager;\n\t    this.set(value);\n\t}\n\t\n\tTouchAction.prototype = {\n\t    /**\n\t     * set the touchAction value on the element or enable the polyfill\n\t     * @param {String} value\n\t     */\n\t    set: function(value) {\n\t        // find out the touch-action by the event handlers\n\t        if (value == TOUCH_ACTION_COMPUTE) {\n\t            value = this.compute();\n\t        }\n\t\n\t        if (NATIVE_TOUCH_ACTION && this.manager.element.style) {\n\t            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n\t        }\n\t        this.actions = value.toLowerCase().trim();\n\t    },\n\t\n\t    /**\n\t     * just re-set the touchAction value\n\t     */\n\t    update: function() {\n\t        this.set(this.manager.options.touchAction);\n\t    },\n\t\n\t    /**\n\t     * compute the value for the touchAction property based on the recognizer's settings\n\t     * @returns {String} value\n\t     */\n\t    compute: function() {\n\t        var actions = [];\n\t        each(this.manager.recognizers, function(recognizer) {\n\t            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n\t                actions = actions.concat(recognizer.getTouchAction());\n\t            }\n\t        });\n\t        return cleanTouchActions(actions.join(' '));\n\t    },\n\t\n\t    /**\n\t     * this method is called on each input cycle and provides the preventing of the browser behavior\n\t     * @param {Object} input\n\t     */\n\t    preventDefaults: function(input) {\n\t        // not needed with native support for the touchAction property\n\t        if (NATIVE_TOUCH_ACTION) {\n\t            return;\n\t        }\n\t\n\t        var srcEvent = input.srcEvent;\n\t        var direction = input.offsetDirection;\n\t\n\t        // if the touch action did prevented once this session\n\t        if (this.manager.session.prevented) {\n\t            srcEvent.preventDefault();\n\t            return;\n\t        }\n\t\n\t        var actions = this.actions;\n\t        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n\t        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t\n\t        if (hasNone) {\n\t            //do not prevent defaults if this is a tap gesture\n\t\n\t            var isTapPointer = input.pointers.length === 1;\n\t            var isTapMovement = input.distance < 2;\n\t            var isTapTouchTime = input.deltaTime < 250;\n\t\n\t            if (isTapPointer && isTapMovement && isTapTouchTime) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (hasPanX && hasPanY) {\n\t            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n\t            return;\n\t        }\n\t\n\t        if (hasNone ||\n\t            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n\t            (hasPanX && direction & DIRECTION_VERTICAL)) {\n\t            return this.preventSrc(srcEvent);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n\t     * @param {Object} srcEvent\n\t     */\n\t    preventSrc: function(srcEvent) {\n\t        this.manager.session.prevented = true;\n\t        srcEvent.preventDefault();\n\t    }\n\t};\n\t\n\t/**\n\t * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n\t * @param {String} actions\n\t * @returns {*}\n\t */\n\tfunction cleanTouchActions(actions) {\n\t    // none\n\t    if (inStr(actions, TOUCH_ACTION_NONE)) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t\n\t    // if both pan-x and pan-y are set (different recognizers\n\t    // for different directions, e.g. horizontal pan but vertical swipe?)\n\t    // we need none (as otherwise with pan-x pan-y combined none of these\n\t    // recognizers will work, since the browser would handle all panning\n\t    if (hasPanX && hasPanY) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    // pan-x OR pan-y\n\t    if (hasPanX || hasPanY) {\n\t        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\t    }\n\t\n\t    // manipulation\n\t    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n\t        return TOUCH_ACTION_MANIPULATION;\n\t    }\n\t\n\t    return TOUCH_ACTION_AUTO;\n\t}\n\t\n\t/**\n\t * Recognizer flow explained; *\n\t * All recognizers have the initial state of POSSIBLE when a input session starts.\n\t * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n\t * Example session for mouse-input: mousedown -> mousemove -> mouseup\n\t *\n\t * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n\t * which determines with state it should be.\n\t *\n\t * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n\t * POSSIBLE to give it another change on the next cycle.\n\t *\n\t *               Possible\n\t *                  |\n\t *            +-----+---------------+\n\t *            |                     |\n\t *      +-----+-----+               |\n\t *      |           |               |\n\t *   Failed      Cancelled          |\n\t *                          +-------+------+\n\t *                          |              |\n\t *                      Recognized       Began\n\t *                                         |\n\t *                                      Changed\n\t *                                         |\n\t *                                  Ended/Recognized\n\t */\n\tvar STATE_POSSIBLE = 1;\n\tvar STATE_BEGAN = 2;\n\tvar STATE_CHANGED = 4;\n\tvar STATE_ENDED = 8;\n\tvar STATE_RECOGNIZED = STATE_ENDED;\n\tvar STATE_CANCELLED = 16;\n\tvar STATE_FAILED = 32;\n\t\n\t/**\n\t * Recognizer\n\t * Every recognizer needs to extend from this class.\n\t * @constructor\n\t * @param {Object} options\n\t */\n\tfunction Recognizer(options) {\n\t    this.options = assign({}, this.defaults, options || {});\n\t\n\t    this.id = uniqueId();\n\t\n\t    this.manager = null;\n\t\n\t    // default is enable true\n\t    this.options.enable = ifUndefined(this.options.enable, true);\n\t\n\t    this.state = STATE_POSSIBLE;\n\t\n\t    this.simultaneous = {};\n\t    this.requireFail = [];\n\t}\n\t\n\tRecognizer.prototype = {\n\t    /**\n\t     * @virtual\n\t     * @type {Object}\n\t     */\n\t    defaults: {},\n\t\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @return {Recognizer}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // also update the touchAction, in case something changed about the directions/enabled state\n\t        this.manager && this.manager.touchAction.update();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognize simultaneous with an other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    recognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        var simultaneous = this.simultaneous;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (!simultaneous[otherRecognizer.id]) {\n\t            simultaneous[otherRecognizer.id] = otherRecognizer;\n\t            otherRecognizer.recognizeWith(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRecognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        delete this.simultaneous[otherRecognizer.id];\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognizer can only run when an other is failing\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    requireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        var requireFail = this.requireFail;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (inArray(requireFail, otherRecognizer) === -1) {\n\t            requireFail.push(otherRecognizer);\n\t            otherRecognizer.requireFailure(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the requireFailure link. it does not remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRequireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        var index = inArray(this.requireFail, otherRecognizer);\n\t        if (index > -1) {\n\t            this.requireFail.splice(index, 1);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * has require failures boolean\n\t     * @returns {boolean}\n\t     */\n\t    hasRequireFailures: function() {\n\t        return this.requireFail.length > 0;\n\t    },\n\t\n\t    /**\n\t     * if the recognizer can recognize simultaneous with an other recognizer\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Boolean}\n\t     */\n\t    canRecognizeWith: function(otherRecognizer) {\n\t        return !!this.simultaneous[otherRecognizer.id];\n\t    },\n\t\n\t    /**\n\t     * You should use `tryEmit` instead of `emit` directly to check\n\t     * that all the needed recognizers has failed before emitting.\n\t     * @param {Object} input\n\t     */\n\t    emit: function(input) {\n\t        var self = this;\n\t        var state = this.state;\n\t\n\t        function emit(event) {\n\t            self.manager.emit(event, input);\n\t        }\n\t\n\t        // 'panstart' and 'panmove'\n\t        if (state < STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t\n\t        emit(self.options.event); // simple 'eventName' events\n\t\n\t        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n\t            emit(input.additionalEvent);\n\t        }\n\t\n\t        // panend and pancancel\n\t        if (state >= STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Check that all the require failure recognizers has failed,\n\t     * if true, it emits a gesture event,\n\t     * otherwise, setup the state to FAILED.\n\t     * @param {Object} input\n\t     */\n\t    tryEmit: function(input) {\n\t        if (this.canEmit()) {\n\t            return this.emit(input);\n\t        }\n\t        // it's failing anyway\n\t        this.state = STATE_FAILED;\n\t    },\n\t\n\t    /**\n\t     * can we emit?\n\t     * @returns {boolean}\n\t     */\n\t    canEmit: function() {\n\t        var i = 0;\n\t        while (i < this.requireFail.length) {\n\t            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n\t                return false;\n\t            }\n\t            i++;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**\n\t     * update the recognizer\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        // make a new copy of the inputData\n\t        // so we can change the inputData without messing up the other recognizers\n\t        var inputDataClone = assign({}, inputData);\n\t\n\t        // is is enabled and allow recognizing?\n\t        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n\t            this.reset();\n\t            this.state = STATE_FAILED;\n\t            return;\n\t        }\n\t\n\t        // reset when we've reached the end\n\t        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n\t            this.state = STATE_POSSIBLE;\n\t        }\n\t\n\t        this.state = this.process(inputDataClone);\n\t\n\t        // the recognizer has recognized a gesture\n\t        // so trigger an event\n\t        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n\t            this.tryEmit(inputDataClone);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * return the state of the recognizer\n\t     * the actual recognizing happens in this method\n\t     * @virtual\n\t     * @param {Object} inputData\n\t     * @returns {Const} STATE\n\t     */\n\t    process: function(inputData) { }, // jshint ignore:line\n\t\n\t    /**\n\t     * return the preferred touch-action\n\t     * @virtual\n\t     * @returns {Array}\n\t     */\n\t    getTouchAction: function() { },\n\t\n\t    /**\n\t     * called when the gesture isn't allowed to recognize\n\t     * like when another is being recognized or it is disabled\n\t     * @virtual\n\t     */\n\t    reset: function() { }\n\t};\n\t\n\t/**\n\t * get a usable string, used as event postfix\n\t * @param {Const} state\n\t * @returns {String} state\n\t */\n\tfunction stateStr(state) {\n\t    if (state & STATE_CANCELLED) {\n\t        return 'cancel';\n\t    } else if (state & STATE_ENDED) {\n\t        return 'end';\n\t    } else if (state & STATE_CHANGED) {\n\t        return 'move';\n\t    } else if (state & STATE_BEGAN) {\n\t        return 'start';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * direction cons to string\n\t * @param {Const} direction\n\t * @returns {String}\n\t */\n\tfunction directionStr(direction) {\n\t    if (direction == DIRECTION_DOWN) {\n\t        return 'down';\n\t    } else if (direction == DIRECTION_UP) {\n\t        return 'up';\n\t    } else if (direction == DIRECTION_LEFT) {\n\t        return 'left';\n\t    } else if (direction == DIRECTION_RIGHT) {\n\t        return 'right';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * get a recognizer by name if it is bound to a manager\n\t * @param {Recognizer|String} otherRecognizer\n\t * @param {Recognizer} recognizer\n\t * @returns {Recognizer}\n\t */\n\tfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n\t    var manager = recognizer.manager;\n\t    if (manager) {\n\t        return manager.get(otherRecognizer);\n\t    }\n\t    return otherRecognizer;\n\t}\n\t\n\t/**\n\t * This recognizer is just used as a base for the simple attribute recognizers.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction AttrRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(AttrRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof AttrRecognizer\n\t     */\n\t    defaults: {\n\t        /**\n\t         * @type {Number}\n\t         * @default 1\n\t         */\n\t        pointers: 1\n\t    },\n\t\n\t    /**\n\t     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {Boolean} recognized\n\t     */\n\t    attrTest: function(input) {\n\t        var optionPointers = this.options.pointers;\n\t        return optionPointers === 0 || input.pointers.length === optionPointers;\n\t    },\n\t\n\t    /**\n\t     * Process the input and return the state for the recognizer\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {*} State\n\t     */\n\t    process: function(input) {\n\t        var state = this.state;\n\t        var eventType = input.eventType;\n\t\n\t        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n\t        var isValid = this.attrTest(input);\n\t\n\t        // on cancel input and we've recognized before, return STATE_CANCELLED\n\t        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n\t            return state | STATE_CANCELLED;\n\t        } else if (isRecognized || isValid) {\n\t            if (eventType & INPUT_END) {\n\t                return state | STATE_ENDED;\n\t            } else if (!(state & STATE_BEGAN)) {\n\t                return STATE_BEGAN;\n\t            }\n\t            return state | STATE_CHANGED;\n\t        }\n\t        return STATE_FAILED;\n\t    }\n\t});\n\t\n\t/**\n\t * Pan\n\t * Recognized when the pointer is down and moved in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PanRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t\n\t    this.pX = null;\n\t    this.pY = null;\n\t}\n\t\n\tinherit(PanRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PanRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pan',\n\t        threshold: 10,\n\t        pointers: 1,\n\t        direction: DIRECTION_ALL\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        var direction = this.options.direction;\n\t        var actions = [];\n\t        if (direction & DIRECTION_HORIZONTAL) {\n\t            actions.push(TOUCH_ACTION_PAN_Y);\n\t        }\n\t        if (direction & DIRECTION_VERTICAL) {\n\t            actions.push(TOUCH_ACTION_PAN_X);\n\t        }\n\t        return actions;\n\t    },\n\t\n\t    directionTest: function(input) {\n\t        var options = this.options;\n\t        var hasMoved = true;\n\t        var distance = input.distance;\n\t        var direction = input.direction;\n\t        var x = input.deltaX;\n\t        var y = input.deltaY;\n\t\n\t        // lock to axis?\n\t        if (!(direction & options.direction)) {\n\t            if (options.direction & DIRECTION_HORIZONTAL) {\n\t                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t                hasMoved = x != this.pX;\n\t                distance = Math.abs(input.deltaX);\n\t            } else {\n\t                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n\t                hasMoved = y != this.pY;\n\t                distance = Math.abs(input.deltaY);\n\t            }\n\t        }\n\t        input.direction = direction;\n\t        return hasMoved && distance > options.threshold && direction & options.direction;\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n\t            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n\t    },\n\t\n\t    emit: function(input) {\n\t\n\t        this.pX = input.deltaX;\n\t        this.pY = input.deltaY;\n\t\n\t        var direction = directionStr(input.direction);\n\t\n\t        if (direction) {\n\t            input.additionalEvent = this.options.event + direction;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Pinch\n\t * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PinchRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(PinchRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pinch',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (input.scale !== 1) {\n\t            var inOut = input.scale < 1 ? 'in' : 'out';\n\t            input.additionalEvent = this.options.event + inOut;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Press\n\t * Recognized when the pointer is down for x ms without any movement.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction PressRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t}\n\t\n\tinherit(PressRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PressRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'press',\n\t        pointers: 1,\n\t        time: 251, // minimal time of the pointer to be pressed\n\t        threshold: 9 // a minimal movement is ok, but keep it low\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_AUTO];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTime = input.deltaTime > options.time;\n\t\n\t        this._input = input;\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n\t            this.reset();\n\t        } else if (input.eventType & INPUT_START) {\n\t            this.reset();\n\t            this._timer = setTimeoutContext(function() {\n\t                this.state = STATE_RECOGNIZED;\n\t                this.tryEmit();\n\t            }, options.time, this);\n\t        } else if (input.eventType & INPUT_END) {\n\t            return STATE_RECOGNIZED;\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (this.state !== STATE_RECOGNIZED) {\n\t            return;\n\t        }\n\t\n\t        if (input && (input.eventType & INPUT_END)) {\n\t            this.manager.emit(this.options.event + 'up', input);\n\t        } else {\n\t            this._input.timeStamp = now();\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Rotate\n\t * Recognized when two or more pointer are moving in a circular motion.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction RotateRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(RotateRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof RotateRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'rotate',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n\t    }\n\t});\n\t\n\t/**\n\t * Swipe\n\t * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction SwipeRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(SwipeRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof SwipeRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'swipe',\n\t        threshold: 10,\n\t        velocity: 0.3,\n\t        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n\t        pointers: 1\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return PanRecognizer.prototype.getTouchAction.call(this);\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        var direction = this.options.direction;\n\t        var velocity;\n\t\n\t        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n\t            velocity = input.overallVelocity;\n\t        } else if (direction & DIRECTION_HORIZONTAL) {\n\t            velocity = input.overallVelocityX;\n\t        } else if (direction & DIRECTION_VERTICAL) {\n\t            velocity = input.overallVelocityY;\n\t        }\n\t\n\t        return this._super.attrTest.call(this, input) &&\n\t            direction & input.offsetDirection &&\n\t            input.distance > this.options.threshold &&\n\t            input.maxPointers == this.options.pointers &&\n\t            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n\t    },\n\t\n\t    emit: function(input) {\n\t        var direction = directionStr(input.offsetDirection);\n\t        if (direction) {\n\t            this.manager.emit(this.options.event + direction, input);\n\t        }\n\t\n\t        this.manager.emit(this.options.event, input);\n\t    }\n\t});\n\t\n\t/**\n\t * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n\t * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n\t * a single tap.\n\t *\n\t * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n\t * multi-taps being recognized.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction TapRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    // previous time and center,\n\t    // used for tap counting\n\t    this.pTime = false;\n\t    this.pCenter = false;\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t    this.count = 0;\n\t}\n\t\n\tinherit(TapRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'tap',\n\t        pointers: 1,\n\t        taps: 1,\n\t        interval: 300, // max time between the multi-tap taps\n\t        time: 250, // max time of the pointer to be down (like finger on the screen)\n\t        threshold: 9, // a minimal movement is ok, but keep it low\n\t        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_MANIPULATION];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTouchTime = input.deltaTime < options.time;\n\t\n\t        this.reset();\n\t\n\t        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n\t            return this.failTimeout();\n\t        }\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (validMovement && validTouchTime && validPointers) {\n\t            if (input.eventType != INPUT_END) {\n\t                return this.failTimeout();\n\t            }\n\t\n\t            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n\t            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\t\n\t            this.pTime = input.timeStamp;\n\t            this.pCenter = input.center;\n\t\n\t            if (!validMultiTap || !validInterval) {\n\t                this.count = 1;\n\t            } else {\n\t                this.count += 1;\n\t            }\n\t\n\t            this._input = input;\n\t\n\t            // if tap count matches we have recognized it,\n\t            // else it has began recognizing...\n\t            var tapCount = this.count % options.taps;\n\t            if (tapCount === 0) {\n\t                // no failing requirements, immediately trigger the tap event\n\t                // or wait as long as the multitap interval to trigger\n\t                if (!this.hasRequireFailures()) {\n\t                    return STATE_RECOGNIZED;\n\t                } else {\n\t                    this._timer = setTimeoutContext(function() {\n\t                        this.state = STATE_RECOGNIZED;\n\t                        this.tryEmit();\n\t                    }, options.interval, this);\n\t                    return STATE_BEGAN;\n\t                }\n\t            }\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    failTimeout: function() {\n\t        this._timer = setTimeoutContext(function() {\n\t            this.state = STATE_FAILED;\n\t        }, this.options.interval, this);\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function() {\n\t        if (this.state == STATE_RECOGNIZED) {\n\t            this._input.tapCount = this.count;\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Simple way to create a manager with a default set of recognizers.\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Hammer(element, options) {\n\t    options = options || {};\n\t    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n\t    return new Manager(element, options);\n\t}\n\t\n\t/**\n\t * @const {string}\n\t */\n\tHammer.VERSION = '2.0.6';\n\t\n\t/**\n\t * default settings\n\t * @namespace\n\t */\n\tHammer.defaults = {\n\t    /**\n\t     * set if DOM events are being triggered.\n\t     * But this is slower and unused by simple implementations, so disabled by default.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    domEvents: false,\n\t\n\t    /**\n\t     * The value for the touchAction property/fallback.\n\t     * When set to `compute` it will magically set the correct value based on the added recognizers.\n\t     * @type {String}\n\t     * @default compute\n\t     */\n\t    touchAction: TOUCH_ACTION_COMPUTE,\n\t\n\t    /**\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\t    enable: true,\n\t\n\t    /**\n\t     * EXPERIMENTAL FEATURE -- can be removed/changed\n\t     * Change the parent input target element.\n\t     * If Null, then it is being set the to main element.\n\t     * @type {Null|EventTarget}\n\t     * @default null\n\t     */\n\t    inputTarget: null,\n\t\n\t    /**\n\t     * force an input class\n\t     * @type {Null|Function}\n\t     * @default null\n\t     */\n\t    inputClass: null,\n\t\n\t    /**\n\t     * Default recognizer setup when calling `Hammer()`\n\t     * When creating a new Manager these will be skipped.\n\t     * @type {Array}\n\t     */\n\t    preset: [\n\t        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n\t        [RotateRecognizer, {enable: false}],\n\t        [PinchRecognizer, {enable: false}, ['rotate']],\n\t        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n\t        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n\t        [TapRecognizer],\n\t        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n\t        [PressRecognizer]\n\t    ],\n\t\n\t    /**\n\t     * Some CSS properties can be used to improve the working of Hammer.\n\t     * Add them to this method and they will be set when creating a new Manager.\n\t     * @namespace\n\t     */\n\t    cssProps: {\n\t        /**\n\t         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userSelect: 'none',\n\t\n\t        /**\n\t         * Disable the Windows Phone grippers when pressing an element.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchSelect: 'none',\n\t\n\t        /**\n\t         * Disables the default callout shown when you touch and hold a touch target.\n\t         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n\t         * a callout containing information about the link. This property allows you to disable that callout.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchCallout: 'none',\n\t\n\t        /**\n\t         * Specifies whether zooming is enabled. Used by IE10>\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        contentZooming: 'none',\n\t\n\t        /**\n\t         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userDrag: 'none',\n\t\n\t        /**\n\t         * Overrides the highlight color shown when the user taps a link or a JavaScript\n\t         * clickable element in iOS. This property obeys the alpha value, if specified.\n\t         * @type {String}\n\t         * @default 'rgba(0,0,0,0)'\n\t         */\n\t        tapHighlightColor: 'rgba(0,0,0,0)'\n\t    }\n\t};\n\t\n\tvar STOP = 1;\n\tvar FORCED_STOP = 2;\n\t\n\t/**\n\t * Manager\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Manager(element, options) {\n\t    this.options = assign({}, Hammer.defaults, options || {});\n\t\n\t    this.options.inputTarget = this.options.inputTarget || element;\n\t\n\t    this.handlers = {};\n\t    this.session = {};\n\t    this.recognizers = [];\n\t\n\t    this.element = element;\n\t    this.input = createInputInstance(this);\n\t    this.touchAction = new TouchAction(this, this.options.touchAction);\n\t\n\t    toggleCssProps(this, true);\n\t\n\t    each(this.options.recognizers, function(item) {\n\t        var recognizer = this.add(new (item[0])(item[1]));\n\t        item[2] && recognizer.recognizeWith(item[2]);\n\t        item[3] && recognizer.requireFailure(item[3]);\n\t    }, this);\n\t}\n\t\n\tManager.prototype = {\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @returns {Manager}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // Options that need a little more setup\n\t        if (options.touchAction) {\n\t            this.touchAction.update();\n\t        }\n\t        if (options.inputTarget) {\n\t            // Clean up existing event listeners and reinitialize\n\t            this.input.destroy();\n\t            this.input.target = options.inputTarget;\n\t            this.input.init();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * stop recognizing for this session.\n\t     * This session will be discarded, when a new [input]start event is fired.\n\t     * When forced, the recognizer cycle is stopped immediately.\n\t     * @param {Boolean} [force]\n\t     */\n\t    stop: function(force) {\n\t        this.session.stopped = force ? FORCED_STOP : STOP;\n\t    },\n\t\n\t    /**\n\t     * run the recognizers!\n\t     * called by the inputHandler function on every movement of the pointers (touches)\n\t     * it walks through all the recognizers and tries to detect the gesture that is being made\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        var session = this.session;\n\t        if (session.stopped) {\n\t            return;\n\t        }\n\t\n\t        // run the touch-action polyfill\n\t        this.touchAction.preventDefaults(inputData);\n\t\n\t        var recognizer;\n\t        var recognizers = this.recognizers;\n\t\n\t        // this holds the recognizer that is being recognized.\n\t        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n\t        // if no recognizer is detecting a thing, it is set to `null`\n\t        var curRecognizer = session.curRecognizer;\n\t\n\t        // reset when the last recognizer is recognized\n\t        // or when we're in a new session\n\t        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n\t            curRecognizer = session.curRecognizer = null;\n\t        }\n\t\n\t        var i = 0;\n\t        while (i < recognizers.length) {\n\t            recognizer = recognizers[i];\n\t\n\t            // find out if we are allowed try to recognize the input for this one.\n\t            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n\t            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n\t            //      that is being recognized.\n\t            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n\t            //      this can be setup with the `recognizeWith()` method on the recognizer.\n\t            if (session.stopped !== FORCED_STOP && ( // 1\n\t                    !curRecognizer || recognizer == curRecognizer || // 2\n\t                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n\t                recognizer.recognize(inputData);\n\t            } else {\n\t                recognizer.reset();\n\t            }\n\t\n\t            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n\t            // current active recognizer. but only if we don't already have an active recognizer\n\t            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n\t                curRecognizer = session.curRecognizer = recognizer;\n\t            }\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * get a recognizer by its event name.\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Recognizer|Null}\n\t     */\n\t    get: function(recognizer) {\n\t        if (recognizer instanceof Recognizer) {\n\t            return recognizer;\n\t        }\n\t\n\t        var recognizers = this.recognizers;\n\t        for (var i = 0; i < recognizers.length; i++) {\n\t            if (recognizers[i].options.event == recognizer) {\n\t                return recognizers[i];\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * add a recognizer to the manager\n\t     * existing recognizers with the same event name will be removed\n\t     * @param {Recognizer} recognizer\n\t     * @returns {Recognizer|Manager}\n\t     */\n\t    add: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'add', this)) {\n\t            return this;\n\t        }\n\t\n\t        // remove existing\n\t        var existing = this.get(recognizer.options.event);\n\t        if (existing) {\n\t            this.remove(existing);\n\t        }\n\t\n\t        this.recognizers.push(recognizer);\n\t        recognizer.manager = this;\n\t\n\t        this.touchAction.update();\n\t        return recognizer;\n\t    },\n\t\n\t    /**\n\t     * remove a recognizer by name or instance\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Manager}\n\t     */\n\t    remove: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'remove', this)) {\n\t            return this;\n\t        }\n\t\n\t        recognizer = this.get(recognizer);\n\t\n\t        // let's make sure this recognizer exists\n\t        if (recognizer) {\n\t            var recognizers = this.recognizers;\n\t            var index = inArray(recognizers, recognizer);\n\t\n\t            if (index !== -1) {\n\t                recognizers.splice(index, 1);\n\t                this.touchAction.update();\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * bind event\n\t     * @param {String} events\n\t     * @param {Function} handler\n\t     * @returns {EventEmitter} this\n\t     */\n\t    on: function(events, handler) {\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            handlers[event] = handlers[event] || [];\n\t            handlers[event].push(handler);\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * unbind event, leave emit blank to remove all handlers\n\t     * @param {String} events\n\t     * @param {Function} [handler]\n\t     * @returns {EventEmitter} this\n\t     */\n\t    off: function(events, handler) {\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            if (!handler) {\n\t                delete handlers[event];\n\t            } else {\n\t                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * emit event to the listeners\n\t     * @param {String} event\n\t     * @param {Object} data\n\t     */\n\t    emit: function(event, data) {\n\t        // we also want to trigger dom events\n\t        if (this.options.domEvents) {\n\t            triggerDomEvent(event, data);\n\t        }\n\t\n\t        // no handlers, so skip it all\n\t        var handlers = this.handlers[event] && this.handlers[event].slice();\n\t        if (!handlers || !handlers.length) {\n\t            return;\n\t        }\n\t\n\t        data.type = event;\n\t        data.preventDefault = function() {\n\t            data.srcEvent.preventDefault();\n\t        };\n\t\n\t        var i = 0;\n\t        while (i < handlers.length) {\n\t            handlers[i](data);\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * destroy the manager and unbinds all events\n\t     * it doesn't unbind dom events, that is the user own responsibility\n\t     */\n\t    destroy: function() {\n\t        this.element && toggleCssProps(this, false);\n\t\n\t        this.handlers = {};\n\t        this.session = {};\n\t        this.input.destroy();\n\t        this.element = null;\n\t    }\n\t};\n\t\n\t/**\n\t * add/remove the css properties as defined in manager.options.cssProps\n\t * @param {Manager} manager\n\t * @param {Boolean} add\n\t */\n\tfunction toggleCssProps(manager, add) {\n\t    var element = manager.element;\n\t    if (!element.style) {\n\t        return;\n\t    }\n\t    each(manager.options.cssProps, function(value, name) {\n\t        element.style[prefixed(element.style, name)] = add ? value : '';\n\t    });\n\t}\n\t\n\t/**\n\t * trigger dom event\n\t * @param {String} event\n\t * @param {Object} data\n\t */\n\tfunction triggerDomEvent(event, data) {\n\t    var gestureEvent = document.createEvent('Event');\n\t    gestureEvent.initEvent(event, true, true);\n\t    gestureEvent.gesture = data;\n\t    data.target.dispatchEvent(gestureEvent);\n\t}\n\t\n\tassign(Hammer, {\n\t    INPUT_START: INPUT_START,\n\t    INPUT_MOVE: INPUT_MOVE,\n\t    INPUT_END: INPUT_END,\n\t    INPUT_CANCEL: INPUT_CANCEL,\n\t\n\t    STATE_POSSIBLE: STATE_POSSIBLE,\n\t    STATE_BEGAN: STATE_BEGAN,\n\t    STATE_CHANGED: STATE_CHANGED,\n\t    STATE_ENDED: STATE_ENDED,\n\t    STATE_RECOGNIZED: STATE_RECOGNIZED,\n\t    STATE_CANCELLED: STATE_CANCELLED,\n\t    STATE_FAILED: STATE_FAILED,\n\t\n\t    DIRECTION_NONE: DIRECTION_NONE,\n\t    DIRECTION_LEFT: DIRECTION_LEFT,\n\t    DIRECTION_RIGHT: DIRECTION_RIGHT,\n\t    DIRECTION_UP: DIRECTION_UP,\n\t    DIRECTION_DOWN: DIRECTION_DOWN,\n\t    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n\t    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n\t    DIRECTION_ALL: DIRECTION_ALL,\n\t\n\t    Manager: Manager,\n\t    Input: Input,\n\t    TouchAction: TouchAction,\n\t\n\t    TouchInput: TouchInput,\n\t    MouseInput: MouseInput,\n\t    PointerEventInput: PointerEventInput,\n\t    TouchMouseInput: TouchMouseInput,\n\t    SingleTouchInput: SingleTouchInput,\n\t\n\t    Recognizer: Recognizer,\n\t    AttrRecognizer: AttrRecognizer,\n\t    Tap: TapRecognizer,\n\t    Pan: PanRecognizer,\n\t    Swipe: SwipeRecognizer,\n\t    Pinch: PinchRecognizer,\n\t    Rotate: RotateRecognizer,\n\t    Press: PressRecognizer,\n\t\n\t    on: addEventListeners,\n\t    off: removeEventListeners,\n\t    each: each,\n\t    merge: merge,\n\t    extend: extend,\n\t    assign: assign,\n\t    inherit: inherit,\n\t    bindFn: bindFn,\n\t    prefixed: prefixed\n\t});\n\t\n\t// this prevents errors when Hammer is loaded in the presence of an AMD\n\t//  style loader but by script tag, not by the loader.\n\tvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n\tfreeGlobal.Hammer = Hammer;\n\t\n\tif (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return Hammer;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t    module.exports = Hammer;\n\t} else {\n\t    window[exportName] = Hammer;\n\t}\n\t\n\t})(window, document, 'Hammer');\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar style = document.createElement('p').style,\n\t    prefixes = 'O ms Moz webkit'.split(' '),\n\t    hasPrefix = /^(o|ms|moz|webkit)/,\n\t    upper = /([A-Z])/g,\n\t    memo = {};\n\t\n\tfunction get(key){\n\t    return (key in memo) ? memo[key] : memo[key] = prefix(key);\n\t}\n\t\n\tfunction prefix(key){\n\t    var capitalizedKey = key.replace(/-([a-z])/g, function(s, match){\n\t            return match.toUpperCase();\n\t        }),\n\t        i = prefixes.length,\n\t        name;\n\t\n\t    if (style[capitalizedKey] !== undefined) return capitalizedKey;\n\t\n\t    capitalizedKey = capitalize(key);\n\t\n\t    while (i--) {\n\t        name = prefixes[i] + capitalizedKey;\n\t        if (style[name] !== undefined) return name;\n\t    }\n\t\n\t    throw new Error('unable to prefix ' + key);\n\t}\n\t\n\tfunction capitalize(str){\n\t    return str.charAt(0).toUpperCase() + str.slice(1);\n\t}\n\t\n\tfunction dashedPrefix(key){\n\t    var prefixedKey = get(key),\n\t        upper = /([A-Z])/g;\n\t\n\t    if (upper.test(prefixedKey)) {\n\t        prefixedKey = (hasPrefix.test(prefixedKey) ? '-' : '') + prefixedKey.replace(upper, '-$1');\n\t    }\n\t\n\t    return prefixedKey.toLowerCase();\n\t}\n\t\n\tmodule.exports = get;\n\tmodule.exports.dash = dashedPrefix;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _lodashArrayRemove = __webpack_require__(10);\n\t\n\tvar _lodashArrayRemove2 = _interopRequireDefault(_lodashArrayRemove);\n\t\n\tvar _lodashObjectAssign = __webpack_require__(52);\n\t\n\tvar _lodashObjectAssign2 = _interopRequireDefault(_lodashObjectAssign);\n\t\n\tvar _lodashNumberRandom = __webpack_require__(59);\n\t\n\tvar _lodashNumberRandom2 = _interopRequireDefault(_lodashNumberRandom);\n\t\n\tvar _lodashCollectionFind = __webpack_require__(61);\n\t\n\tvar _lodashCollectionFind2 = _interopRequireDefault(_lodashCollectionFind);\n\t\n\tvar _lodashCollectionWhere = __webpack_require__(70);\n\t\n\tvar _lodashCollectionWhere2 = _interopRequireDefault(_lodashCollectionWhere);\n\t\n\tvar util = undefined;\n\t\n\tutil = {};\n\t\n\tutil.remove = _lodashArrayRemove2['default'];\n\tutil.assign = _lodashObjectAssign2['default'];\n\tutil.random = _lodashNumberRandom2['default'];\n\tutil.find = _lodashCollectionFind2['default'];\n\tutil.where = _lodashCollectionWhere2['default'];\n\t\n\t/**\r\n\t * Return direct children elements.\r\n\t *\r\n\t * @see http://stackoverflow.com/a/27102446/368691\r\n\t * @param {HTMLElement} element\r\n\t * @return {Array}\r\n\t */\n\tutil.elementChildren = function (element) {\n\t    return util.where(element.childNodes, {\n\t        nodeType: 1\n\t    });\n\t};\n\t\n\t/**\r\n\t * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\r\n\t * @return {Boolean}\r\n\t */\n\tutil.isTouchDevice = function () {\n\t    return 'ontouchstart' in window || navigator.msMaxTouchPoints;\n\t};\n\t\n\texports['default'] = util;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseCallback = __webpack_require__(11),\n\t    basePullAt = __webpack_require__(51);\n\t\n\t/**\n\t * Removes all elements from `array` that `predicate` returns truthy for\n\t * and returns an array of the removed elements. The predicate is bound to\n\t * `thisArg` and invoked with three arguments: (value, index, array).\n\t *\n\t * If a property name is provided for `predicate` the created `_.property`\n\t * style callback returns the property value of the given element.\n\t *\n\t * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t * style callback returns `true` for elements that have a matching property\n\t * value, else `false`.\n\t *\n\t * If an object is provided for `predicate` the created `_.matches` style\n\t * callback returns `true` for elements that have the properties of the given\n\t * object, else `false`.\n\t *\n\t * **Note:** Unlike `_.filter`, this method mutates `array`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Array\n\t * @param {Array} array The array to modify.\n\t * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t *  per iteration.\n\t * @param {*} [thisArg] The `this` binding of `predicate`.\n\t * @returns {Array} Returns the new array of removed elements.\n\t * @example\n\t *\n\t * var array = [1, 2, 3, 4];\n\t * var evens = _.remove(array, function(n) {\n\t *   return n % 2 == 0;\n\t * });\n\t *\n\t * console.log(array);\n\t * // => [1, 3]\n\t *\n\t * console.log(evens);\n\t * // => [2, 4]\n\t */\n\tfunction remove(array, predicate, thisArg) {\n\t  var result = [];\n\t  if (!(array && array.length)) {\n\t    return result;\n\t  }\n\t  var index = -1,\n\t      indexes = [],\n\t      length = array.length;\n\t\n\t  predicate = baseCallback(predicate, thisArg, 3);\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (predicate(value, index, array)) {\n\t      result.push(value);\n\t      indexes.push(index);\n\t    }\n\t  }\n\t  basePullAt(array, indexes);\n\t  return result;\n\t}\n\t\n\tmodule.exports = remove;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseMatches = __webpack_require__(12),\n\t    baseMatchesProperty = __webpack_require__(40),\n\t    bindCallback = __webpack_require__(47),\n\t    identity = __webpack_require__(48),\n\t    property = __webpack_require__(49);\n\t\n\t/**\n\t * The base implementation of `_.callback` which supports specifying the\n\t * number of arguments to provide to `func`.\n\t *\n\t * @private\n\t * @param {*} [func=_.identity] The value to convert to a callback.\n\t * @param {*} [thisArg] The `this` binding of `func`.\n\t * @param {number} [argCount] The number of arguments to provide to `func`.\n\t * @returns {Function} Returns the callback.\n\t */\n\tfunction baseCallback(func, thisArg, argCount) {\n\t  var type = typeof func;\n\t  if (type == 'function') {\n\t    return thisArg === undefined\n\t      ? func\n\t      : bindCallback(func, thisArg, argCount);\n\t  }\n\t  if (func == null) {\n\t    return identity;\n\t  }\n\t  if (type == 'object') {\n\t    return baseMatches(func);\n\t  }\n\t  return thisArg === undefined\n\t    ? property(func)\n\t    : baseMatchesProperty(func, thisArg);\n\t}\n\t\n\tmodule.exports = baseCallback;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsMatch = __webpack_require__(13),\n\t    getMatchData = __webpack_require__(37),\n\t    toObject = __webpack_require__(36);\n\t\n\t/**\n\t * The base implementation of `_.matches` which does not clone `source`.\n\t *\n\t * @private\n\t * @param {Object} source The object of property values to match.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseMatches(source) {\n\t  var matchData = getMatchData(source);\n\t  if (matchData.length == 1 && matchData[0][2]) {\n\t    var key = matchData[0][0],\n\t        value = matchData[0][1];\n\t\n\t    return function(object) {\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      return object[key] === value && (value !== undefined || (key in toObject(object)));\n\t    };\n\t  }\n\t  return function(object) {\n\t    return baseIsMatch(object, matchData);\n\t  };\n\t}\n\t\n\tmodule.exports = baseMatches;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsEqual = __webpack_require__(14),\n\t    toObject = __webpack_require__(36);\n\t\n\t/**\n\t * The base implementation of `_.isMatch` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Object} object The object to inspect.\n\t * @param {Array} matchData The propery names, values, and compare flags to match.\n\t * @param {Function} [customizer] The function to customize comparing objects.\n\t * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t */\n\tfunction baseIsMatch(object, matchData, customizer) {\n\t  var index = matchData.length,\n\t      length = index,\n\t      noCustomizer = !customizer;\n\t\n\t  if (object == null) {\n\t    return !length;\n\t  }\n\t  object = toObject(object);\n\t  while (index--) {\n\t    var data = matchData[index];\n\t    if ((noCustomizer && data[2])\n\t          ? data[1] !== object[data[0]]\n\t          : !(data[0] in object)\n\t        ) {\n\t      return false;\n\t    }\n\t  }\n\t  while (++index < length) {\n\t    data = matchData[index];\n\t    var key = data[0],\n\t        objValue = object[key],\n\t        srcValue = data[1];\n\t\n\t    if (noCustomizer && data[2]) {\n\t      if (objValue === undefined && !(key in object)) {\n\t        return false;\n\t      }\n\t    } else {\n\t      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n\t      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n\t        return false;\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = baseIsMatch;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseIsEqualDeep = __webpack_require__(15),\n\t    isObject = __webpack_require__(24),\n\t    isObjectLike = __webpack_require__(25);\n\t\n\t/**\n\t * The base implementation of `_.isEqual` without support for `this` binding\n\t * `customizer` functions.\n\t *\n\t * @private\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @param {Function} [customizer] The function to customize comparing values.\n\t * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t * @param {Array} [stackA] Tracks traversed `value` objects.\n\t * @param {Array} [stackB] Tracks traversed `other` objects.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t */\n\tfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n\t  if (value === other) {\n\t    return true;\n\t  }\n\t  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t    return value !== value && other !== other;\n\t  }\n\t  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n\t}\n\t\n\tmodule.exports = baseIsEqual;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar equalArrays = __webpack_require__(16),\n\t    equalByTag = __webpack_require__(18),\n\t    equalObjects = __webpack_require__(19),\n\t    isArray = __webpack_require__(32),\n\t    isTypedArray = __webpack_require__(35);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    objectTag = '[object Object]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t * deep comparisons and tracks traversed objects enabling objects with circular\n\t * references to be compared.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Function} [customizer] The function to customize comparing objects.\n\t * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n\t * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t  var objIsArr = isArray(object),\n\t      othIsArr = isArray(other),\n\t      objTag = arrayTag,\n\t      othTag = arrayTag;\n\t\n\t  if (!objIsArr) {\n\t    objTag = objToString.call(object);\n\t    if (objTag == argsTag) {\n\t      objTag = objectTag;\n\t    } else if (objTag != objectTag) {\n\t      objIsArr = isTypedArray(object);\n\t    }\n\t  }\n\t  if (!othIsArr) {\n\t    othTag = objToString.call(other);\n\t    if (othTag == argsTag) {\n\t      othTag = objectTag;\n\t    } else if (othTag != objectTag) {\n\t      othIsArr = isTypedArray(other);\n\t    }\n\t  }\n\t  var objIsObj = objTag == objectTag,\n\t      othIsObj = othTag == objectTag,\n\t      isSameTag = objTag == othTag;\n\t\n\t  if (isSameTag && !(objIsArr || objIsObj)) {\n\t    return equalByTag(object, other, objTag);\n\t  }\n\t  if (!isLoose) {\n\t    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t    if (objIsWrapped || othIsWrapped) {\n\t      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n\t    }\n\t  }\n\t  if (!isSameTag) {\n\t    return false;\n\t  }\n\t  // Assume cyclic values are equal.\n\t  // For more information on detecting circular references see https://es5.github.io/#JO.\n\t  stackA || (stackA = []);\n\t  stackB || (stackB = []);\n\t\n\t  var length = stackA.length;\n\t  while (length--) {\n\t    if (stackA[length] == object) {\n\t      return stackB[length] == other;\n\t    }\n\t  }\n\t  // Add `object` and `other` to the stack of traversed objects.\n\t  stackA.push(object);\n\t  stackB.push(other);\n\t\n\t  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\t\n\t  stackA.pop();\n\t  stackB.pop();\n\t\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseIsEqualDeep;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arraySome = __webpack_require__(17);\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Array} array The array to compare.\n\t * @param {Array} other The other array to compare.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Function} [customizer] The function to customize comparing arrays.\n\t * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t * @param {Array} [stackA] Tracks traversed `value` objects.\n\t * @param {Array} [stackB] Tracks traversed `other` objects.\n\t * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t */\n\tfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t  var index = -1,\n\t      arrLength = array.length,\n\t      othLength = other.length;\n\t\n\t  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n\t    return false;\n\t  }\n\t  // Ignore non-index properties.\n\t  while (++index < arrLength) {\n\t    var arrValue = array[index],\n\t        othValue = other[index],\n\t        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\t\n\t    if (result !== undefined) {\n\t      if (result) {\n\t        continue;\n\t      }\n\t      return false;\n\t    }\n\t    // Recursively compare arrays (susceptible to call stack limits).\n\t    if (isLoose) {\n\t      if (!arraySome(other, function(othValue) {\n\t            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n\t          })) {\n\t        return false;\n\t      }\n\t    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = equalArrays;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.some` for arrays without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t *  else `false`.\n\t */\n\tfunction arraySome(array, predicate) {\n\t  var index = -1,\n\t      length = array.length;\n\t\n\t  while (++index < length) {\n\t    if (predicate(array[index], index, array)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = arraySome;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/** `Object#toString` result references. */\n\tvar boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    numberTag = '[object Number]',\n\t    regexpTag = '[object RegExp]',\n\t    stringTag = '[object String]';\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t * the same `toStringTag`.\n\t *\n\t * **Note:** This function only supports comparing values with tags of\n\t * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {string} tag The `toStringTag` of the objects to compare.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction equalByTag(object, other, tag) {\n\t  switch (tag) {\n\t    case boolTag:\n\t    case dateTag:\n\t      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n\t      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n\t      return +object == +other;\n\t\n\t    case errorTag:\n\t      return object.name == other.name && object.message == other.message;\n\t\n\t    case numberTag:\n\t      // Treat `NaN` vs. `NaN` as equal.\n\t      return (object != +object)\n\t        ? other != +other\n\t        : object == +other;\n\t\n\t    case regexpTag:\n\t    case stringTag:\n\t      // Coerce regexes to strings and treat strings primitives and string\n\t      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n\t      return object == (other + '');\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = equalByTag;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar keys = __webpack_require__(20);\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * A specialized version of `baseIsEqualDeep` for objects with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Function} [customizer] The function to customize comparing values.\n\t * @param {boolean} [isLoose] Specify performing partial comparisons.\n\t * @param {Array} [stackA] Tracks traversed `value` objects.\n\t * @param {Array} [stackB] Tracks traversed `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t */\n\tfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n\t  var objProps = keys(object),\n\t      objLength = objProps.length,\n\t      othProps = keys(other),\n\t      othLength = othProps.length;\n\t\n\t  if (objLength != othLength && !isLoose) {\n\t    return false;\n\t  }\n\t  var index = objLength;\n\t  while (index--) {\n\t    var key = objProps[index];\n\t    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n\t      return false;\n\t    }\n\t  }\n\t  var skipCtor = isLoose;\n\t  while (++index < objLength) {\n\t    key = objProps[index];\n\t    var objValue = object[key],\n\t        othValue = other[key],\n\t        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\t\n\t    // Recursively compare objects (susceptible to call stack limits).\n\t    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n\t      return false;\n\t    }\n\t    skipCtor || (skipCtor = key == 'constructor');\n\t  }\n\t  if (!skipCtor) {\n\t    var objCtor = object.constructor,\n\t        othCtor = other.constructor;\n\t\n\t    // Non `Object` object instances with different constructors are not equal.\n\t    if (objCtor != othCtor &&\n\t        ('constructor' in object && 'constructor' in other) &&\n\t        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tmodule.exports = equalObjects;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(21),\n\t    isArrayLike = __webpack_require__(26),\n\t    isObject = __webpack_require__(24),\n\t    shimKeys = __webpack_require__(30);\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeKeys = getNative(Object, 'keys');\n\t\n\t/**\n\t * Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']\n\t */\n\tvar keys = !nativeKeys ? shimKeys : function(object) {\n\t  var Ctor = object == null ? undefined : object.constructor;\n\t  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n\t      (typeof object != 'function' && isArrayLike(object))) {\n\t    return shimKeys(object);\n\t  }\n\t  return isObject(object) ? nativeKeys(object) : [];\n\t};\n\t\n\tmodule.exports = keys;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isNative = __webpack_require__(22);\n\t\n\t/**\n\t * Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.\n\t */\n\tfunction getNative(object, key) {\n\t  var value = object == null ? undefined : object[key];\n\t  return isNative(value) ? value : undefined;\n\t}\n\t\n\tmodule.exports = getNative;\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isFunction = __webpack_require__(23),\n\t    isObjectLike = __webpack_require__(25);\n\t\n\t/** Used to detect host constructors (Safari > 5). */\n\tvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to resolve the decompiled source of functions. */\n\tvar fnToString = Function.prototype.toString;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Used to detect if a method is native. */\n\tvar reIsNative = RegExp('^' +\n\t  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n\t  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t);\n\t\n\t/**\n\t * Checks if `value` is a native function.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n\t * @example\n\t *\n\t * _.isNative(Array.prototype.push);\n\t * // => true\n\t *\n\t * _.isNative(_);\n\t * // => false\n\t */\n\tfunction isNative(value) {\n\t  if (value == null) {\n\t    return false;\n\t  }\n\t  if (isFunction(value)) {\n\t    return reIsNative.test(fnToString.call(value));\n\t  }\n\t  return isObjectLike(value) && reIsHostCtor.test(value);\n\t}\n\t\n\tmodule.exports = isNative;\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(24);\n\t\n\t/** `Object#toString` result references. */\n\tvar funcTag = '[object Function]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false\n\t */\n\tfunction isFunction(value) {\n\t  // The use of `Object#toString` avoids issues with the `typeof` operator\n\t  // in older versions of Chrome and Safari which return 'function' for regexes\n\t  // and Safari 8 which returns 'object' for typed array constructors.\n\t  return isObject(value) && objToString.call(value) == funcTag;\n\t}\n\t\n\tmodule.exports = isFunction;\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n\t * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(1);\n\t * // => false\n\t */\n\tfunction isObject(value) {\n\t  // Avoid a V8 JIT bug in Chrome 19-20.\n\t  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n\t  var type = typeof value;\n\t  return !!value && (type == 'object' || type == 'function');\n\t}\n\t\n\tmodule.exports = isObject;\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Checks if `value` is object-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t */\n\tfunction isObjectLike(value) {\n\t  return !!value && typeof value == 'object';\n\t}\n\t\n\tmodule.exports = isObjectLike;\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getLength = __webpack_require__(27),\n\t    isLength = __webpack_require__(29);\n\t\n\t/**\n\t * Checks if `value` is array-like.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t */\n\tfunction isArrayLike(value) {\n\t  return value != null && isLength(getLength(value));\n\t}\n\t\n\tmodule.exports = isArrayLike;\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseProperty = __webpack_require__(28);\n\t\n\t/**\n\t * Gets the \"length\" property value of `object`.\n\t *\n\t * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n\t * that affects Safari on at least iOS 8.1-8.3 ARM64.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {*} Returns the \"length\" value.\n\t */\n\tvar getLength = baseProperty('length');\n\t\n\tmodule.exports = getLength;\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.property` without support for deep paths.\n\t *\n\t * @private\n\t * @param {string} key The key of the property to get.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseProperty(key) {\n\t  return function(object) {\n\t    return object == null ? undefined : object[key];\n\t  };\n\t}\n\t\n\tmodule.exports = baseProperty;\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t */\n\tfunction isLength(value) {\n\t  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t}\n\t\n\tmodule.exports = isLength;\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isArguments = __webpack_require__(31),\n\t    isArray = __webpack_require__(32),\n\t    isIndex = __webpack_require__(33),\n\t    isLength = __webpack_require__(29),\n\t    keysIn = __webpack_require__(34);\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * A fallback implementation of `Object.keys` which creates an array of the\n\t * own enumerable property names of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t */\n\tfunction shimKeys(object) {\n\t  var props = keysIn(object),\n\t      propsLength = props.length,\n\t      length = propsLength && object.length;\n\t\n\t  var allowIndexes = !!length && isLength(length) &&\n\t    (isArray(object) || isArguments(object));\n\t\n\t  var index = -1,\n\t      result = [];\n\t\n\t  while (++index < propsLength) {\n\t    var key = props[index];\n\t    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = shimKeys;\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isArrayLike = __webpack_require__(26),\n\t    isObjectLike = __webpack_require__(25);\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/** Native method references. */\n\tvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\t\n\t/**\n\t * Checks if `value` is classified as an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false\n\t */\n\tfunction isArguments(value) {\n\t  return isObjectLike(value) && isArrayLike(value) &&\n\t    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n\t}\n\t\n\tmodule.exports = isArguments;\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getNative = __webpack_require__(21),\n\t    isLength = __webpack_require__(29),\n\t    isObjectLike = __webpack_require__(25);\n\t\n\t/** `Object#toString` result references. */\n\tvar arrayTag = '[object Array]';\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeIsArray = getNative(Array, 'isArray');\n\t\n\t/**\n\t * Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(function() { return arguments; }());\n\t * // => false\n\t */\n\tvar isArray = nativeIsArray || function(value) {\n\t  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n\t};\n\t\n\tmodule.exports = isArray;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t/** Used to detect unsigned integer values. */\n\tvar reIsUint = /^\\d+$/;\n\t\n\t/**\n\t * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n\t * of an array-like value.\n\t */\n\tvar MAX_SAFE_INTEGER = 9007199254740991;\n\t\n\t/**\n\t * Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t */\n\tfunction isIndex(value, length) {\n\t  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n\t  length = length == null ? MAX_SAFE_INTEGER : length;\n\t  return value > -1 && value % 1 == 0 && value < length;\n\t}\n\t\n\tmodule.exports = isIndex;\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isArguments = __webpack_require__(31),\n\t    isArray = __webpack_require__(32),\n\t    isIndex = __webpack_require__(33),\n\t    isLength = __webpack_require__(29),\n\t    isObject = __webpack_require__(24);\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/** Used to check objects for own properties. */\n\tvar hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t/**\n\t * Creates an array of the own and inherited enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keysIn(new Foo);\n\t * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t */\n\tfunction keysIn(object) {\n\t  if (object == null) {\n\t    return [];\n\t  }\n\t  if (!isObject(object)) {\n\t    object = Object(object);\n\t  }\n\t  var length = object.length;\n\t  length = (length && isLength(length) &&\n\t    (isArray(object) || isArguments(object)) && length) || 0;\n\t\n\t  var Ctor = object.constructor,\n\t      index = -1,\n\t      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n\t      result = Array(length),\n\t      skipIndexes = length > 0;\n\t\n\t  while (++index < length) {\n\t    result[index] = (index + '');\n\t  }\n\t  for (var key in object) {\n\t    if (!(skipIndexes && isIndex(key, length)) &&\n\t        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t      result.push(key);\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = keysIn;\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isLength = __webpack_require__(29),\n\t    isObjectLike = __webpack_require__(25);\n\t\n\t/** `Object#toString` result references. */\n\tvar argsTag = '[object Arguments]',\n\t    arrayTag = '[object Array]',\n\t    boolTag = '[object Boolean]',\n\t    dateTag = '[object Date]',\n\t    errorTag = '[object Error]',\n\t    funcTag = '[object Function]',\n\t    mapTag = '[object Map]',\n\t    numberTag = '[object Number]',\n\t    objectTag = '[object Object]',\n\t    regexpTag = '[object RegExp]',\n\t    setTag = '[object Set]',\n\t    stringTag = '[object String]',\n\t    weakMapTag = '[object WeakMap]';\n\t\n\tvar arrayBufferTag = '[object ArrayBuffer]',\n\t    float32Tag = '[object Float32Array]',\n\t    float64Tag = '[object Float64Array]',\n\t    int8Tag = '[object Int8Array]',\n\t    int16Tag = '[object Int16Array]',\n\t    int32Tag = '[object Int32Array]',\n\t    uint8Tag = '[object Uint8Array]',\n\t    uint8ClampedTag = '[object Uint8ClampedArray]',\n\t    uint16Tag = '[object Uint16Array]',\n\t    uint32Tag = '[object Uint32Array]';\n\t\n\t/** Used to identify `toStringTag` values of typed arrays. */\n\tvar typedArrayTags = {};\n\ttypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\ttypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\ttypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\ttypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\ttypedArrayTags[uint32Tag] = true;\n\ttypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\ttypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\ttypedArrayTags[dateTag] = typedArrayTags[errorTag] =\n\ttypedArrayTags[funcTag] = typedArrayTags[mapTag] =\n\ttypedArrayTags[numberTag] = typedArrayTags[objectTag] =\n\ttypedArrayTags[regexpTag] = typedArrayTags[setTag] =\n\ttypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\t\n\t/** Used for native method references. */\n\tvar objectProto = Object.prototype;\n\t\n\t/**\n\t * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t * of values.\n\t */\n\tvar objToString = objectProto.toString;\n\t\n\t/**\n\t * Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false\n\t */\n\tfunction isTypedArray(value) {\n\t  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n\t}\n\t\n\tmodule.exports = isTypedArray;\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(24);\n\t\n\t/**\n\t * Converts `value` to an object if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {Object} Returns the object.\n\t */\n\tfunction toObject(value) {\n\t  return isObject(value) ? value : Object(value);\n\t}\n\t\n\tmodule.exports = toObject;\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isStrictComparable = __webpack_require__(38),\n\t    pairs = __webpack_require__(39);\n\t\n\t/**\n\t * Gets the propery names, values, and compare flags of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the match data of `object`.\n\t */\n\tfunction getMatchData(object) {\n\t  var result = pairs(object),\n\t      length = result.length;\n\t\n\t  while (length--) {\n\t    result[length][2] = isStrictComparable(result[length][1]);\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = getMatchData;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(24);\n\t\n\t/**\n\t * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t *  equality comparisons, else `false`.\n\t */\n\tfunction isStrictComparable(value) {\n\t  return value === value && !isObject(value);\n\t}\n\t\n\tmodule.exports = isStrictComparable;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar keys = __webpack_require__(20),\n\t    toObject = __webpack_require__(36);\n\t\n\t/**\n\t * Creates a two dimensional array of the key-value pairs for `object`,\n\t * e.g. `[[key1, value1], [key2, value2]]`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the new array of key-value pairs.\n\t * @example\n\t *\n\t * _.pairs({ 'barney': 36, 'fred': 40 });\n\t * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n\t */\n\tfunction pairs(object) {\n\t  object = toObject(object);\n\t\n\t  var index = -1,\n\t      props = keys(object),\n\t      length = props.length,\n\t      result = Array(length);\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t    result[index] = [key, object[key]];\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = pairs;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(41),\n\t    baseIsEqual = __webpack_require__(14),\n\t    baseSlice = __webpack_require__(42),\n\t    isArray = __webpack_require__(32),\n\t    isKey = __webpack_require__(43),\n\t    isStrictComparable = __webpack_require__(38),\n\t    last = __webpack_require__(44),\n\t    toObject = __webpack_require__(36),\n\t    toPath = __webpack_require__(45);\n\t\n\t/**\n\t * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n\t *\n\t * @private\n\t * @param {string} path The path of the property to get.\n\t * @param {*} srcValue The value to compare.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseMatchesProperty(path, srcValue) {\n\t  var isArr = isArray(path),\n\t      isCommon = isKey(path) && isStrictComparable(srcValue),\n\t      pathKey = (path + '');\n\t\n\t  path = toPath(path);\n\t  return function(object) {\n\t    if (object == null) {\n\t      return false;\n\t    }\n\t    var key = pathKey;\n\t    object = toObject(object);\n\t    if ((isArr || !isCommon) && !(key in object)) {\n\t      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t      if (object == null) {\n\t        return false;\n\t      }\n\t      key = last(path);\n\t      object = toObject(object);\n\t    }\n\t    return object[key] === srcValue\n\t      ? (srcValue !== undefined || (key in object))\n\t      : baseIsEqual(srcValue, object[key], undefined, true);\n\t  };\n\t}\n\t\n\tmodule.exports = baseMatchesProperty;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toObject = __webpack_require__(36);\n\t\n\t/**\n\t * The base implementation of `get` without support for string paths\n\t * and default values.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Array} path The path of the property to get.\n\t * @param {string} [pathKey] The key representation of path.\n\t * @returns {*} Returns the resolved value.\n\t */\n\tfunction baseGet(object, path, pathKey) {\n\t  if (object == null) {\n\t    return;\n\t  }\n\t  if (pathKey !== undefined && pathKey in toObject(object)) {\n\t    path = [pathKey];\n\t  }\n\t  var index = 0,\n\t      length = path.length;\n\t\n\t  while (object != null && index < length) {\n\t    object = object[path[index++]];\n\t  }\n\t  return (index && index == length) ? object : undefined;\n\t}\n\t\n\tmodule.exports = baseGet;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.slice` without an iteratee call guard.\n\t *\n\t * @private\n\t * @param {Array} array The array to slice.\n\t * @param {number} [start=0] The start position.\n\t * @param {number} [end=array.length] The end position.\n\t * @returns {Array} Returns the slice of `array`.\n\t */\n\tfunction baseSlice(array, start, end) {\n\t  var index = -1,\n\t      length = array.length;\n\t\n\t  start = start == null ? 0 : (+start || 0);\n\t  if (start < 0) {\n\t    start = -start > length ? 0 : (length + start);\n\t  }\n\t  end = (end === undefined || end > length) ? length : (+end || 0);\n\t  if (end < 0) {\n\t    end += length;\n\t  }\n\t  length = start > end ? 0 : ((end - start) >>> 0);\n\t  start >>>= 0;\n\t\n\t  var result = Array(length);\n\t  while (++index < length) {\n\t    result[index] = array[index + start];\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseSlice;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isArray = __webpack_require__(32),\n\t    toObject = __webpack_require__(36);\n\t\n\t/** Used to match property names within property paths. */\n\tvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n\t    reIsPlainProp = /^\\w*$/;\n\t\n\t/**\n\t * Checks if `value` is a property name and not a property path.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {Object} [object] The object to query keys on.\n\t * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t */\n\tfunction isKey(value, object) {\n\t  var type = typeof value;\n\t  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n\t    return true;\n\t  }\n\t  if (isArray(value)) {\n\t    return false;\n\t  }\n\t  var result = !reIsDeepProp.test(value);\n\t  return result || (object != null && value in toObject(object));\n\t}\n\t\n\tmodule.exports = isKey;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Gets the last element of `array`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Array\n\t * @param {Array} array The array to query.\n\t * @returns {*} Returns the last element of `array`.\n\t * @example\n\t *\n\t * _.last([1, 2, 3]);\n\t * // => 3\n\t */\n\tfunction last(array) {\n\t  var length = array ? array.length : 0;\n\t  return length ? array[length - 1] : undefined;\n\t}\n\t\n\tmodule.exports = last;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseToString = __webpack_require__(46),\n\t    isArray = __webpack_require__(32);\n\t\n\t/** Used to match property names within property paths. */\n\tvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\t\n\t/** Used to match backslashes in property paths. */\n\tvar reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t/**\n\t * Converts `value` to property path array if it's not one.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {Array} Returns the property path array.\n\t */\n\tfunction toPath(value) {\n\t  if (isArray(value)) {\n\t    return value;\n\t  }\n\t  var result = [];\n\t  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n\t    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = toPath;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Converts `value` to a string if it's not one. An empty string is returned\n\t * for `null` or `undefined` values.\n\t *\n\t * @private\n\t * @param {*} value The value to process.\n\t * @returns {string} Returns the string.\n\t */\n\tfunction baseToString(value) {\n\t  return value == null ? '' : (value + '');\n\t}\n\t\n\tmodule.exports = baseToString;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar identity = __webpack_require__(48);\n\t\n\t/**\n\t * A specialized version of `baseCallback` which only supports `this` binding\n\t * and specifying the number of arguments to provide to `func`.\n\t *\n\t * @private\n\t * @param {Function} func The function to bind.\n\t * @param {*} thisArg The `this` binding of `func`.\n\t * @param {number} [argCount] The number of arguments to provide to `func`.\n\t * @returns {Function} Returns the callback.\n\t */\n\tfunction bindCallback(func, thisArg, argCount) {\n\t  if (typeof func != 'function') {\n\t    return identity;\n\t  }\n\t  if (thisArg === undefined) {\n\t    return func;\n\t  }\n\t  switch (argCount) {\n\t    case 1: return function(value) {\n\t      return func.call(thisArg, value);\n\t    };\n\t    case 3: return function(value, index, collection) {\n\t      return func.call(thisArg, value, index, collection);\n\t    };\n\t    case 4: return function(accumulator, value, index, collection) {\n\t      return func.call(thisArg, accumulator, value, index, collection);\n\t    };\n\t    case 5: return function(value, other, key, object, source) {\n\t      return func.call(thisArg, value, other, key, object, source);\n\t    };\n\t  }\n\t  return function() {\n\t    return func.apply(thisArg, arguments);\n\t  };\n\t}\n\t\n\tmodule.exports = bindCallback;\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This method returns the first argument provided to it.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Utility\n\t * @param {*} value Any value.\n\t * @returns {*} Returns `value`.\n\t * @example\n\t *\n\t * var object = { 'user': 'fred' };\n\t *\n\t * _.identity(object) === object;\n\t * // => true\n\t */\n\tfunction identity(value) {\n\t  return value;\n\t}\n\t\n\tmodule.exports = identity;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseProperty = __webpack_require__(28),\n\t    basePropertyDeep = __webpack_require__(50),\n\t    isKey = __webpack_require__(43);\n\t\n\t/**\n\t * Creates a function that returns the property value at `path` on a\n\t * given object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Utility\n\t * @param {Array|string} path The path of the property to get.\n\t * @returns {Function} Returns the new function.\n\t * @example\n\t *\n\t * var objects = [\n\t *   { 'a': { 'b': { 'c': 2 } } },\n\t *   { 'a': { 'b': { 'c': 1 } } }\n\t * ];\n\t *\n\t * _.map(objects, _.property('a.b.c'));\n\t * // => [2, 1]\n\t *\n\t * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n\t * // => [1, 2]\n\t */\n\tfunction property(path) {\n\t  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n\t}\n\t\n\tmodule.exports = property;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseGet = __webpack_require__(41),\n\t    toPath = __webpack_require__(45);\n\t\n\t/**\n\t * A specialized version of `baseProperty` which supports deep paths.\n\t *\n\t * @private\n\t * @param {Array|string} path The path of the property to get.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction basePropertyDeep(path) {\n\t  var pathKey = (path + '');\n\t  path = toPath(path);\n\t  return function(object) {\n\t    return baseGet(object, path, pathKey);\n\t  };\n\t}\n\t\n\tmodule.exports = basePropertyDeep;\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isIndex = __webpack_require__(33);\n\t\n\t/** Used for native method references. */\n\tvar arrayProto = Array.prototype;\n\t\n\t/** Native method references. */\n\tvar splice = arrayProto.splice;\n\t\n\t/**\n\t * The base implementation of `_.pullAt` without support for individual\n\t * index arguments and capturing the removed elements.\n\t *\n\t * @private\n\t * @param {Array} array The array to modify.\n\t * @param {number[]} indexes The indexes of elements to remove.\n\t * @returns {Array} Returns `array`.\n\t */\n\tfunction basePullAt(array, indexes) {\n\t  var length = array ? indexes.length : 0;\n\t  while (length--) {\n\t    var index = indexes[length];\n\t    if (index != previous && isIndex(index)) {\n\t      var previous = index;\n\t      splice.call(array, index, 1);\n\t    }\n\t  }\n\t  return array;\n\t}\n\t\n\tmodule.exports = basePullAt;\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar assignWith = __webpack_require__(53),\n\t    baseAssign = __webpack_require__(54),\n\t    createAssigner = __webpack_require__(56);\n\t\n\t/**\n\t * Assigns own enumerable properties of source object(s) to the destination\n\t * object. Subsequent sources overwrite property assignments of previous sources.\n\t * If `customizer` is provided it's invoked to produce the assigned values.\n\t * The `customizer` is bound to `thisArg` and invoked with five arguments:\n\t * (objectValue, sourceValue, key, object, source).\n\t *\n\t * **Note:** This method mutates `object` and is based on\n\t * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @alias extend\n\t * @category Object\n\t * @param {Object} object The destination object.\n\t * @param {...Object} [sources] The source objects.\n\t * @param {Function} [customizer] The function to customize assigned values.\n\t * @param {*} [thisArg] The `this` binding of `customizer`.\n\t * @returns {Object} Returns `object`.\n\t * @example\n\t *\n\t * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n\t * // => { 'user': 'fred', 'age': 40 }\n\t *\n\t * // using a customizer callback\n\t * var defaults = _.partialRight(_.assign, function(value, other) {\n\t *   return _.isUndefined(value) ? other : value;\n\t * });\n\t *\n\t * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t * // => { 'user': 'barney', 'age': 36 }\n\t */\n\tvar assign = createAssigner(function(object, source, customizer) {\n\t  return customizer\n\t    ? assignWith(object, source, customizer)\n\t    : baseAssign(object, source);\n\t});\n\t\n\tmodule.exports = assign;\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar keys = __webpack_require__(20);\n\t\n\t/**\n\t * A specialized version of `_.assign` for customizing assigned values without\n\t * support for argument juggling, multiple sources, and `this` binding `customizer`\n\t * functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @param {Function} customizer The function to customize assigned values.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction assignWith(object, source, customizer) {\n\t  var index = -1,\n\t      props = keys(source),\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index],\n\t        value = object[key],\n\t        result = customizer(value, source[key], key, object, source);\n\t\n\t    if ((result === result ? (result !== value) : (value === value)) ||\n\t        (value === undefined && !(key in object))) {\n\t      object[key] = result;\n\t    }\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = assignWith;\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseCopy = __webpack_require__(55),\n\t    keys = __webpack_require__(20);\n\t\n\t/**\n\t * The base implementation of `_.assign` without support for argument juggling,\n\t * multiple sources, and `customizer` functions.\n\t *\n\t * @private\n\t * @param {Object} object The destination object.\n\t * @param {Object} source The source object.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseAssign(object, source) {\n\t  return source == null\n\t    ? object\n\t    : baseCopy(source, keys(source), object);\n\t}\n\t\n\tmodule.exports = baseAssign;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Copies properties of `source` to `object`.\n\t *\n\t * @private\n\t * @param {Object} source The object to copy properties from.\n\t * @param {Array} props The property names to copy.\n\t * @param {Object} [object={}] The object to copy properties to.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseCopy(source, props, object) {\n\t  object || (object = {});\n\t\n\t  var index = -1,\n\t      length = props.length;\n\t\n\t  while (++index < length) {\n\t    var key = props[index];\n\t    object[key] = source[key];\n\t  }\n\t  return object;\n\t}\n\t\n\tmodule.exports = baseCopy;\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar bindCallback = __webpack_require__(47),\n\t    isIterateeCall = __webpack_require__(57),\n\t    restParam = __webpack_require__(58);\n\t\n\t/**\n\t * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n\t *\n\t * @private\n\t * @param {Function} assigner The function to assign values.\n\t * @returns {Function} Returns the new assigner function.\n\t */\n\tfunction createAssigner(assigner) {\n\t  return restParam(function(object, sources) {\n\t    var index = -1,\n\t        length = object == null ? 0 : sources.length,\n\t        customizer = length > 2 ? sources[length - 2] : undefined,\n\t        guard = length > 2 ? sources[2] : undefined,\n\t        thisArg = length > 1 ? sources[length - 1] : undefined;\n\t\n\t    if (typeof customizer == 'function') {\n\t      customizer = bindCallback(customizer, thisArg, 5);\n\t      length -= 2;\n\t    } else {\n\t      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n\t      length -= (customizer ? 1 : 0);\n\t    }\n\t    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t      customizer = length < 3 ? undefined : customizer;\n\t      length = 1;\n\t    }\n\t    while (++index < length) {\n\t      var source = sources[index];\n\t      if (source) {\n\t        assigner(object, source, customizer);\n\t      }\n\t    }\n\t    return object;\n\t  });\n\t}\n\t\n\tmodule.exports = createAssigner;\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isArrayLike = __webpack_require__(26),\n\t    isIndex = __webpack_require__(33),\n\t    isObject = __webpack_require__(24);\n\t\n\t/**\n\t * Checks if the provided arguments are from an iteratee call.\n\t *\n\t * @private\n\t * @param {*} value The potential iteratee value argument.\n\t * @param {*} index The potential iteratee index or key argument.\n\t * @param {*} object The potential iteratee object argument.\n\t * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n\t */\n\tfunction isIterateeCall(value, index, object) {\n\t  if (!isObject(object)) {\n\t    return false;\n\t  }\n\t  var type = typeof index;\n\t  if (type == 'number'\n\t      ? (isArrayLike(object) && isIndex(index, object.length))\n\t      : (type == 'string' && index in object)) {\n\t    var other = object[index];\n\t    return value === value ? (value === other) : (other !== other);\n\t  }\n\t  return false;\n\t}\n\t\n\tmodule.exports = isIterateeCall;\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t/** Used as the `TypeError` message for \"Functions\" methods. */\n\tvar FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeMax = Math.max;\n\t\n\t/**\n\t * Creates a function that invokes `func` with the `this` binding of the\n\t * created function and arguments from `start` and beyond provided as an array.\n\t *\n\t * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Function\n\t * @param {Function} func The function to apply a rest parameter to.\n\t * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t * @returns {Function} Returns the new function.\n\t * @example\n\t *\n\t * var say = _.restParam(function(what, names) {\n\t *   return what + ' ' + _.initial(names).join(', ') +\n\t *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t * });\n\t *\n\t * say('hello', 'fred', 'barney', 'pebbles');\n\t * // => 'hello fred, barney, & pebbles'\n\t */\n\tfunction restParam(func, start) {\n\t  if (typeof func != 'function') {\n\t    throw new TypeError(FUNC_ERROR_TEXT);\n\t  }\n\t  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n\t  return function() {\n\t    var args = arguments,\n\t        index = -1,\n\t        length = nativeMax(args.length - start, 0),\n\t        rest = Array(length);\n\t\n\t    while (++index < length) {\n\t      rest[index] = args[start + index];\n\t    }\n\t    switch (start) {\n\t      case 0: return func.call(this, rest);\n\t      case 1: return func.call(this, args[0], rest);\n\t      case 2: return func.call(this, args[0], args[1], rest);\n\t    }\n\t    var otherArgs = Array(start + 1);\n\t    index = -1;\n\t    while (++index < start) {\n\t      otherArgs[index] = args[index];\n\t    }\n\t    otherArgs[start] = rest;\n\t    return func.apply(this, otherArgs);\n\t  };\n\t}\n\t\n\tmodule.exports = restParam;\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseRandom = __webpack_require__(60),\n\t    isIterateeCall = __webpack_require__(57);\n\t\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeMin = Math.min,\n\t    nativeRandom = Math.random;\n\t\n\t/**\n\t * Produces a random number between `min` and `max` (inclusive). If only one\n\t * argument is provided a number between `0` and the given number is returned.\n\t * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n\t * number is returned instead of an integer.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Number\n\t * @param {number} [min=0] The minimum possible value.\n\t * @param {number} [max=1] The maximum possible value.\n\t * @param {boolean} [floating] Specify returning a floating-point number.\n\t * @returns {number} Returns the random number.\n\t * @example\n\t *\n\t * _.random(0, 5);\n\t * // => an integer between 0 and 5\n\t *\n\t * _.random(5);\n\t * // => also an integer between 0 and 5\n\t *\n\t * _.random(5, true);\n\t * // => a floating-point number between 0 and 5\n\t *\n\t * _.random(1.2, 5.2);\n\t * // => a floating-point number between 1.2 and 5.2\n\t */\n\tfunction random(min, max, floating) {\n\t  if (floating && isIterateeCall(min, max, floating)) {\n\t    max = floating = undefined;\n\t  }\n\t  var noMin = min == null,\n\t      noMax = max == null;\n\t\n\t  if (floating == null) {\n\t    if (noMax && typeof min == 'boolean') {\n\t      floating = min;\n\t      min = 1;\n\t    }\n\t    else if (typeof max == 'boolean') {\n\t      floating = max;\n\t      noMax = true;\n\t    }\n\t  }\n\t  if (noMin && noMax) {\n\t    max = 1;\n\t    noMax = false;\n\t  }\n\t  min = +min || 0;\n\t  if (noMax) {\n\t    max = min;\n\t    min = 0;\n\t  } else {\n\t    max = +max || 0;\n\t  }\n\t  if (floating || min % 1 || max % 1) {\n\t    var rand = nativeRandom();\n\t    return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n\t  }\n\t  return baseRandom(min, max);\n\t}\n\t\n\tmodule.exports = random;\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t/* Native method references for those with the same name as other `lodash` methods. */\n\tvar nativeFloor = Math.floor,\n\t    nativeRandom = Math.random;\n\t\n\t/**\n\t * The base implementation of `_.random` without support for argument juggling\n\t * and returning floating-point numbers.\n\t *\n\t * @private\n\t * @param {number} min The minimum possible value.\n\t * @param {number} max The maximum possible value.\n\t * @returns {number} Returns the random number.\n\t */\n\tfunction baseRandom(min, max) {\n\t  return min + nativeFloor(nativeRandom() * (max - min + 1));\n\t}\n\t\n\tmodule.exports = baseRandom;\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseEach = __webpack_require__(62),\n\t    createFind = __webpack_require__(67);\n\t\n\t/**\n\t * Iterates over elements of `collection`, returning the first element\n\t * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t * invoked with three arguments: (value, index|key, collection).\n\t *\n\t * If a property name is provided for `predicate` the created `_.property`\n\t * style callback returns the property value of the given element.\n\t *\n\t * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t * style callback returns `true` for elements that have a matching property\n\t * value, else `false`.\n\t *\n\t * If an object is provided for `predicate` the created `_.matches` style\n\t * callback returns `true` for elements that have the properties of the given\n\t * object, else `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @alias detect\n\t * @category Collection\n\t * @param {Array|Object|string} collection The collection to search.\n\t * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t *  per iteration.\n\t * @param {*} [thisArg] The `this` binding of `predicate`.\n\t * @returns {*} Returns the matched element, else `undefined`.\n\t * @example\n\t *\n\t * var users = [\n\t *   { 'user': 'barney',  'age': 36, 'active': true },\n\t *   { 'user': 'fred',    'age': 40, 'active': false },\n\t *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t * ];\n\t *\n\t * _.result(_.find(users, function(chr) {\n\t *   return chr.age < 40;\n\t * }), 'user');\n\t * // => 'barney'\n\t *\n\t * // using the `_.matches` callback shorthand\n\t * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n\t * // => 'pebbles'\n\t *\n\t * // using the `_.matchesProperty` callback shorthand\n\t * _.result(_.find(users, 'active', false), 'user');\n\t * // => 'fred'\n\t *\n\t * // using the `_.property` callback shorthand\n\t * _.result(_.find(users, 'active'), 'user');\n\t * // => 'barney'\n\t */\n\tvar find = createFind(baseEach);\n\t\n\tmodule.exports = find;\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseForOwn = __webpack_require__(63),\n\t    createBaseEach = __webpack_require__(66);\n\t\n\t/**\n\t * The base implementation of `_.forEach` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array|Object|string} collection The collection to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array|Object|string} Returns `collection`.\n\t */\n\tvar baseEach = createBaseEach(baseForOwn);\n\t\n\tmodule.exports = baseEach;\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseFor = __webpack_require__(64),\n\t    keys = __webpack_require__(20);\n\t\n\t/**\n\t * The base implementation of `_.forOwn` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Object} Returns `object`.\n\t */\n\tfunction baseForOwn(object, iteratee) {\n\t  return baseFor(object, iteratee, keys);\n\t}\n\t\n\tmodule.exports = baseForOwn;\n\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar createBaseFor = __webpack_require__(65);\n\t\n\t/**\n\t * The base implementation of `baseForIn` and `baseForOwn` which iterates\n\t * over `object` properties returned by `keysFunc` invoking `iteratee` for\n\t * each property. Iteratee functions may exit iteration early by explicitly\n\t * returning `false`.\n\t *\n\t * @private\n\t * @param {Object} object The object to iterate over.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @returns {Object} Returns `object`.\n\t */\n\tvar baseFor = createBaseFor();\n\t\n\tmodule.exports = baseFor;\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toObject = __webpack_require__(36);\n\t\n\t/**\n\t * Creates a base function for `_.forIn` or `_.forInRight`.\n\t *\n\t * @private\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */\n\tfunction createBaseFor(fromRight) {\n\t  return function(object, iteratee, keysFunc) {\n\t    var iterable = toObject(object),\n\t        props = keysFunc(object),\n\t        length = props.length,\n\t        index = fromRight ? length : -1;\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var key = props[index];\n\t      if (iteratee(iterable[key], key, iterable) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return object;\n\t  };\n\t}\n\t\n\tmodule.exports = createBaseFor;\n\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar getLength = __webpack_require__(27),\n\t    isLength = __webpack_require__(29),\n\t    toObject = __webpack_require__(36);\n\t\n\t/**\n\t * Creates a `baseEach` or `baseEachRight` function.\n\t *\n\t * @private\n\t * @param {Function} eachFunc The function to iterate over a collection.\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new base function.\n\t */\n\tfunction createBaseEach(eachFunc, fromRight) {\n\t  return function(collection, iteratee) {\n\t    var length = collection ? getLength(collection) : 0;\n\t    if (!isLength(length)) {\n\t      return eachFunc(collection, iteratee);\n\t    }\n\t    var index = fromRight ? length : -1,\n\t        iterable = toObject(collection);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (iteratee(iterable[index], index, iterable) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return collection;\n\t  };\n\t}\n\t\n\tmodule.exports = createBaseEach;\n\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseCallback = __webpack_require__(11),\n\t    baseFind = __webpack_require__(68),\n\t    baseFindIndex = __webpack_require__(69),\n\t    isArray = __webpack_require__(32);\n\t\n\t/**\n\t * Creates a `_.find` or `_.findLast` function.\n\t *\n\t * @private\n\t * @param {Function} eachFunc The function to iterate over a collection.\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {Function} Returns the new find function.\n\t */\n\tfunction createFind(eachFunc, fromRight) {\n\t  return function(collection, predicate, thisArg) {\n\t    predicate = baseCallback(predicate, thisArg, 3);\n\t    if (isArray(collection)) {\n\t      var index = baseFindIndex(collection, predicate, fromRight);\n\t      return index > -1 ? collection[index] : undefined;\n\t    }\n\t    return baseFind(collection, predicate, eachFunc);\n\t  };\n\t}\n\t\n\tmodule.exports = createFind;\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n\t * without support for callback shorthands and `this` binding, which iterates\n\t * over `collection` using the provided `eachFunc`.\n\t *\n\t * @private\n\t * @param {Array|Object|string} collection The collection to search.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @param {Function} eachFunc The function to iterate over `collection`.\n\t * @param {boolean} [retKey] Specify returning the key of the found element\n\t *  instead of the element itself.\n\t * @returns {*} Returns the found element or its key, else `undefined`.\n\t */\n\tfunction baseFind(collection, predicate, eachFunc, retKey) {\n\t  var result;\n\t  eachFunc(collection, function(value, key, collection) {\n\t    if (predicate(value, key, collection)) {\n\t      result = retKey ? key : value;\n\t      return false;\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseFind;\n\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t * support for callback shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array} array The array to search.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @param {boolean} [fromRight] Specify iterating from right to left.\n\t * @returns {number} Returns the index of the matched value, else `-1`.\n\t */\n\tfunction baseFindIndex(array, predicate, fromRight) {\n\t  var length = array.length,\n\t      index = fromRight ? length : -1;\n\t\n\t  while ((fromRight ? index-- : ++index < length)) {\n\t    if (predicate(array[index], index, array)) {\n\t      return index;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tmodule.exports = baseFindIndex;\n\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseMatches = __webpack_require__(12),\n\t    filter = __webpack_require__(71);\n\t\n\t/**\n\t * Performs a deep comparison between each element in `collection` and the\n\t * source object, returning an array of all elements that have equivalent\n\t * property values.\n\t *\n\t * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n\t * numbers, `Object` objects, regexes, and strings. Objects are compared by\n\t * their own, not inherited, enumerable properties. For comparing a single\n\t * own or inherited property value see `_.matchesProperty`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @category Collection\n\t * @param {Array|Object|string} collection The collection to search.\n\t * @param {Object} source The object of property values to match.\n\t * @returns {Array} Returns the new filtered array.\n\t * @example\n\t *\n\t * var users = [\n\t *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n\t *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n\t * ];\n\t *\n\t * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n\t * // => ['barney']\n\t *\n\t * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n\t * // => ['fred']\n\t */\n\tfunction where(collection, source) {\n\t  return filter(collection, baseMatches(source));\n\t}\n\t\n\tmodule.exports = where;\n\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar arrayFilter = __webpack_require__(72),\n\t    baseCallback = __webpack_require__(11),\n\t    baseFilter = __webpack_require__(73),\n\t    isArray = __webpack_require__(32);\n\t\n\t/**\n\t * Iterates over elements of `collection`, returning an array of all elements\n\t * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n\t * invoked with three arguments: (value, index|key, collection).\n\t *\n\t * If a property name is provided for `predicate` the created `_.property`\n\t * style callback returns the property value of the given element.\n\t *\n\t * If a value is also provided for `thisArg` the created `_.matchesProperty`\n\t * style callback returns `true` for elements that have a matching property\n\t * value, else `false`.\n\t *\n\t * If an object is provided for `predicate` the created `_.matches` style\n\t * callback returns `true` for elements that have the properties of the given\n\t * object, else `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @alias select\n\t * @category Collection\n\t * @param {Array|Object|string} collection The collection to iterate over.\n\t * @param {Function|Object|string} [predicate=_.identity] The function invoked\n\t *  per iteration.\n\t * @param {*} [thisArg] The `this` binding of `predicate`.\n\t * @returns {Array} Returns the new filtered array.\n\t * @example\n\t *\n\t * _.filter([4, 5, 6], function(n) {\n\t *   return n % 2 == 0;\n\t * });\n\t * // => [4, 6]\n\t *\n\t * var users = [\n\t *   { 'user': 'barney', 'age': 36, 'active': true },\n\t *   { 'user': 'fred',   'age': 40, 'active': false }\n\t * ];\n\t *\n\t * // using the `_.matches` callback shorthand\n\t * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n\t * // => ['barney']\n\t *\n\t * // using the `_.matchesProperty` callback shorthand\n\t * _.pluck(_.filter(users, 'active', false), 'user');\n\t * // => ['fred']\n\t *\n\t * // using the `_.property` callback shorthand\n\t * _.pluck(_.filter(users, 'active'), 'user');\n\t * // => ['barney']\n\t */\n\tfunction filter(collection, predicate, thisArg) {\n\t  var func = isArray(collection) ? arrayFilter : baseFilter;\n\t  predicate = baseCallback(predicate, thisArg, 3);\n\t  return func(collection, predicate);\n\t}\n\t\n\tmodule.exports = filter;\n\n\n/***/ },\n/* 72 */\n/***/ function(module, exports) {\n\n\t/**\n\t * A specialized version of `_.filter` for arrays without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.\n\t */\n\tfunction arrayFilter(array, predicate) {\n\t  var index = -1,\n\t      length = array.length,\n\t      resIndex = -1,\n\t      result = [];\n\t\n\t  while (++index < length) {\n\t    var value = array[index];\n\t    if (predicate(value, index, array)) {\n\t      result[++resIndex] = value;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = arrayFilter;\n\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar baseEach = __webpack_require__(62);\n\t\n\t/**\n\t * The base implementation of `_.filter` without support for callback\n\t * shorthands and `this` binding.\n\t *\n\t * @private\n\t * @param {Array|Object|string} collection The collection to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.\n\t */\n\tfunction baseFilter(collection, predicate) {\n\t  var result = [];\n\t  baseEach(collection, function(value, index, collection) {\n\t    if (predicate(value, index, collection)) {\n\t      result.push(value);\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tmodule.exports = baseFilter;\n\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar now = __webpack_require__(75)\n\t  , global = typeof window === 'undefined' ? {} : window\n\t  , vendors = ['moz', 'webkit']\n\t  , suffix = 'AnimationFrame'\n\t  , raf = global['request' + suffix]\n\t  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]\n\t\n\tfor(var i = 0; i < vendors.length && !raf; i++) {\n\t  raf = global[vendors[i] + 'Request' + suffix]\n\t  caf = global[vendors[i] + 'Cancel' + suffix]\n\t      || global[vendors[i] + 'CancelRequest' + suffix]\n\t}\n\t\n\t// Some versions of FF have rAF but not cAF\n\tif(!raf || !caf) {\n\t  var last = 0\n\t    , id = 0\n\t    , queue = []\n\t    , frameDuration = 1000 / 60\n\t\n\t  raf = function(callback) {\n\t    if(queue.length === 0) {\n\t      var _now = now()\n\t        , next = Math.max(0, frameDuration - (_now - last))\n\t      last = next + _now\n\t      setTimeout(function() {\n\t        var cp = queue.slice(0)\n\t        // Clear queue here to prevent\n\t        // callbacks from appending listeners\n\t        // to the current frame's queue\n\t        queue.length = 0\n\t        for(var i = 0; i < cp.length; i++) {\n\t          if(!cp[i].cancelled) {\n\t            try{\n\t              cp[i].callback(last)\n\t            } catch(e) {\n\t              setTimeout(function() { throw e }, 0)\n\t            }\n\t          }\n\t        }\n\t      }, Math.round(next))\n\t    }\n\t    queue.push({\n\t      handle: ++id,\n\t      callback: callback,\n\t      cancelled: false\n\t    })\n\t    return id\n\t  }\n\t\n\t  caf = function(handle) {\n\t    for(var i = 0; i < queue.length; i++) {\n\t      if(queue[i].handle === handle) {\n\t        queue[i].cancelled = true\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tmodule.exports = function(fn) {\n\t  // Wrap in a new function to prevent\n\t  // `cancel` potentially being assigned\n\t  // to the native rAF function\n\t  return raf.call(global, fn)\n\t}\n\tmodule.exports.cancel = function() {\n\t  caf.apply(global, arguments)\n\t}\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Generated by CoffeeScript 1.7.1\n\t(function() {\n\t  var getNanoSeconds, hrtime, loadTime;\n\t\n\t  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n\t    module.exports = function() {\n\t      return performance.now();\n\t    };\n\t  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n\t    module.exports = function() {\n\t      return (getNanoSeconds() - loadTime) / 1e6;\n\t    };\n\t    hrtime = process.hrtime;\n\t    getNanoSeconds = function() {\n\t      var hr;\n\t      hr = hrtime();\n\t      return hr[0] * 1e9 + hr[1];\n\t    };\n\t    loadTime = getNanoSeconds();\n\t  } else if (Date.now) {\n\t    module.exports = function() {\n\t      return Date.now() - loadTime;\n\t    };\n\t    loadTime = Date.now();\n\t  } else {\n\t    module.exports = function() {\n\t      return new Date().getTime() - loadTime;\n\t    };\n\t    loadTime = new Date().getTime();\n\t  }\n\t\n\t}).call(this);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** swing.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 9fbc3cd814b673326d05\n **/","import Stack from './stack';\r\nimport Card from './card';\r\n\r\nglobal.gajus = global.gajus || {};\r\n\r\nglobal.gajus.Swing = {\r\n    Stack,\r\n    Card\r\n};\r\n\r\nexport {\r\n    Stack,\r\n    Card\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/bbm/src/swing-fork/src/index.js\n **/","import Sister from 'sister';\r\nimport rebound from 'rebound';\r\nimport Card from './card';\r\nimport util from './util';\r\n\r\nlet Stack;\r\n\r\n/**\r\n * @param {Object} config Stack configuration.\r\n * @return {Object} An instance of Stack object.\r\n */\r\nStack = (config) => {\r\n    let construct,\r\n        eventEmitter,\r\n        index,\r\n        springSystem,\r\n        stack;\r\n\r\n    construct = () => {\r\n        stack = {};\r\n        springSystem = new rebound.SpringSystem();\r\n        eventEmitter = Sister();\r\n        index = [];\r\n    };\r\n\r\n    construct();\r\n\r\n    /**\r\n     * Get the configuration object.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    stack.getConfig = () => config;\r\n\r\n    /**\r\n     * Get a singleton instance of the SpringSystem physics engine.\r\n     *\r\n     * @return {Sister}\r\n     */\r\n    stack.getSpringSystem = () => springSystem;\r\n\r\n    /**\r\n     * Proxy to the instance of the event emitter.\r\n     *\r\n     * @param {String} eventName\r\n     * @param {String} listener\r\n     * @return {undefined}\r\n     */\r\n    stack.on = (eventName, listener) => {\r\n        eventEmitter.on(eventName, listener);\r\n    };\r\n\r\n    /**\r\n     * Creates an instance of Card and associates it with an element.\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @return {Card}\r\n     */\r\n    stack.createCard = (element) => {\r\n        let card,\r\n            events;\r\n\r\n        card = Card(stack, element);\r\n\r\n        events = [\r\n            'throwout',\r\n            'throwoutend',\r\n            'throwoutleft',\r\n            'throwoutright',\r\n            'throwin',\r\n            'throwinend',\r\n            'dragstart',\r\n            'dragmove',\r\n            'dragend'\r\n        ];\r\n\r\n        // Proxy Card events to the Stack.\r\n        events.forEach((eventName) => {\r\n            card.on(eventName, (data) => {\r\n                eventEmitter.trigger(eventName, data);\r\n            });\r\n        });\r\n\r\n        index.push({\r\n            element,\r\n            card\r\n        });\r\n\r\n        return card;\r\n    };\r\n\r\n    /**\r\n     * Returns an instance of Card associated with an element.\r\n     *\r\n     * @param {HTMLElement} element\r\n     * @return {Card|null}\r\n     */\r\n    stack.getCard = (element) => {\r\n        let card;\r\n\r\n        card = util.find(index, {\r\n            element\r\n        });\r\n\r\n        if (card) {\r\n            return card.card;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    /**\r\n     * Remove an instance of Card from the stack index.\r\n     *\r\n     * @param {Card} card\r\n     * @return {Card}\r\n     */\r\n    stack.destroyCard = (card) => {\r\n        let removedCards;\r\n\r\n        removedCards = util.remove(index, {\r\n            card\r\n        });\r\n\r\n        if (removedCards && removedCards.length) {\r\n            return removedCards[0].card;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    return stack;\r\n};\r\n\r\nexport default Stack;\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/bbm/src/swing-fork/src/stack.js\n **/","/**\n* @link https://github.com/gajus/sister for the canonical source repository\n* @license https://github.com/gajus/sister/blob/master/LICENSE BSD 3-Clause\n*/\nfunction Sister () {\n    var sister = {},\n        events = {};\n\n    /**\n     * @name handler\n     * @function\n     * @param {Object} data Event data.\n     */\n\n    /**\n     * @param {String} name Event name.\n     * @param {handler} handler\n     * @return {listener}\n     */\n    sister.on = function (name, handler) {\n        var listener = {name: name, handler: handler};\n        events[name] = events[name] || [];\n        events[name].unshift(listener);\n        return listener;\n    };\n\n    /**\n     * @param {listener}\n     */\n    sister.off = function (listener) {\n        var index = events[listener.name].indexOf(listener);\n\n        if (index != -1) {\n            events[listener.name].splice(index, 1);\n        }\n    };\n\n    /**\n     * @param {String} name Event name.\n     * @param {Object} data Event data.\n     */\n    sister.trigger = function (name, data) {\n        var listeners = events[name],\n            i;\n\n        if (listeners) {\n            i = listeners.length;\n            while (i--) {\n                listeners[i].handler(data);\n            }\n        }\n    };\n\n    return sister;\n}\n\nglobal.gajus = global.gajus || {};\nglobal.gajus.Sister = Sister;\n\nmodule.exports = Sister;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/sister/src/sister.js\n ** module id = 2\n ** module chunks = 0\n **/","// Rebound\n// =======\n// **Rebound** is a simple library that models Spring dynamics for the\n// purpose of driving physical animations.\n//\n// Origin\n// ------\n// [Rebound](http://facebook.github.io/rebound) was originally written\n// in Java to provide a lightweight physics system for\n// [Home](https://play.google.com/store/apps/details?id=com.facebook.home) and\n// [Chat Heads](https://play.google.com/store/apps/details?id=com.facebook.orca)\n// on Android. It's now been adopted by several other Android\n// applications. This JavaScript port was written to provide a quick\n// way to demonstrate Rebound animations on the web for a\n// [conference talk](https://www.youtube.com/watch?v=s5kNm-DgyjY). Since then\n// the JavaScript version has been used to build some really nice interfaces.\n// Check out [brandonwalkin.com](http://brandonwalkin.com) for an\n// example.\n//\n// Overview\n// --------\n// The Library provides a SpringSystem for maintaining a set of Spring\n// objects and iterating those Springs through a physics solver loop\n// until equilibrium is achieved. The Spring class is the basic\n// animation driver provided by Rebound. By attaching a listener to\n// a Spring, you can observe its motion. The observer function is\n// notified of position changes on the spring as it solves for\n// equilibrium. These position updates can be mapped to an animation\n// range to drive animated property updates on your user interface\n// elements (translation, rotation, scale, etc).\n//\n// Example\n// -------\n// Here's a simple example. Pressing and releasing on the logo below\n// will cause it to scale up and down with a springy animation.\n//\n// <div style=\"text-align:center; margin-bottom:50px; margin-top:50px\">\n//   <img\n//     src=\"http://facebook.github.io/rebound/images/rebound.png\"\n//     id=\"logo\"\n//   />\n// </div>\n// <script src=\"../rebound.min.js\"></script>\n// <script>\n//\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' + val + ', ' + val + ', 1)';\n// }\n// var el = document.getElementById('logo');\n//\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil.mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// </script>\n//\n// Here's how it works.\n//\n// ```\n// // Get a reference to the logo element.\n// var el = document.getElementById('logo');\n//\n// // create a SpringSystem and a Spring with a bouncy config.\n// var springSystem = new rebound.SpringSystem();\n// var spring = springSystem.createSpring(50, 3);\n//\n// // Add a listener to the spring. Every time the physics\n// // solver updates the Spring's value onSpringUpdate will\n// // be called.\n// spring.addListener({\n//   onSpringUpdate: function(spring) {\n//     var val = spring.getCurrentValue();\n//     val = rebound.MathUtil\n//                  .mapValueInRange(val, 0, 1, 1, 0.5);\n//     scale(el, val);\n//   }\n// });\n//\n// // Listen for mouse down/up/out and toggle the\n// //springs endValue from 0 to 1.\n// el.addEventListener('mousedown', function() {\n//   spring.setEndValue(1);\n// });\n//\n// el.addEventListener('mouseout', function() {\n//   spring.setEndValue(0);\n// });\n//\n// el.addEventListener('mouseup', function() {\n//   spring.setEndValue(0);\n// });\n//\n// // Helper for scaling an element with css transforms.\n// function scale(el, val) {\n//   el.style.mozTransform =\n//   el.style.msTransform =\n//   el.style.webkitTransform =\n//   el.style.transform = 'scale3d(' +\n//     val + ', ' + val + ', 1)';\n// }\n// ```\n\n(function() {\n  var rebound = {};\n  var util = rebound.util = {};\n  var concat = Array.prototype.concat;\n  var slice = Array.prototype.slice;\n\n  // Bind a function to a context object.\n  util.bind = function bind(func, context) {\n    var args = slice.call(arguments, 2);\n    return function() {\n      func.apply(context, concat.call(args, slice.call(arguments)));\n    };\n  };\n\n  // Add all the properties in the source to the target.\n  util.extend = function extend(target, source) {\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        target[key] = source[key];\n      }\n    }\n  };\n\n  // SpringSystem\n  // ------------\n  // **SpringSystem** is a set of Springs that all run on the same physics\n  // timing loop. To get started with a Rebound animation you first\n  // create a new SpringSystem and then add springs to it.\n  var SpringSystem = rebound.SpringSystem = function SpringSystem(looper) {\n    this._springRegistry = {};\n    this._activeSprings = [];\n    this.listeners = [];\n    this._idleSpringIndices = [];\n    this.looper = looper || new AnimationLooper();\n    this.looper.springSystem = this;\n  };\n\n  util.extend(SpringSystem.prototype, {\n\n    _springRegistry: null,\n\n    _isIdle: true,\n\n    _lastTimeMillis: -1,\n\n    _activeSprings: null,\n\n    listeners: null,\n\n    _idleSpringIndices: null,\n\n    // A SpringSystem is iterated by a looper. The looper is responsible\n    // for executing each frame as the SpringSystem is resolved to idle.\n    // There are three types of Loopers described below AnimationLooper,\n    // SimulationLooper, and SteppingSimulationLooper. AnimationLooper is\n    // the default as it is the most useful for common UI animations.\n    setLooper: function(looper) {\n      this.looper = looper;\n      looper.springSystem = this;\n    },\n\n    // Add a new spring to this SpringSystem. This Spring will now be solved for\n    // during the physics iteration loop. By default the spring will use the\n    // default Origami spring config with 40 tension and 7 friction, but you can\n    // also provide your own values here.\n    createSpring: function(tension, friction) {\n      var springConfig;\n      if (tension === undefined || friction === undefined) {\n        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n      } else {\n        springConfig =\n          SpringConfig.fromOrigamiTensionAndFriction(tension, friction);\n      }\n      return this.createSpringWithConfig(springConfig);\n    },\n\n    // Add a spring with a specified bounciness and speed. To replicate Origami\n    // compositions based on PopAnimation patches, use this factory method to\n    // create matching springs.\n    createSpringWithBouncinessAndSpeed: function(bounciness, speed) {\n      var springConfig;\n      if (bounciness === undefined || speed === undefined) {\n        springConfig = SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG;\n      } else {\n        springConfig =\n          SpringConfig.fromBouncinessAndSpeed(bounciness, speed);\n      }\n      return this.createSpringWithConfig(springConfig);\n    },\n\n    // Add a spring with the provided SpringConfig.\n    createSpringWithConfig: function(springConfig) {\n      var spring = new Spring(this);\n      this.registerSpring(spring);\n      spring.setSpringConfig(springConfig);\n      return spring;\n    },\n\n    // You can check if a SpringSystem is idle or active by calling\n    // getIsIdle. If all of the Springs in the SpringSystem are at rest,\n    // i.e. the physics forces have reached equilibrium, then this\n    // method will return true.\n    getIsIdle: function() {\n      return this._isIdle;\n    },\n\n    // Retrieve a specific Spring from the SpringSystem by id. This\n    // can be useful for inspecting the state of a spring before\n    // or after an integration loop in the SpringSystem executes.\n    getSpringById: function (id) {\n      return this._springRegistry[id];\n    },\n\n    // Get a listing of all the springs registered with this\n    // SpringSystem.\n    getAllSprings: function() {\n      var vals = [];\n      for (var id in this._springRegistry) {\n        if (this._springRegistry.hasOwnProperty(id)) {\n          vals.push(this._springRegistry[id]);\n        }\n      }\n      return vals;\n    },\n\n    // registerSpring is called automatically as soon as you create\n    // a Spring with SpringSystem#createSpring. This method sets the\n    // spring up in the registry so that it can be solved in the\n    // solver loop.\n    registerSpring: function(spring) {\n      this._springRegistry[spring.getId()] = spring;\n    },\n\n    // Deregister a spring with this SpringSystem. The SpringSystem will\n    // no longer consider this Spring during its integration loop once\n    // this is called. This is normally done automatically for you when\n    // you call Spring#destroy.\n    deregisterSpring: function(spring) {\n      removeFirst(this._activeSprings, spring);\n      delete this._springRegistry[spring.getId()];\n    },\n\n    advance: function(time, deltaTime) {\n      while(this._idleSpringIndices.length > 0) this._idleSpringIndices.pop();\n      for (var i = 0, len = this._activeSprings.length; i < len; i++) {\n        var spring = this._activeSprings[i];\n        if (spring.systemShouldAdvance()) {\n          spring.advance(time / 1000.0, deltaTime / 1000.0);\n        } else {\n          this._idleSpringIndices.push(this._activeSprings.indexOf(spring));\n        }\n      }\n      while(this._idleSpringIndices.length > 0) {\n        var idx = this._idleSpringIndices.pop();\n        idx >= 0 && this._activeSprings.splice(idx, 1);\n      }\n    },\n\n    // This is our main solver loop called to move the simulation\n    // forward through time. Before each pass in the solver loop\n    // onBeforeIntegrate is called on an any listeners that have\n    // registered themeselves with the SpringSystem. This gives you\n    // an opportunity to apply any constraints or adjustments to\n    // the springs that should be enforced before each iteration\n    // loop. Next the advance method is called to move each Spring in\n    // the systemShouldAdvance forward to the current time. After the\n    // integration step runs in advance, onAfterIntegrate is called\n    // on any listeners that have registered themselves with the\n    // SpringSystem. This gives you an opportunity to run any post\n    // integration constraints or adjustments on the Springs in the\n    // SpringSystem.\n    loop: function(currentTimeMillis) {\n      var listener;\n      if (this._lastTimeMillis === -1) {\n        this._lastTimeMillis = currentTimeMillis -1;\n      }\n      var ellapsedMillis = currentTimeMillis - this._lastTimeMillis;\n      this._lastTimeMillis = currentTimeMillis;\n\n      var i = 0, len = this.listeners.length;\n      for (i = 0; i < len; i++) {\n        listener = this.listeners[i];\n        listener.onBeforeIntegrate && listener.onBeforeIntegrate(this);\n      }\n\n      this.advance(currentTimeMillis, ellapsedMillis);\n      if (this._activeSprings.length === 0) {\n        this._isIdle = true;\n        this._lastTimeMillis = -1;\n      }\n\n      for (i = 0; i < len; i++) {\n        listener = this.listeners[i];\n        listener.onAfterIntegrate && listener.onAfterIntegrate(this);\n      }\n\n      if (!this._isIdle) {\n        this.looper.run();\n      }\n    },\n\n    // activateSpring is used to notify the SpringSystem that a Spring\n    // has become displaced. The system responds by starting its solver\n    // loop up if it is currently idle.\n    activateSpring: function(springId) {\n      var spring = this._springRegistry[springId];\n      if (this._activeSprings.indexOf(spring) == -1) {\n        this._activeSprings.push(spring);\n      }\n      if (this.getIsIdle()) {\n        this._isIdle = false;\n        this.looper.run();\n      }\n    },\n\n    // Add a listener to the SpringSystem so that you can receive\n    // before/after integration notifications allowing Springs to be\n    // constrained or adjusted.\n    addListener: function(listener) {\n      this.listeners.push(listener);\n    },\n\n    // Remove a previously added listener on the SpringSystem.\n    removeListener: function(listener) {\n      removeFirst(this.listeners, listener);\n    },\n\n    // Remove all previously added listeners on the SpringSystem.\n    removeAllListeners: function() {\n      this.listeners = [];\n    }\n\n  });\n\n  // Spring\n  // ------\n  // **Spring** provides a model of a classical spring acting to\n  // resolve a body to equilibrium. Springs have configurable\n  // tension which is a force multipler on the displacement of the\n  // spring from its rest point or `endValue` as defined by [Hooke's\n  // law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n  // configurable friction, which ensures that they do not oscillate\n  // infinitely. When a Spring is displaced by updating it's resting\n  // or `currentValue`, the SpringSystems that contain that Spring\n  // will automatically start looping to solve for equilibrium. As each\n  // timestep passes, `SpringListener` objects attached to the Spring\n  // will be notified of the updates providing a way to drive an\n  // animation off of the spring's resolution curve.\n  var Spring = rebound.Spring = function Spring(springSystem) {\n    this._id = 's' + Spring._ID++;\n    this._springSystem = springSystem;\n    this.listeners = [];\n    this._currentState = new PhysicsState();\n    this._previousState = new PhysicsState();\n    this._tempState = new PhysicsState();\n  };\n\n  util.extend(Spring, {\n    _ID: 0,\n\n    MAX_DELTA_TIME_SEC: 0.064,\n\n    SOLVER_TIMESTEP_SEC: 0.001\n\n  });\n\n  util.extend(Spring.prototype, {\n\n    _id: 0,\n\n    _springConfig: null,\n\n    _overshootClampingEnabled: false,\n\n    _currentState: null,\n\n    _previousState: null,\n\n    _tempState: null,\n\n    _startValue: 0,\n\n    _endValue: 0,\n\n    _wasAtRest: true,\n\n    _restSpeedThreshold: 0.001,\n\n    _displacementFromRestThreshold: 0.001,\n\n    listeners: null,\n\n    _timeAccumulator: 0,\n\n    _springSystem: null,\n\n    // Remove a Spring from simulation and clear its listeners.\n    destroy: function() {\n      this.listeners = [];\n      this.frames = [];\n      this._springSystem.deregisterSpring(this);\n    },\n\n    // Get the id of the spring, which can be used to retrieve it from\n    // the SpringSystems it participates in later.\n    getId: function() {\n      return this._id;\n    },\n\n    // Set the configuration values for this Spring. A SpringConfig\n    // contains the tension and friction values used to solve for the\n    // equilibrium of the Spring in the physics loop.\n    setSpringConfig: function(springConfig) {\n      this._springConfig = springConfig;\n      return this;\n    },\n\n    // Retrieve the SpringConfig used by this Spring.\n    getSpringConfig: function() {\n      return this._springConfig;\n    },\n\n    // Set the current position of this Spring. Listeners will be updated\n    // with this value immediately. If the rest or `endValue` is not\n    // updated to match this value, then the spring will be dispalced and\n    // the SpringSystem will start to loop to restore the spring to the\n    // `endValue`.\n    //\n    // A common pattern is to move a Spring around without animation by\n    // calling.\n    //\n    // ```\n    // spring.setCurrentValue(n).setAtRest();\n    // ```\n    //\n    // This moves the Spring to a new position `n`, sets the endValue\n    // to `n`, and removes any velocity from the `Spring`. By doing\n    // this you can allow the `SpringListener` to manage the position\n    // of UI elements attached to the spring even when moving without\n    // animation. For example, when dragging an element you can\n    // update the position of an attached view through a spring\n    // by calling `spring.setCurrentValue(x)`. When\n    // the gesture ends you can update the Springs\n    // velocity and endValue\n    // `spring.setVelocity(gestureEndVelocity).setEndValue(flingTarget)`\n    // to cause it to naturally animate the UI element to the resting\n    // position taking into account existing velocity. The codepaths for\n    // synchronous movement and spring driven animation can\n    // be unified using this technique.\n    setCurrentValue: function(currentValue, skipSetAtRest) {\n      this._startValue = currentValue;\n      this._currentState.position = currentValue;\n      if (!skipSetAtRest) {\n        this.setAtRest();\n      }\n      this.notifyPositionUpdated(false, false);\n      return this;\n    },\n\n    // Get the position that the most recent animation started at. This\n    // can be useful for determining the number off oscillations that\n    // have occurred.\n    getStartValue: function() {\n      return this._startValue;\n    },\n\n    // Retrieve the current value of the Spring.\n    getCurrentValue: function() {\n      return this._currentState.position;\n    },\n\n    // Get the absolute distance of the Spring from it's resting endValue\n    // position.\n    getCurrentDisplacementDistance: function() {\n      return this.getDisplacementDistanceForState(this._currentState);\n    },\n\n    getDisplacementDistanceForState: function(state) {\n      return Math.abs(this._endValue - state.position);\n    },\n\n    // Set the endValue or resting position of the spring. If this\n    // value is different than the current value, the SpringSystem will\n    // be notified and will begin running its solver loop to resolve\n    // the Spring to equilibrium. Any listeners that are registered\n    // for onSpringEndStateChange will also be notified of this update\n    // immediately.\n    setEndValue: function(endValue) {\n      if (this._endValue == endValue && this.isAtRest())  {\n        return this;\n      }\n      this._startValue = this.getCurrentValue();\n      this._endValue = endValue;\n      this._springSystem.activateSpring(this.getId());\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        var onChange = listener.onSpringEndStateChange;\n        onChange && onChange(this);\n      }\n      return this;\n    },\n\n    // Retrieve the endValue or resting position of this spring.\n    getEndValue: function() {\n      return this._endValue;\n    },\n\n    // Set the current velocity of the Spring. As previously mentioned,\n    // this can be useful when you are performing a direct manipulation\n    // gesture. When a UI element is released you may call setVelocity\n    // on its animation Spring so that the Spring continues with the\n    // same velocity as the gesture ended with. The friction, tension,\n    // and displacement of the Spring will then govern its motion to\n    // return to rest on a natural feeling curve.\n    setVelocity: function(velocity) {\n      if (velocity === this._currentState.velocity) {\n        return this;\n      }\n      this._currentState.velocity = velocity;\n      this._springSystem.activateSpring(this.getId());\n      return this;\n    },\n\n    // Get the current velocity of the Spring.\n    getVelocity: function() {\n      return this._currentState.velocity;\n    },\n\n    // Set a threshold value for the movement speed of the Spring below\n    // which it will be considered to be not moving or resting.\n    setRestSpeedThreshold: function(restSpeedThreshold) {\n      this._restSpeedThreshold = restSpeedThreshold;\n      return this;\n    },\n\n    // Retrieve the rest speed threshold for this Spring.\n    getRestSpeedThreshold: function() {\n      return this._restSpeedThreshold;\n    },\n\n    // Set a threshold value for displacement below which the Spring\n    // will be considered to be not displaced i.e. at its resting\n    // `endValue`.\n    setRestDisplacementThreshold: function(displacementFromRestThreshold) {\n      this._displacementFromRestThreshold = displacementFromRestThreshold;\n    },\n\n    // Retrieve the rest displacement threshold for this spring.\n    getRestDisplacementThreshold: function() {\n      return this._displacementFromRestThreshold;\n    },\n\n    // Enable overshoot clamping. This means that the Spring will stop\n    // immediately when it reaches its resting position regardless of\n    // any existing momentum it may have. This can be useful for certain\n    // types of animations that should not oscillate such as a scale\n    // down to 0 or alpha fade.\n    setOvershootClampingEnabled: function(enabled) {\n      this._overshootClampingEnabled = enabled;\n      return this;\n    },\n\n    // Check if overshoot clamping is enabled for this spring.\n    isOvershootClampingEnabled: function() {\n      return this._overshootClampingEnabled;\n    },\n\n    // Check if the Spring has gone past its end point by comparing\n    // the direction it was moving in when it started to the current\n    // position and end value.\n    isOvershooting: function() {\n      var start = this._startValue;\n      var end = this._endValue;\n      return this._springConfig.tension > 0 &&\n       ((start < end && this.getCurrentValue() > end) ||\n       (start > end && this.getCurrentValue() < end));\n    },\n\n    // Spring.advance is the main solver method for the Spring. It takes\n    // the current time and delta since the last time step and performs\n    // an RK4 integration to get the new position and velocity state\n    // for the Spring based on the tension, friction, velocity, and\n    // displacement of the Spring.\n    advance: function(time, realDeltaTime) {\n      var isAtRest = this.isAtRest();\n\n      if (isAtRest && this._wasAtRest) {\n        return;\n      }\n\n      var adjustedDeltaTime = realDeltaTime;\n      if (realDeltaTime > Spring.MAX_DELTA_TIME_SEC) {\n        adjustedDeltaTime = Spring.MAX_DELTA_TIME_SEC;\n      }\n\n      this._timeAccumulator += adjustedDeltaTime;\n\n      var tension = this._springConfig.tension,\n          friction = this._springConfig.friction,\n\n          position = this._currentState.position,\n          velocity = this._currentState.velocity,\n          tempPosition = this._tempState.position,\n          tempVelocity = this._tempState.velocity,\n\n          aVelocity, aAcceleration,\n          bVelocity, bAcceleration,\n          cVelocity, cAcceleration,\n          dVelocity, dAcceleration,\n\n          dxdt, dvdt;\n\n      while(this._timeAccumulator >= Spring.SOLVER_TIMESTEP_SEC) {\n\n        this._timeAccumulator -= Spring.SOLVER_TIMESTEP_SEC;\n\n        if (this._timeAccumulator < Spring.SOLVER_TIMESTEP_SEC) {\n          this._previousState.position = position;\n          this._previousState.velocity = velocity;\n        }\n\n        aVelocity = velocity;\n        aAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * velocity;\n\n        tempPosition = position + aVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + aAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        bVelocity = tempVelocity;\n        bAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + bVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + bAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        cVelocity = tempVelocity;\n        cAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        tempPosition = position + cVelocity * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        tempVelocity =\n          velocity + cAcceleration * Spring.SOLVER_TIMESTEP_SEC * 0.5;\n        dVelocity = tempVelocity;\n        dAcceleration =\n          (tension * (this._endValue - tempPosition)) - friction * tempVelocity;\n\n        dxdt =\n          1.0/6.0 * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity);\n        dvdt = 1.0/6.0 * (\n          aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration\n        );\n\n        position += dxdt * Spring.SOLVER_TIMESTEP_SEC;\n        velocity += dvdt * Spring.SOLVER_TIMESTEP_SEC;\n      }\n\n      this._tempState.position = tempPosition;\n      this._tempState.velocity = tempVelocity;\n\n      this._currentState.position = position;\n      this._currentState.velocity = velocity;\n\n      if (this._timeAccumulator > 0) {\n        this._interpolate(this._timeAccumulator / Spring.SOLVER_TIMESTEP_SEC);\n      }\n\n      if (this.isAtRest() ||\n          this._overshootClampingEnabled && this.isOvershooting()) {\n\n        if (this._springConfig.tension > 0) {\n          this._startValue = this._endValue;\n          this._currentState.position = this._endValue;\n        } else {\n          this._endValue = this._currentState.position;\n          this._startValue = this._endValue;\n        }\n        this.setVelocity(0);\n        isAtRest = true;\n      }\n\n      var notifyActivate = false;\n      if (this._wasAtRest) {\n        this._wasAtRest = false;\n        notifyActivate = true;\n      }\n\n      var notifyAtRest = false;\n      if (isAtRest) {\n        this._wasAtRest = true;\n        notifyAtRest = true;\n      }\n\n      this.notifyPositionUpdated(notifyActivate, notifyAtRest);\n    },\n\n    notifyPositionUpdated: function(notifyActivate, notifyAtRest) {\n      for (var i = 0, len = this.listeners.length; i < len; i++) {\n        var listener = this.listeners[i];\n        if (notifyActivate && listener.onSpringActivate) {\n          listener.onSpringActivate(this);\n        }\n\n        if (listener.onSpringUpdate) {\n          listener.onSpringUpdate(this);\n        }\n\n        if (notifyAtRest && listener.onSpringAtRest) {\n          listener.onSpringAtRest(this);\n        }\n      }\n    },\n\n\n    // Check if the SpringSystem should advance. Springs are advanced\n    // a final frame after they reach equilibrium to ensure that the\n    // currentValue is exactly the requested endValue regardless of the\n    // displacement threshold.\n    systemShouldAdvance: function() {\n      return !this.isAtRest() || !this.wasAtRest();\n    },\n\n    wasAtRest: function() {\n      return this._wasAtRest;\n    },\n\n    // Check if the Spring is atRest meaning that it's currentValue and\n    // endValue are the same and that it has no velocity. The previously\n    // described thresholds for speed and displacement define the bounds\n    // of this equivalence check. If the Spring has 0 tension, then it will\n    // be considered at rest whenever its absolute velocity drops below the\n    // restSpeedThreshold.\n    isAtRest: function() {\n      return Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n        (this.getDisplacementDistanceForState(this._currentState) <=\n          this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0);\n    },\n\n    // Force the spring to be at rest at its current position. As\n    // described in the documentation for setCurrentValue, this method\n    // makes it easy to do synchronous non-animated updates to ui\n    // elements that are attached to springs via SpringListeners.\n    setAtRest: function() {\n      this._endValue = this._currentState.position;\n      this._tempState.position = this._currentState.position;\n      this._currentState.velocity = 0;\n      return this;\n    },\n\n    _interpolate: function(alpha) {\n      this._currentState.position = this._currentState.position *\n        alpha + this._previousState.position * (1 - alpha);\n      this._currentState.velocity = this._currentState.velocity *\n        alpha + this._previousState.velocity * (1 - alpha);\n    },\n\n    getListeners: function() {\n      return this.listeners;\n    },\n\n    addListener: function(newListener) {\n      this.listeners.push(newListener);\n      return this;\n    },\n\n    removeListener: function(listenerToRemove) {\n      removeFirst(this.listeners, listenerToRemove);\n      return this;\n    },\n\n    removeAllListeners: function() {\n      this.listeners = [];\n      return this;\n    },\n\n    currentValueIsApproximately: function(value) {\n      return Math.abs(this.getCurrentValue() - value) <=\n        this.getRestDisplacementThreshold();\n    }\n\n  });\n\n  // PhysicsState\n  // ------------\n  // **PhysicsState** consists of a position and velocity. A Spring uses\n  // this internally to keep track of its current and prior position and\n  // velocity values.\n  var PhysicsState = function PhysicsState() {};\n\n  util.extend(PhysicsState.prototype, {\n    position: 0,\n    velocity: 0\n  });\n\n  // SpringConfig\n  // ------------\n  // **SpringConfig** maintains a set of tension and friction constants\n  // for a Spring. You can use fromOrigamiTensionAndFriction to convert\n  // values from the [Origami](http://facebook.github.io/origami/)\n  // design tool directly to Rebound spring constants.\n  var SpringConfig = rebound.SpringConfig =\n    function SpringConfig(tension, friction) {\n      this.tension = tension;\n      this.friction = friction;\n    };\n\n  // Loopers\n  // -------\n  // **AnimationLooper** plays each frame of the SpringSystem on animation\n  // timing loop. This is the default type of looper for a new spring system\n  // as it is the most common when developing UI.\n  var AnimationLooper = rebound.AnimationLooper = function AnimationLooper() {\n    this.springSystem = null;\n    var _this = this;\n    var _run = function() {\n      _this.springSystem.loop(Date.now());\n    };\n\n    this.run = function() {\n      util.onFrame(_run);\n    };\n  };\n\n  // **SimulationLooper** resolves the SpringSystem to a resting state in a\n  // tight and blocking loop. This is useful for synchronously generating\n  // pre-recorded animations that can then be played on a timing loop later.\n  // Sometimes this lead to better performance to pre-record a single spring\n  // curve and use it to drive many animations; however, it can make dynamic\n  // response to user input a bit trickier to implement.\n  rebound.SimulationLooper = function SimulationLooper(timestep) {\n    this.springSystem = null;\n    var time = 0;\n    var running = false;\n    timestep=timestep || 16.667;\n\n    this.run = function() {\n      if (running) {\n        return;\n      }\n      running = true;\n      while(!this.springSystem.getIsIdle()) {\n        this.springSystem.loop(time+=timestep);\n      }\n      running = false;\n    };\n  };\n\n  // **SteppingSimulationLooper** resolves the SpringSystem one step at a\n  // time controlled by an outside loop. This is useful for testing and\n  // verifying the behavior of a SpringSystem or if you want to control your own\n  // timing loop for some reason e.g. slowing down or speeding up the\n  // simulation.\n  rebound.SteppingSimulationLooper = function(timestep) {\n    this.springSystem = null;\n    var time = 0;\n\n    // this.run is NOOP'd here to allow control from the outside using\n    // this.step.\n    this.run = function(){};\n\n    // Perform one step toward resolving the SpringSystem.\n    this.step = function(timestep) {\n      this.springSystem.loop(time+=timestep);\n    };\n  };\n\n  // Math for converting from\n  // [Origami](http://facebook.github.io/origami/) to\n  // [Rebound](http://facebook.github.io/rebound).\n  // You mostly don't need to worry about this, just use\n  // SpringConfig.fromOrigamiTensionAndFriction(v, v);\n  var OrigamiValueConverter = rebound.OrigamiValueConverter = {\n    tensionFromOrigamiValue: function(oValue) {\n      return (oValue - 30.0) * 3.62 + 194.0;\n    },\n\n    origamiValueFromTension: function(tension) {\n      return (tension - 194.0) / 3.62 + 30.0;\n    },\n\n    frictionFromOrigamiValue: function(oValue) {\n      return (oValue - 8.0) * 3.0 + 25.0;\n    },\n\n    origamiFromFriction: function(friction) {\n      return (friction - 25.0) / 3.0 + 8.0;\n    }\n  };\n\n  // BouncyConversion provides math for converting from Origami PopAnimation\n  // config values to regular Origami tension and friction values. If you are\n  // trying to replicate prototypes made with PopAnimation patches in Origami,\n  // then you should create your springs with\n  // SpringSystem.createSpringWithBouncinessAndSpeed, which uses this Math\n  // internally to create a spring to match the provided PopAnimation\n  // configuration from Origami.\n  var BouncyConversion = rebound.BouncyConversion = function(bounciness, speed){\n    this.bounciness = bounciness;\n    this.speed = speed;\n    var b = this.normalize(bounciness / 1.7, 0, 20.0);\n    b = this.projectNormal(b, 0.0, 0.8);\n    var s = this.normalize(speed / 1.7, 0, 20.0);\n    this.bouncyTension = this.projectNormal(s, 0.5, 200)\n    this.bouncyFriction = this.quadraticOutInterpolation(\n      b,\n      this.b3Nobounce(this.bouncyTension),\n      0.01);\n  }\n\n  util.extend(BouncyConversion.prototype, {\n\n    normalize: function(value, startValue, endValue) {\n      return (value - startValue) / (endValue - startValue);\n    },\n\n    projectNormal: function(n, start, end) {\n      return start + (n * (end - start));\n    },\n\n    linearInterpolation: function(t, start, end) {\n      return t * end + (1.0 - t) * start;\n    },\n\n    quadraticOutInterpolation: function(t, start, end) {\n      return this.linearInterpolation(2*t - t*t, start, end);\n    },\n\n    b3Friction1: function(x) {\n      return (0.0007 * Math.pow(x, 3)) -\n        (0.031 * Math.pow(x, 2)) + 0.64 * x + 1.28;\n    },\n\n    b3Friction2: function(x) {\n      return (0.000044 * Math.pow(x, 3)) -\n        (0.006 * Math.pow(x, 2)) + 0.36 * x + 2.;\n    },\n\n    b3Friction3: function(x) {\n      return (0.00000045 * Math.pow(x, 3)) -\n        (0.000332 * Math.pow(x, 2)) + 0.1078 * x + 5.84;\n    },\n\n    b3Nobounce: function(tension) {\n      var friction = 0;\n      if (tension <= 18) {\n        friction = this.b3Friction1(tension);\n      } else if (tension > 18 && tension <= 44) {\n        friction = this.b3Friction2(tension);\n      } else {\n        friction = this.b3Friction3(tension);\n      }\n      return friction;\n    }\n  });\n\n  util.extend(SpringConfig, {\n    // Convert an origami Spring tension and friction to Rebound spring\n    // constants. If you are prototyping a design with Origami, this\n    // makes it easy to make your springs behave exactly the same in\n    // Rebound.\n    fromOrigamiTensionAndFriction: function(tension, friction) {\n      return new SpringConfig(\n        OrigamiValueConverter.tensionFromOrigamiValue(tension),\n        OrigamiValueConverter.frictionFromOrigamiValue(friction));\n    },\n\n    // Convert an origami PopAnimation Spring bounciness and speed to Rebound\n    // spring constants. If you are using PopAnimation patches in Origami, this\n    // utility will provide springs that match your prototype.\n    fromBouncinessAndSpeed: function(bounciness, speed) {\n      var bouncyConversion = new rebound.BouncyConversion(bounciness, speed);\n      return this.fromOrigamiTensionAndFriction(\n        bouncyConversion.bouncyTension,\n        bouncyConversion.bouncyFriction);\n    },\n\n    // Create a SpringConfig with no tension or a coasting spring with some\n    // amount of Friction so that it does not coast infininitely.\n    coastingConfigWithOrigamiFriction: function(friction) {\n      return new SpringConfig(\n        0,\n        OrigamiValueConverter.frictionFromOrigamiValue(friction)\n      );\n    }\n  });\n\n  SpringConfig.DEFAULT_ORIGAMI_SPRING_CONFIG =\n    SpringConfig.fromOrigamiTensionAndFriction(40, 7);\n\n  util.extend(SpringConfig.prototype, {friction: 0, tension: 0});\n\n  // Here are a couple of function to convert colors between hex codes and RGB\n  // component values. These are handy when performing color\n  // tweening animations.\n  var colorCache = {};\n  util.hexToRGB = function(color) {\n    if (colorCache[color]) {\n      return colorCache[color];\n    }\n    color = color.replace('#', '');\n    if (color.length === 3) {\n      color = color[0] + color[0] + color[1] + color[1] + color[2] + color[2];\n    }\n    var parts = color.match(/.{2}/g);\n\n    var ret = {\n      r: parseInt(parts[0], 16),\n      g: parseInt(parts[1], 16),\n      b: parseInt(parts[2], 16)\n    };\n\n    colorCache[color] = ret;\n    return ret;\n  };\n\n  util.rgbToHex = function(r, g, b) {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n    r = r.length < 2 ? '0' + r : r;\n    g = g.length < 2 ? '0' + g : g;\n    b = b.length < 2 ? '0' + b : b;\n    return '#' + r + g + b;\n  };\n\n  var MathUtil = rebound.MathUtil = {\n    // This helper function does a linear interpolation of a value from\n    // one range to another. This can be very useful for converting the\n    // motion of a Spring to a range of UI property values. For example a\n    // spring moving from position 0 to 1 could be interpolated to move a\n    // view from pixel 300 to 350 and scale it from 0.5 to 1. The current\n    // position of the `Spring` just needs to be run through this method\n    // taking its input range in the _from_ parameters with the property\n    // animation range in the _to_ parameters.\n    mapValueInRange: function(value, fromLow, fromHigh, toLow, toHigh) {\n      var fromRangeSize = fromHigh - fromLow;\n      var toRangeSize = toHigh - toLow;\n      var valueScale = (value - fromLow) / fromRangeSize;\n      return toLow + (valueScale * toRangeSize);\n    },\n\n    // Interpolate two hex colors in a 0 - 1 range or optionally provide a\n    // custom range with fromLow,fromHight. The output will be in hex by default\n    // unless asRGB is true in which case it will be returned as an rgb string.\n    interpolateColor:\n      function(val, startColor, endColor, fromLow, fromHigh, asRGB) {\n      fromLow = fromLow === undefined ? 0 : fromLow;\n      fromHigh = fromHigh === undefined ? 1 : fromHigh;\n      startColor = util.hexToRGB(startColor);\n      endColor = util.hexToRGB(endColor);\n      var r = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.r, endColor.r)\n      );\n      var g = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.g, endColor.g)\n      );\n      var b = Math.floor(\n        util.mapValueInRange(val, fromLow, fromHigh, startColor.b, endColor.b)\n      );\n      if (asRGB) {\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n      } else {\n        return util.rgbToHex(r, g, b);\n      }\n    },\n\n    degreesToRadians: function(deg) {\n      return (deg * Math.PI) / 180;\n    },\n\n    radiansToDegrees: function(rad) {\n      return (rad * 180) / Math.PI;\n    }\n\n  }\n\n  util.extend(util, MathUtil);\n\n\n  // Utilities\n  // ---------\n  // Here are a few useful JavaScript utilities.\n\n  // Lop off the first occurence of the reference in the Array.\n  function removeFirst(array, item) {\n    var idx = array.indexOf(item);\n    idx != -1 && array.splice(idx, 1);\n  }\n\n  var _onFrame;\n  if (typeof window !== 'undefined') {\n    _onFrame = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n      };\n  }\n  if (!_onFrame && typeof process !== 'undefined' && process.title === 'node') {\n    _onFrame = setImmediate;\n  }\n\n  // Cross browser/node timer functions.\n  util.onFrame = function onFrame(func) {\n    return _onFrame(func);\n  };\n\n  // Export the public api using exports for common js or the window for\n  // normal browser inclusion.\n  if (typeof exports != 'undefined') {\n    util.extend(exports, rebound);\n  } else if (typeof window != 'undefined') {\n    window.rebound = rebound;\n  }\n})();\n\n\n// Legal Stuff\n// -----------\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/rebound/rebound.js\n ** module id = 3\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/process/browser.js\n ** module id = 4\n ** module chunks = 0\n **/","var nextTick = require('process/browser.js').nextTick;\nvar apply = Function.prototype.apply;\nvar slice = Array.prototype.slice;\nvar immediateIds = {};\nvar nextImmediateId = 0;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) { timeout.close(); };\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// That's not how node.js implements it but the exposed api is the same.\nexports.setImmediate = typeof setImmediate === \"function\" ? setImmediate : function(fn) {\n  var id = nextImmediateId++;\n  var args = arguments.length < 2 ? false : slice.call(arguments, 1);\n\n  immediateIds[id] = true;\n\n  nextTick(function onNextTick() {\n    if (immediateIds[id]) {\n      // fn.call() is faster so we optimize for the common use-case\n      // @see http://jsperf.com/call-apply-segu\n      if (args) {\n        fn.apply(null, args);\n      } else {\n        fn.call(null);\n      }\n      // Prevent ids from leaking\n      exports.clearImmediate(id);\n    }\n  });\n\n  return id;\n};\n\nexports.clearImmediate = typeof clearImmediate === \"function\" ? clearImmediate : function(id) {\n  delete immediateIds[id];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/webpack/~/node-libs-browser/~/timers-browserify/main.js\n ** module id = 5\n ** module chunks = 0\n **/","import Sister from 'sister';\r\nimport Hammer from 'hammerjs';\r\nimport rebound from 'rebound';\r\nimport vendorPrefix from 'vendor-prefix';\r\nimport util from './util.js';\r\nimport raf from 'raf';\r\n\r\nlet Card;\r\n\r\n/**\r\n * @param {Stack} stack\r\n * @param {HTMLElement} targetElement\r\n * @return {Object} An instance of Card.\r\n */\r\nCard = (stack, targetElement) => {\r\n    let card,\r\n        config,\r\n        construct,\r\n        currentX,\r\n        currentY,\r\n        doMove,\r\n        eventEmitter,\r\n        isDraging,\r\n        lastThrow,\r\n        lastTranslate,\r\n        lastX,\r\n        lastY,\r\n        mc,\r\n        onSpringUpdate,\r\n        springSystem,\r\n        springThrowIn,\r\n        springThrowOut,\r\n        throwOutDistance,\r\n        throwWhere;\r\n\r\n    construct = () => {\r\n        card = {};\r\n        config = Card.makeConfig(stack.getConfig());\r\n        eventEmitter = Sister();\r\n        springSystem = stack.getSpringSystem();\r\n        springThrowIn = springSystem.createSpring(250, 10);\r\n        springThrowOut = springSystem.createSpring(500, 20);\r\n        lastThrow = {};\r\n        lastTranslate = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n\r\n        springThrowIn.setRestSpeedThreshold(0.05);\r\n        springThrowIn.setRestDisplacementThreshold(0.05);\r\n\r\n        springThrowOut.setRestSpeedThreshold(0.05);\r\n        springThrowOut.setRestDisplacementThreshold(0.05);\r\n\r\n        throwOutDistance = config.throwOutDistance(config.minThrowOutDistance, config.maxThrowOutDistance);\r\n\r\n        mc = new Hammer.Manager(targetElement, {\r\n            recognizers: [\r\n                [\r\n                    Hammer.Pan,\r\n                    {\r\n                        threshold: 2\r\n                    }\r\n                ]\r\n            ]\r\n        });\r\n\r\n        Card.appendToParent(targetElement);\r\n\r\n        eventEmitter.on('panstart', () => {\r\n            Card.appendToParent(targetElement);\r\n\r\n            eventEmitter.trigger('dragstart', {\r\n                target: targetElement\r\n            });\r\n\r\n            currentX = 0;\r\n            currentY = 0;\r\n\r\n            isDraging = true;\r\n\r\n            (function animation () {\r\n                if (isDraging) {\r\n                    doMove();\r\n\r\n                    raf(animation);\r\n                }\r\n            })();\r\n        });\r\n\r\n        eventEmitter.on('panmove', (e) => {\r\n            currentX = e.deltaX;\r\n            currentY = e.deltaY;\r\n        });\r\n\r\n        eventEmitter.on('panend', (e) => {\r\n            let x,\r\n                y;\r\n\r\n            isDraging = false;\r\n\r\n            x = lastTranslate.x + e.deltaX;\r\n            y = lastTranslate.y + e.deltaY;\r\n\r\n            if (config.isThrowOut(x, targetElement, config.throwOutConfidence(x, targetElement))) {\r\n                card.throwOut(x, y);\r\n            } else {\r\n                card.throwIn(x, y);\r\n            }\r\n\r\n            eventEmitter.trigger('dragend', {\r\n                target: targetElement\r\n            });\r\n        });\r\n\r\n        mc.on('panstart', (e) => {\r\n            eventEmitter.trigger('panstart', e);\r\n        });\r\n\r\n        mc.on('panmove', (e) => {\r\n            eventEmitter.trigger('panmove', e);\r\n        });\r\n\r\n        mc.on('panend', (e) => {\r\n            eventEmitter.trigger('panend', e);\r\n        });\r\n\r\n        springThrowIn.addListener({\r\n            onSpringUpdate: (spring) => {\r\n                let value,\r\n                    x,\r\n                    y;\r\n\r\n                value = spring.getCurrentValue();\r\n                x = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, 0);\r\n                y = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromY, 0);\r\n\r\n                onSpringUpdate(x, y);\r\n            },\r\n            onSpringAtRest: () => {\r\n                eventEmitter.trigger('throwinend', {\r\n                    target: targetElement\r\n                });\r\n            }\r\n        });\r\n\r\n        springThrowOut.addListener({\r\n            onSpringUpdate: (spring) => {\r\n                let value,\r\n                    x,\r\n                    y;\r\n\r\n                value = spring.getCurrentValue();\r\n                x = rebound.MathUtil.mapValueInRange(value, 0, 1, lastThrow.fromX, throwOutDistance * lastThrow.direction);\r\n                y = lastThrow.fromY;\r\n\r\n                onSpringUpdate(x, y);\r\n            },\r\n            onSpringAtRest: () => {\r\n                eventEmitter.trigger('throwoutend', {\r\n                    target: targetElement\r\n                });\r\n            }\r\n        });\r\n\r\n        /**\r\n         * Transforms card position based on the current environment variables.\r\n         *\r\n         * @return {undefined}\r\n         */\r\n        doMove = () => {\r\n            let r,\r\n                x,\r\n                y;\r\n\r\n            if (currentX === lastX && currentY === lastY) {\r\n                return;\r\n            }\r\n\r\n            lastX = currentX;\r\n            lastY = currentY;\r\n\r\n            x = lastTranslate.x + currentX;\r\n            y = lastTranslate.y + currentY;\r\n            r = config.rotation(x, y, targetElement, config.maxRotation);\r\n\r\n            config.transform(targetElement, x, y, r);\r\n\r\n            eventEmitter.trigger('dragmove', {\r\n                target: targetElement,\r\n                throwOutConfidence: config.throwOutConfidence(x, targetElement),\r\n                throwDirection: x < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Invoked every time the physics solver updates the Spring's value.\r\n         *\r\n         * @param {Number} x\r\n         * @param {Number} y\r\n         * @return {undefined}\r\n         */\r\n        onSpringUpdate = (x, y) => {\r\n            let r;\r\n\r\n            r = config.rotation(x, y, targetElement, config.maxRotation);\r\n\r\n            lastTranslate.x = x || 0;\r\n            lastTranslate.y = y || 0;\r\n\r\n            Card.transform(targetElement, x, y, r);\r\n        };\r\n\r\n        /**\r\n         * @param {Card.THROW_IN|Card.THROW_OUT} where\r\n         * @param {Number} fromX\r\n         * @param {Number} fromY\r\n         * @return {undefined}\r\n         */\r\n        throwWhere = (where, fromX, fromY) => {\r\n            lastThrow.fromX = fromX;\r\n            lastThrow.fromY = fromY;\r\n            lastThrow.direction = lastThrow.fromX < 0 ? Card.DIRECTION_LEFT : Card.DIRECTION_RIGHT;\r\n\r\n            if (where === Card.THROW_IN) {\r\n                springThrowIn.setCurrentValue(0).setAtRest().setEndValue(1);\r\n\r\n                eventEmitter.trigger('throwin', {\r\n                    target: targetElement,\r\n                    throwDirection: lastThrow.direction\r\n                });\r\n            } else if (where === Card.THROW_OUT) {\r\n                springThrowOut.setCurrentValue(0).setAtRest().setVelocity(100).setEndValue(1);\r\n\r\n                eventEmitter.trigger('throwout', {\r\n                    target: targetElement,\r\n                    throwDirection: lastThrow.direction\r\n                });\r\n\r\n                if (lastThrow.direction === Card.DIRECTION_LEFT) {\r\n                    eventEmitter.trigger('throwoutleft', {\r\n                        target: targetElement,\r\n                        throwDirection: lastThrow.direction\r\n                    });\r\n                } else {\r\n                    eventEmitter.trigger('throwoutright', {\r\n                        target: targetElement,\r\n                        throwDirection: lastThrow.direction\r\n                    });\r\n                }\r\n            } else {\r\n                throw new Error('Invalid throw event.');\r\n            }\r\n        };\r\n    };\r\n\r\n    construct();\r\n\r\n    /**\r\n     * Alias\r\n     */\r\n    card.on = eventEmitter.on;\r\n    card.trigger = eventEmitter.trigger;\r\n\r\n    /**\r\n     * Throws a card into the stack from an arbitrary position.\r\n     *\r\n     * @param {Number} fromX\r\n     * @param {Number} fromY\r\n     * @return {undefined}\r\n     */\r\n    card.throwIn = (fromX, fromY) => {\r\n        throwWhere(Card.THROW_IN, fromX, fromY);\r\n    };\r\n\r\n    /**\r\n     * Throws a card out of the stack in the direction away from the original offset.\r\n     *\r\n     * @param {Number} fromX\r\n     * @param {Number} fromY\r\n     * @return {undefined}\r\n     */\r\n    card.throwOut = (fromX, fromY) => {\r\n        throwWhere(Card.THROW_OUT, fromX, fromY);\r\n    };\r\n\r\n    /**\r\n     * Unbinds all Hammer.Manager events.\r\n     * Removes the listeners from the physics simulation.\r\n     *\r\n     * @return {undefined}\r\n     */\r\n    card.destroy = () => {\r\n        mc.destroy();\r\n        springThrowIn.destroy();\r\n        springThrowOut.destroy();\r\n\r\n        stack.destroyCard(card);\r\n    };\r\n\r\n    return card;\r\n};\r\n\r\n/**\r\n * Creates a configuration object.\r\n *\r\n * @param {Object} config\r\n * @return {Object}\r\n */\r\nCard.makeConfig = (config = {}) => {\r\n    let defaultConfig;\r\n\r\n    defaultConfig = {\r\n        isThrowOut: Card.isThrowOut,\r\n        throwOutConfidence: Card.throwOutConfidence,\r\n        throwOutDistance: Card.throwOutDistance,\r\n        minThrowOutDistance: 400,\r\n        maxThrowOutDistance: 500,\r\n        rotation: Card.rotation,\r\n        maxRotation: 20,\r\n        transform: Card.transform\r\n    };\r\n\r\n    return util.assign({}, defaultConfig, config);\r\n};\r\n\r\n/**\r\n * Uses CSS transform to translate element position and rotation.\r\n *\r\n * Invoked in the event of `dragmove` and every time the physics solver is triggered.\r\n *\r\n * @param {HTMLElement} element\r\n * @param {Number} x Horizontal offset from the startDrag.\r\n * @param {Number} y Vertical offset from the startDrag.\r\n * @param {Number} r\r\n * @return {undefined}\r\n */\r\nCard.transform = (element, x, y, r) => {\r\n    element.style[vendorPrefix('transform')] = `translate3d(0, 0, 0) translate(${x}px, ${y}px) rotate(${r}deg)`;\r\n};\r\n\r\n/**\r\n * Append element to the parentNode.\r\n *\r\n * This makes the element first among the siblings. The reason for using\r\n * this as opposed to zIndex is to allow CSS selector :nth-child.\r\n *\r\n * Invoked in the event of mousedown.\r\n * Invoked when card is added to the stack.\r\n *\r\n * @param {HTMLElement} element The target element.\r\n * @return {undefined}\r\n */\r\nCard.appendToParent = (element) => {\r\n    let parentNode,\r\n        siblings,\r\n        targetIndex;\r\n\r\n    parentNode = element.parentNode;\r\n    siblings = util.elementChildren(parentNode);\r\n    targetIndex = siblings.indexOf(element);\r\n\r\n    if (targetIndex + 1 !== siblings.length) {\r\n        parentNode.removeChild(element);\r\n        parentNode.appendChild(element);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns a value between 0 and 1 indicating the completeness of the throw out condition.\r\n *\r\n * Ration of the absolute distance from the original card position and element width.\r\n *\r\n * @param {Number} offset Distance from the dragStart.\r\n * @param {HTMLElement} element Element.\r\n * @return {Number}\r\n */\r\nCard.throwOutConfidence = (offset, element) => {\r\n    return Math.min(Math.abs(offset) / element.offsetWidth, 1);\r\n};\r\n\r\n/**\r\n * Determines if element is being thrown out of the stack.\r\n *\r\n * Element is considered to be thrown out when throwOutConfidence is equal to 1.\r\n *\r\n * @param {Number} offset Distance from the dragStart.\r\n * @param {HTMLElement} element Element.\r\n * @param {Number} throwOutConfidence config.throwOutConfidence\r\n * @return {Boolean}\r\n */\r\nCard.isThrowOut = (offset, element, throwOutConfidence) => {\r\n    return throwOutConfidence === 1;\r\n};\r\n\r\n/**\r\n * Calculates a distances at which the card is thrown out of the stack.\r\n *\r\n * @param {Number} min\r\n * @param {Number} max\r\n * @return {Number}\r\n */\r\nCard.throwOutDistance = (min, max) => {\r\n    return util.random(min, max);\r\n};\r\n\r\n/**\r\n * Calculates rotation based on the element x and y offset, element width and maxRotation variables.\r\n *\r\n * @param {Number} x Horizontal offset from the startDrag.\r\n * @param {Number} y Vertical offset from the startDrag.\r\n * @param {HTMLElement} element Element.\r\n * @param {Number} maxRotation\r\n * @return {Number} Rotation angle expressed in degrees.\r\n */\r\nCard.rotation = (x, y, element, maxRotation) => {\r\n    let horizontalOffset,\r\n        rotation,\r\n        verticalOffset;\r\n\r\n    horizontalOffset = Math.min(Math.max(x / element.offsetWidth, -1), 1);\r\n    verticalOffset = (y > 0 ? 1 : -1) * Math.min(Math.abs(y) / 100, 1);\r\n    rotation = horizontalOffset * verticalOffset * maxRotation;\r\n\r\n    return rotation;\r\n};\r\n\r\nCard.DIRECTION_LEFT = -1;\r\nCard.DIRECTION_RIGHT = 1;\r\n\r\nCard.THROW_IN = 'in';\r\nCard.THROW_OUT = 'out';\r\n\r\nexport default Card;\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/bbm/src/swing-fork/src/card.js\n **/","/*! Hammer.JS - v2.0.6 - 2015-12-23\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2015 Jorik Tangelder;\n * Licensed under the  license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean=false} [merge]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.allow = true; // used by Input.TouchMouse to disable mouse events\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n        if (!this.pressed || !this.allow) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        // when we're in a touch event, so  block all upcoming mouse events\n        // most mobile browser also emit mouseevents, right after touchstart\n        if (isTouch) {\n            this.mouse.allow = false;\n        } else if (isMouse && !this.mouse.allow) {\n            return;\n        }\n\n        // reset the allowMouse when we're done\n        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n            this.mouse.allow = true;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        // not needed with native support for the touchAction property\n        if (NATIVE_TOUCH_ACTION) {\n            return;\n        }\n\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.6';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    each(manager.options.cssProps, function(value, name) {\n        element.style[prefixed(element.style, name)] = add ? value : '';\n    });\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/hammerjs/hammer.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar style = document.createElement('p').style,\n    prefixes = 'O ms Moz webkit'.split(' '),\n    hasPrefix = /^(o|ms|moz|webkit)/,\n    upper = /([A-Z])/g,\n    memo = {};\n\nfunction get(key){\n    return (key in memo) ? memo[key] : memo[key] = prefix(key);\n}\n\nfunction prefix(key){\n    var capitalizedKey = key.replace(/-([a-z])/g, function(s, match){\n            return match.toUpperCase();\n        }),\n        i = prefixes.length,\n        name;\n\n    if (style[capitalizedKey] !== undefined) return capitalizedKey;\n\n    capitalizedKey = capitalize(key);\n\n    while (i--) {\n        name = prefixes[i] + capitalizedKey;\n        if (style[name] !== undefined) return name;\n    }\n\n    throw new Error('unable to prefix ' + key);\n}\n\nfunction capitalize(str){\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nfunction dashedPrefix(key){\n    var prefixedKey = get(key),\n        upper = /([A-Z])/g;\n\n    if (upper.test(prefixedKey)) {\n        prefixedKey = (hasPrefix.test(prefixedKey) ? '-' : '') + prefixedKey.replace(upper, '-$1');\n    }\n\n    return prefixedKey.toLowerCase();\n}\n\nmodule.exports = get;\nmodule.exports.dash = dashedPrefix;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/vendor-prefix/index.js\n ** module id = 8\n ** module chunks = 0\n **/","import utilityRemove from 'lodash/array/remove';\r\nimport utilityAssign from 'lodash/object/assign';\r\nimport utilityRandom from 'lodash/number/random';\r\nimport utilityFind from 'lodash/collection/find';\r\nimport utilityWhere from 'lodash/collection/where';\r\n\r\nlet util;\r\n\r\nutil = {};\r\n\r\nutil.remove = utilityRemove;\r\nutil.assign = utilityAssign;\r\nutil.random = utilityRandom;\r\nutil.find = utilityFind;\r\nutil.where = utilityWhere;\r\n\r\n/**\r\n * Return direct children elements.\r\n *\r\n * @see http://stackoverflow.com/a/27102446/368691\r\n * @param {HTMLElement} element\r\n * @return {Array}\r\n */\r\nutil.elementChildren = (element) => {\r\n    return util.where(element.childNodes, {\r\n        nodeType: 1\r\n    });\r\n};\r\n\r\n/**\r\n * @see http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript/4819886#4819886\r\n * @return {Boolean}\r\n */\r\nutil.isTouchDevice = () => {\r\n    return 'ontouchstart' in window || navigator.msMaxTouchPoints;\r\n};\r\n\r\nexport default util;\r\n\n\n\n/** WEBPACK FOOTER **\n ** C:/bbm/src/swing-fork/src/util.js\n **/","var baseCallback = require('../internal/baseCallback'),\n    basePullAt = require('../internal/basePullAt');\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is bound to\n * `thisArg` and invoked with three arguments: (value, index, array).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate, thisArg) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseCallback(predicate, thisArg, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nmodule.exports = remove;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/array/remove.js\n ** module id = 10\n ** module chunks = 0\n **/","var baseMatches = require('./baseMatches'),\n    baseMatchesProperty = require('./baseMatchesProperty'),\n    bindCallback = require('./bindCallback'),\n    identity = require('../utility/identity'),\n    property = require('../utility/property');\n\n/**\n * The base implementation of `_.callback` which supports specifying the\n * number of arguments to provide to `func`.\n *\n * @private\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction baseCallback(func, thisArg, argCount) {\n  var type = typeof func;\n  if (type == 'function') {\n    return thisArg === undefined\n      ? func\n      : bindCallback(func, thisArg, argCount);\n  }\n  if (func == null) {\n    return identity;\n  }\n  if (type == 'object') {\n    return baseMatches(func);\n  }\n  return thisArg === undefined\n    ? property(func)\n    : baseMatchesProperty(func, thisArg);\n}\n\nmodule.exports = baseCallback;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseCallback.js\n ** module id = 11\n ** module chunks = 0\n **/","var baseIsMatch = require('./baseIsMatch'),\n    getMatchData = require('./getMatchData'),\n    toObject = require('./toObject');\n\n/**\n * The base implementation of `_.matches` which does not clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    var key = matchData[0][0],\n        value = matchData[0][1];\n\n    return function(object) {\n      if (object == null) {\n        return false;\n      }\n      return object[key] === value && (value !== undefined || (key in toObject(object)));\n    };\n  }\n  return function(object) {\n    return baseIsMatch(object, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseMatches.js\n ** module id = 12\n ** module chunks = 0\n **/","var baseIsEqual = require('./baseIsEqual'),\n    toObject = require('./toObject');\n\n/**\n * The base implementation of `_.isMatch` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} matchData The propery names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = toObject(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseIsMatch.js\n ** module id = 13\n ** module chunks = 0\n **/","var baseIsEqualDeep = require('./baseIsEqualDeep'),\n    isObject = require('../lang/isObject'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` without support for `this` binding\n * `customizer` functions.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n}\n\nmodule.exports = baseIsEqual;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseIsEqual.js\n ** module id = 14\n ** module chunks = 0\n **/","var equalArrays = require('./equalArrays'),\n    equalByTag = require('./equalByTag'),\n    equalObjects = require('./equalObjects'),\n    isArray = require('../lang/isArray'),\n    isTypedArray = require('../lang/isTypedArray');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing objects.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = objToString.call(object);\n    if (objTag == argsTag) {\n      objTag = objectTag;\n    } else if (objTag != objectTag) {\n      objIsArr = isTypedArray(object);\n    }\n  }\n  if (!othIsArr) {\n    othTag = objToString.call(other);\n    if (othTag == argsTag) {\n      othTag = objectTag;\n    } else if (othTag != objectTag) {\n      othIsArr = isTypedArray(other);\n    }\n  }\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !(objIsArr || objIsObj)) {\n    return equalByTag(object, other, objTag);\n  }\n  if (!isLoose) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  // For more information on detecting circular references see https://es5.github.io/#JO.\n  stackA || (stackA = []);\n  stackB || (stackB = []);\n\n  var length = stackA.length;\n  while (length--) {\n    if (stackA[length] == object) {\n      return stackB[length] == other;\n    }\n  }\n  // Add `object` and `other` to the stack of traversed objects.\n  stackA.push(object);\n  stackB.push(other);\n\n  var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n  stackA.pop();\n  stackB.pop();\n\n  return result;\n}\n\nmodule.exports = baseIsEqualDeep;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseIsEqualDeep.js\n ** module id = 15\n ** module chunks = 0\n **/","var arraySome = require('./arraySome');\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing arrays.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var index = -1,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n    return false;\n  }\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index],\n        result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n    if (result !== undefined) {\n      if (result) {\n        continue;\n      }\n      return false;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (isLoose) {\n      if (!arraySome(other, function(othValue) {\n            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n          })) {\n        return false;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalArrays;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/equalArrays.js\n ** module id = 16\n ** module chunks = 0\n **/","/**\n * A specialized version of `_.some` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/arraySome.js\n ** module id = 17\n ** module chunks = 0\n **/","/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    stringTag = '[object String]';\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag) {\n  switch (tag) {\n    case boolTag:\n    case dateTag:\n      // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n      return +object == +other;\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case numberTag:\n      // Treat `NaN` vs. `NaN` as equal.\n      return (object != +object)\n        ? other != +other\n        : object == +other;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings primitives and string\n      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n      return object == (other + '');\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/equalByTag.js\n ** module id = 18\n ** module chunks = 0\n **/","var keys = require('../object/keys');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparing values.\n * @param {boolean} [isLoose] Specify performing partial comparisons.\n * @param {Array} [stackA] Tracks traversed `value` objects.\n * @param {Array} [stackB] Tracks traversed `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n  var objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isLoose) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  var skipCtor = isLoose;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key],\n        result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n      return false;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (!skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = equalObjects;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/equalObjects.js\n ** module id = 19\n ** module chunks = 0\n **/","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/object/keys.js\n ** module id = 20\n ** module chunks = 0\n **/","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/getNative.js\n ** module id = 21\n ** module chunks = 0\n **/","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isNative.js\n ** module id = 22\n ** module chunks = 0\n **/","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isFunction.js\n ** module id = 23\n ** module chunks = 0\n **/","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isObject.js\n ** module id = 24\n ** module chunks = 0\n **/","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isObjectLike.js\n ** module id = 25\n ** module chunks = 0\n **/","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isArrayLike.js\n ** module id = 26\n ** module chunks = 0\n **/","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/getLength.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseProperty.js\n ** module id = 28\n ** module chunks = 0\n **/","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isLength.js\n ** module id = 29\n ** module chunks = 0\n **/","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/shimKeys.js\n ** module id = 30\n ** module chunks = 0\n **/","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isArguments.js\n ** module id = 31\n ** module chunks = 0\n **/","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isArray.js\n ** module id = 32\n ** module chunks = 0\n **/","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isIndex.js\n ** module id = 33\n ** module chunks = 0\n **/","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/object/keysIn.js\n ** module id = 34\n ** module chunks = 0\n **/","var isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dateTag] = typedArrayTags[errorTag] =\ntypedArrayTags[funcTag] = typedArrayTags[mapTag] =\ntypedArrayTags[numberTag] = typedArrayTags[objectTag] =\ntypedArrayTags[regexpTag] = typedArrayTags[setTag] =\ntypedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nfunction isTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n}\n\nmodule.exports = isTypedArray;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/lang/isTypedArray.js\n ** module id = 35\n ** module chunks = 0\n **/","var isObject = require('../lang/isObject');\n\n/**\n * Converts `value` to an object if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Object} Returns the object.\n */\nfunction toObject(value) {\n  return isObject(value) ? value : Object(value);\n}\n\nmodule.exports = toObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/toObject.js\n ** module id = 36\n ** module chunks = 0\n **/","var isStrictComparable = require('./isStrictComparable'),\n    pairs = require('../object/pairs');\n\n/**\n * Gets the propery names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = pairs(object),\n      length = result.length;\n\n  while (length--) {\n    result[length][2] = isStrictComparable(result[length][1]);\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/getMatchData.js\n ** module id = 37\n ** module chunks = 0\n **/","var isObject = require('../lang/isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isStrictComparable.js\n ** module id = 38\n ** module chunks = 0\n **/","var keys = require('./keys'),\n    toObject = require('../internal/toObject');\n\n/**\n * Creates a two dimensional array of the key-value pairs for `object`,\n * e.g. `[[key1, value1], [key2, value2]]`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the new array of key-value pairs.\n * @example\n *\n * _.pairs({ 'barney': 36, 'fred': 40 });\n * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n */\nfunction pairs(object) {\n  object = toObject(object);\n\n  var index = -1,\n      props = keys(object),\n      length = props.length,\n      result = Array(length);\n\n  while (++index < length) {\n    var key = props[index];\n    result[index] = [key, object[key]];\n  }\n  return result;\n}\n\nmodule.exports = pairs;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/object/pairs.js\n ** module id = 39\n ** module chunks = 0\n **/","var baseGet = require('./baseGet'),\n    baseIsEqual = require('./baseIsEqual'),\n    baseSlice = require('./baseSlice'),\n    isArray = require('../lang/isArray'),\n    isKey = require('./isKey'),\n    isStrictComparable = require('./isStrictComparable'),\n    last = require('../array/last'),\n    toObject = require('./toObject'),\n    toPath = require('./toPath');\n\n/**\n * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to compare.\n * @returns {Function} Returns the new function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  var isArr = isArray(path),\n      isCommon = isKey(path) && isStrictComparable(srcValue),\n      pathKey = (path + '');\n\n  path = toPath(path);\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    var key = pathKey;\n    object = toObject(object);\n    if ((isArr || !isCommon) && !(key in object)) {\n      object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n      if (object == null) {\n        return false;\n      }\n      key = last(path);\n      object = toObject(object);\n    }\n    return object[key] === srcValue\n      ? (srcValue !== undefined || (key in object))\n      : baseIsEqual(srcValue, object[key], undefined, true);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseMatchesProperty.js\n ** module id = 40\n ** module chunks = 0\n **/","var toObject = require('./toObject');\n\n/**\n * The base implementation of `get` without support for string paths\n * and default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path of the property to get.\n * @param {string} [pathKey] The key representation of path.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path, pathKey) {\n  if (object == null) {\n    return;\n  }\n  if (pathKey !== undefined && pathKey in toObject(object)) {\n    path = [pathKey];\n  }\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[path[index++]];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseGet.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  start = start == null ? 0 : (+start || 0);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : (+end || 0);\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseSlice.js\n ** module id = 42\n ** module chunks = 0\n **/","var isArray = require('../lang/isArray'),\n    toObject = require('./toObject');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  var type = typeof value;\n  if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n    return true;\n  }\n  if (isArray(value)) {\n    return false;\n  }\n  var result = !reIsDeepProp.test(value);\n  return result || (object != null && value in toObject(object));\n}\n\nmodule.exports = isKey;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isKey.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array ? array.length : 0;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/array/last.js\n ** module id = 44\n ** module chunks = 0\n **/","var baseToString = require('./baseToString'),\n    isArray = require('../lang/isArray');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `value` to property path array if it's not one.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {Array} Returns the property path array.\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  var result = [];\n  baseToString(value).replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n}\n\nmodule.exports = toPath;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/toPath.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Converts `value` to a string if it's not one. An empty string is returned\n * for `null` or `undefined` values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  return value == null ? '' : (value + '');\n}\n\nmodule.exports = baseToString;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseToString.js\n ** module id = 46\n ** module chunks = 0\n **/","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/bindCallback.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/utility/identity.js\n ** module id = 48\n ** module chunks = 0\n **/","var baseProperty = require('../internal/baseProperty'),\n    basePropertyDeep = require('../internal/basePropertyDeep'),\n    isKey = require('../internal/isKey');\n\n/**\n * Creates a function that returns the property value at `path` on a\n * given object.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': { 'c': 2 } } },\n *   { 'a': { 'b': { 'c': 1 } } }\n * ];\n *\n * _.map(objects, _.property('a.b.c'));\n * // => [2, 1]\n *\n * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/utility/property.js\n ** module id = 49\n ** module chunks = 0\n **/","var baseGet = require('./baseGet'),\n    toPath = require('./toPath');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction basePropertyDeep(path) {\n  var pathKey = (path + '');\n  path = toPath(path);\n  return function(object) {\n    return baseGet(object, path, pathKey);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/basePropertyDeep.js\n ** module id = 50\n ** module chunks = 0\n **/","var isIndex = require('./isIndex');\n\n/** Used for native method references. */\nvar arrayProto = Array.prototype;\n\n/** Native method references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * index arguments and capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0;\n  while (length--) {\n    var index = indexes[length];\n    if (index != previous && isIndex(index)) {\n      var previous = index;\n      splice.call(array, index, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAt;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/basePullAt.js\n ** module id = 51\n ** module chunks = 0\n **/","var assignWith = require('../internal/assignWith'),\n    baseAssign = require('../internal/baseAssign'),\n    createAssigner = require('../internal/createAssigner');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it's invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/object/assign.js\n ** module id = 52\n ** module chunks = 0\n **/","var keys = require('../object/keys');\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\nmodule.exports = assignWith;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/assignWith.js\n ** module id = 53\n ** module chunks = 0\n **/","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseAssign.js\n ** module id = 54\n ** module chunks = 0\n **/","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseCopy.js\n ** module id = 55\n ** module chunks = 0\n **/","var bindCallback = require('./bindCallback'),\n    isIterateeCall = require('./isIterateeCall'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/createAssigner.js\n ** module id = 56\n ** module chunks = 0\n **/","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/isIterateeCall.js\n ** module id = 57\n ** module chunks = 0\n **/","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/function/restParam.js\n ** module id = 58\n ** module chunks = 0\n **/","var baseRandom = require('../internal/baseRandom'),\n    isIterateeCall = require('../internal/isIterateeCall');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between `min` and `max` (inclusive). If only one\n * argument is provided a number between `0` and the given number is returned.\n * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n * number is returned instead of an integer.\n *\n * @static\n * @memberOf _\n * @category Number\n * @param {number} [min=0] The minimum possible value.\n * @param {number} [max=1] The maximum possible value.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(min, max, floating) {\n  if (floating && isIterateeCall(min, max, floating)) {\n    max = floating = undefined;\n  }\n  var noMin = min == null,\n      noMax = max == null;\n\n  if (floating == null) {\n    if (noMax && typeof min == 'boolean') {\n      floating = min;\n      min = 1;\n    }\n    else if (typeof max == 'boolean') {\n      floating = max;\n      noMax = true;\n    }\n  }\n  if (noMin && noMax) {\n    max = 1;\n    noMax = false;\n  }\n  min = +min || 0;\n  if (noMax) {\n    max = min;\n    min = 0;\n  } else {\n    max = +max || 0;\n  }\n  if (floating || min % 1 || max % 1) {\n    var rand = nativeRandom();\n    return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n  }\n  return baseRandom(min, max);\n}\n\nmodule.exports = random;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/number/random.js\n ** module id = 59\n ** module chunks = 0\n **/","/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for argument juggling\n * and returning floating-point numbers.\n *\n * @private\n * @param {number} min The minimum possible value.\n * @param {number} max The maximum possible value.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(min, max) {\n  return min + nativeFloor(nativeRandom() * (max - min + 1));\n}\n\nmodule.exports = baseRandom;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseRandom.js\n ** module id = 60\n ** module chunks = 0\n **/","var baseEach = require('../internal/baseEach'),\n    createFind = require('../internal/createFind');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias detect\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.result(_.find(users, function(chr) {\n *   return chr.age < 40;\n * }), 'user');\n * // => 'barney'\n *\n * // using the `_.matches` callback shorthand\n * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n * // => 'pebbles'\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.result(_.find(users, 'active', false), 'user');\n * // => 'fred'\n *\n * // using the `_.property` callback shorthand\n * _.result(_.find(users, 'active'), 'user');\n * // => 'barney'\n */\nvar find = createFind(baseEach);\n\nmodule.exports = find;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/collection/find.js\n ** module id = 61\n ** module chunks = 0\n **/","var baseForOwn = require('./baseForOwn'),\n    createBaseEach = require('./createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object|string} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseEach.js\n ** module id = 62\n ** module chunks = 0\n **/","var baseFor = require('./baseFor'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.forOwn` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseForOwn.js\n ** module id = 63\n ** module chunks = 0\n **/","var createBaseFor = require('./createBaseFor');\n\n/**\n * The base implementation of `baseForIn` and `baseForOwn` which iterates\n * over `object` properties returned by `keysFunc` invoking `iteratee` for\n * each property. Iteratee functions may exit iteration early by explicitly\n * returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseFor.js\n ** module id = 64\n ** module chunks = 0\n **/","var toObject = require('./toObject');\n\n/**\n * Creates a base function for `_.forIn` or `_.forInRight`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var iterable = toObject(object),\n        props = keysFunc(object),\n        length = props.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var key = props[index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/createBaseFor.js\n ** module id = 65\n ** module chunks = 0\n **/","var getLength = require('./getLength'),\n    isLength = require('./isLength'),\n    toObject = require('./toObject');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    var length = collection ? getLength(collection) : 0;\n    if (!isLength(length)) {\n      return eachFunc(collection, iteratee);\n    }\n    var index = fromRight ? length : -1,\n        iterable = toObject(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/createBaseEach.js\n ** module id = 66\n ** module chunks = 0\n **/","var baseCallback = require('./baseCallback'),\n    baseFind = require('./baseFind'),\n    baseFindIndex = require('./baseFindIndex'),\n    isArray = require('../lang/isArray');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(eachFunc, fromRight) {\n  return function(collection, predicate, thisArg) {\n    predicate = baseCallback(predicate, thisArg, 3);\n    if (isArray(collection)) {\n      var index = baseFindIndex(collection, predicate, fromRight);\n      return index > -1 ? collection[index] : undefined;\n    }\n    return baseFind(collection, predicate, eachFunc);\n  };\n}\n\nmodule.exports = createFind;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/createFind.js\n ** module id = 67\n ** module chunks = 0\n **/","/**\n * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n * without support for callback shorthands and `this` binding, which iterates\n * over `collection` using the provided `eachFunc`.\n *\n * @private\n * @param {Array|Object|string} collection The collection to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @param {boolean} [retKey] Specify returning the key of the found element\n *  instead of the element itself.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFind(collection, predicate, eachFunc, retKey) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = retKey ? key : value;\n      return false;\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFind;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseFind.js\n ** module id = 68\n ** module chunks = 0\n **/","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for callback shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to search.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseFindIndex.js\n ** module id = 69\n ** module chunks = 0\n **/","var baseMatches = require('../internal/baseMatches'),\n    filter = require('./filter');\n\n/**\n * Performs a deep comparison between each element in `collection` and the\n * source object, returning an array of all elements that have equivalent\n * property values.\n *\n * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n * numbers, `Object` objects, regexes, and strings. Objects are compared by\n * their own, not inherited, enumerable properties. For comparing a single\n * own or inherited property value see `_.matchesProperty`.\n *\n * @static\n * @memberOf _\n * @category Collection\n * @param {Array|Object|string} collection The collection to search.\n * @param {Object} source The object of property values to match.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n * ];\n *\n * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n * // => ['barney']\n *\n * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n * // => ['fred']\n */\nfunction where(collection, source) {\n  return filter(collection, baseMatches(source));\n}\n\nmodule.exports = where;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/collection/where.js\n ** module id = 70\n ** module chunks = 0\n **/","var arrayFilter = require('../internal/arrayFilter'),\n    baseCallback = require('../internal/baseCallback'),\n    baseFilter = require('../internal/baseFilter'),\n    isArray = require('../lang/isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n * invoked with three arguments: (value, index|key, collection).\n *\n * If a property name is provided for `predicate` the created `_.property`\n * style callback returns the property value of the given element.\n *\n * If a value is also provided for `thisArg` the created `_.matchesProperty`\n * style callback returns `true` for elements that have a matching property\n * value, else `false`.\n *\n * If an object is provided for `predicate` the created `_.matches` style\n * callback returns `true` for elements that have the properties of the given\n * object, else `false`.\n *\n * @static\n * @memberOf _\n * @alias select\n * @category Collection\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function|Object|string} [predicate=_.identity] The function invoked\n *  per iteration.\n * @param {*} [thisArg] The `this` binding of `predicate`.\n * @returns {Array} Returns the new filtered array.\n * @example\n *\n * _.filter([4, 5, 6], function(n) {\n *   return n % 2 == 0;\n * });\n * // => [4, 6]\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // using the `_.matches` callback shorthand\n * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n * // => ['barney']\n *\n * // using the `_.matchesProperty` callback shorthand\n * _.pluck(_.filter(users, 'active', false), 'user');\n * // => ['fred']\n *\n * // using the `_.property` callback shorthand\n * _.pluck(_.filter(users, 'active'), 'user');\n * // => ['barney']\n */\nfunction filter(collection, predicate, thisArg) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  predicate = baseCallback(predicate, thisArg, 3);\n  return func(collection, predicate);\n}\n\nmodule.exports = filter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/collection/filter.js\n ** module id = 71\n ** module chunks = 0\n **/","/**\n * A specialized version of `_.filter` for arrays without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array.length,\n      resIndex = -1,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[++resIndex] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/arrayFilter.js\n ** module id = 72\n ** module chunks = 0\n **/","var baseEach = require('./baseEach');\n\n/**\n * The base implementation of `_.filter` without support for callback\n * shorthands and `this` binding.\n *\n * @private\n * @param {Array|Object|string} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/lodash/internal/baseFilter.js\n ** module id = 73\n ** module chunks = 0\n **/","var now = require('performance-now')\n  , global = typeof window === 'undefined' ? {} : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = global['request' + suffix]\n  , caf = global['cancel' + suffix] || global['cancelRequest' + suffix]\n\nfor(var i = 0; i < vendors.length && !raf; i++) {\n  raf = global[vendors[i] + 'Request' + suffix]\n  caf = global[vendors[i] + 'Cancel' + suffix]\n      || global[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(global, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(global, arguments)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/raf/index.js\n ** module id = 74\n ** module chunks = 0\n **/","// Generated by CoffeeScript 1.7.1\n(function() {\n  var getNanoSeconds, hrtime, loadTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - loadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    loadTime = getNanoSeconds();\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../~/raf/~/performance-now/lib/performance-now.js\n ** module id = 75\n ** module chunks = 0\n **/"],"sourceRoot":""}